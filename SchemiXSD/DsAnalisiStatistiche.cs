//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace TheSite.SchemiXSD {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class DsAnalisiStatistiche : DataSet {
        
        private _TableDataTable table_Table;
        
        private tblgiudizioDataTable tabletblgiudizio;
        
        private ChartRadarDataTable tableChartRadar;
        
        public DsAnalisiStatistiche() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DsAnalisiStatistiche(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table"] != null)) {
                    this.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                if ((ds.Tables["tblgiudizio"] != null)) {
                    this.Tables.Add(new tblgiudizioDataTable(ds.Tables["tblgiudizio"]));
                }
                if ((ds.Tables["ChartRadar"] != null)) {
                    this.Tables.Add(new ChartRadarDataTable(ds.Tables["ChartRadar"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _TableDataTable _Table {
            get {
                return this.table_Table;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblgiudizioDataTable tblgiudizio {
            get {
                return this.tabletblgiudizio;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ChartRadarDataTable ChartRadar {
            get {
                return this.tableChartRadar;
            }
        }
        
        public override DataSet Clone() {
            DsAnalisiStatistiche cln = ((DsAnalisiStatistiche)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["Table"] != null)) {
                this.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
            }
            if ((ds.Tables["tblgiudizio"] != null)) {
                this.Tables.Add(new tblgiudizioDataTable(ds.Tables["tblgiudizio"]));
            }
            if ((ds.Tables["ChartRadar"] != null)) {
                this.Tables.Add(new ChartRadarDataTable(ds.Tables["ChartRadar"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.table_Table = ((_TableDataTable)(this.Tables["Table"]));
            if ((this.table_Table != null)) {
                this.table_Table.InitVars();
            }
            this.tabletblgiudizio = ((tblgiudizioDataTable)(this.Tables["tblgiudizio"]));
            if ((this.tabletblgiudizio != null)) {
                this.tabletblgiudizio.InitVars();
            }
            this.tableChartRadar = ((ChartRadarDataTable)(this.Tables["ChartRadar"]));
            if ((this.tableChartRadar != null)) {
                this.tableChartRadar.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "DsAnalisiStatistiche";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DsAnalisiStatistiche.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.table_Table = new _TableDataTable();
            this.Tables.Add(this.table_Table);
            this.tabletblgiudizio = new tblgiudizioDataTable();
            this.Tables.Add(this.tabletblgiudizio);
            this.tableChartRadar = new ChartRadarDataTable();
            this.Tables.Add(this.tableChartRadar);
        }
        
        private bool ShouldSerialize_Table() {
            return false;
        }
        
        private bool ShouldSerializetblgiudizio() {
            return false;
        }
        
        private bool ShouldSerializeChartRadar() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void _TableRowChangeEventHandler(object sender, _TableRowChangeEvent e);
        
        public delegate void tblgiudizioRowChangeEventHandler(object sender, tblgiudizioRowChangeEvent e);
        
        public delegate void ChartRadarRowChangeEventHandler(object sender, ChartRadarRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class _TableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnI_RDL;
            
            private DataColumn columnI_PERCENTUALE;
            
            private DataColumn columnS_DITTA;
            
            private DataColumn columnS_DITTAM;
            
            private DataColumn columnS_SERVIZIO;
            
            private DataColumn columnS_STATO;
            
            private DataColumn columnS_DESCRIZIONE;
            
            private DataColumn columnS_GIORNO;
            
            private DataColumn columnS_LGIORNO;
            
            private DataColumn columnS_MESE;
            
            private DataColumn columnS_LMESE;
            
            private DataColumn columnS_ANNO;
            
            internal _TableDataTable() : 
                    base("Table") {
                this.InitClass();
            }
            
            internal _TableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn I_RDLColumn {
                get {
                    return this.columnI_RDL;
                }
            }
            
            internal DataColumn I_PERCENTUALEColumn {
                get {
                    return this.columnI_PERCENTUALE;
                }
            }
            
            internal DataColumn S_DITTAColumn {
                get {
                    return this.columnS_DITTA;
                }
            }
            
            internal DataColumn S_DITTAMColumn {
                get {
                    return this.columnS_DITTAM;
                }
            }
            
            internal DataColumn S_SERVIZIOColumn {
                get {
                    return this.columnS_SERVIZIO;
                }
            }
            
            internal DataColumn S_STATOColumn {
                get {
                    return this.columnS_STATO;
                }
            }
            
            internal DataColumn S_DESCRIZIONEColumn {
                get {
                    return this.columnS_DESCRIZIONE;
                }
            }
            
            internal DataColumn S_GIORNOColumn {
                get {
                    return this.columnS_GIORNO;
                }
            }
            
            internal DataColumn S_LGIORNOColumn {
                get {
                    return this.columnS_LGIORNO;
                }
            }
            
            internal DataColumn S_MESEColumn {
                get {
                    return this.columnS_MESE;
                }
            }
            
            internal DataColumn S_LMESEColumn {
                get {
                    return this.columnS_LMESE;
                }
            }
            
            internal DataColumn S_ANNOColumn {
                get {
                    return this.columnS_ANNO;
                }
            }
            
            public _TableRow this[int index] {
                get {
                    return ((_TableRow)(this.Rows[index]));
                }
            }
            
            public event _TableRowChangeEventHandler _TableRowChanged;
            
            public event _TableRowChangeEventHandler _TableRowChanging;
            
            public event _TableRowChangeEventHandler _TableRowDeleted;
            
            public event _TableRowChangeEventHandler _TableRowDeleting;
            
            public void Add_TableRow(_TableRow row) {
                this.Rows.Add(row);
            }
            
            public _TableRow Add_TableRow(long I_RDL, System.Single I_PERCENTUALE, string S_DITTA, string S_DITTAM, string S_SERVIZIO, string S_STATO, string S_DESCRIZIONE, string S_GIORNO, string S_LGIORNO, string S_MESE, string S_LMESE, string S_ANNO) {
                _TableRow row_TableRow = ((_TableRow)(this.NewRow()));
                row_TableRow.ItemArray = new object[] {
                        I_RDL,
                        I_PERCENTUALE,
                        S_DITTA,
                        S_DITTAM,
                        S_SERVIZIO,
                        S_STATO,
                        S_DESCRIZIONE,
                        S_GIORNO,
                        S_LGIORNO,
                        S_MESE,
                        S_LMESE,
                        S_ANNO};
                this.Rows.Add(row_TableRow);
                return row_TableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                _TableDataTable cln = ((_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new _TableDataTable();
            }
            
            internal void InitVars() {
                this.columnI_RDL = this.Columns["I_RDL"];
                this.columnI_PERCENTUALE = this.Columns["I_PERCENTUALE"];
                this.columnS_DITTA = this.Columns["S_DITTA"];
                this.columnS_DITTAM = this.Columns["S_DITTAM"];
                this.columnS_SERVIZIO = this.Columns["S_SERVIZIO"];
                this.columnS_STATO = this.Columns["S_STATO"];
                this.columnS_DESCRIZIONE = this.Columns["S_DESCRIZIONE"];
                this.columnS_GIORNO = this.Columns["S_GIORNO"];
                this.columnS_LGIORNO = this.Columns["S_LGIORNO"];
                this.columnS_MESE = this.Columns["S_MESE"];
                this.columnS_LMESE = this.Columns["S_LMESE"];
                this.columnS_ANNO = this.Columns["S_ANNO"];
            }
            
            private void InitClass() {
                this.columnI_RDL = new DataColumn("I_RDL", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnI_RDL);
                this.columnI_PERCENTUALE = new DataColumn("I_PERCENTUALE", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnI_PERCENTUALE);
                this.columnS_DITTA = new DataColumn("S_DITTA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnS_DITTA);
                this.columnS_DITTAM = new DataColumn("S_DITTAM", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnS_DITTAM);
                this.columnS_SERVIZIO = new DataColumn("S_SERVIZIO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnS_SERVIZIO);
                this.columnS_STATO = new DataColumn("S_STATO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnS_STATO);
                this.columnS_DESCRIZIONE = new DataColumn("S_DESCRIZIONE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnS_DESCRIZIONE);
                this.columnS_GIORNO = new DataColumn("S_GIORNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnS_GIORNO);
                this.columnS_LGIORNO = new DataColumn("S_LGIORNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnS_LGIORNO);
                this.columnS_MESE = new DataColumn("S_MESE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnS_MESE);
                this.columnS_LMESE = new DataColumn("S_LMESE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnS_LMESE);
                this.columnS_ANNO = new DataColumn("S_ANNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnS_ANNO);
            }
            
            public _TableRow New_TableRow() {
                return ((_TableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new _TableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(_TableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._TableRowChanged != null)) {
                    this._TableRowChanged(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._TableRowChanging != null)) {
                    this._TableRowChanging(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._TableRowDeleted != null)) {
                    this._TableRowDeleted(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._TableRowDeleting != null)) {
                    this._TableRowDeleting(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            public void Remove_TableRow(_TableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class _TableRow : DataRow {
            
            private _TableDataTable table_Table;
            
            internal _TableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.table_Table = ((_TableDataTable)(this.Table));
            }
            
            public long I_RDL {
                get {
                    try {
                        return ((long)(this[this.table_Table.I_RDLColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.I_RDLColumn] = value;
                }
            }
            
            public System.Single I_PERCENTUALE {
                get {
                    try {
                        return ((System.Single)(this[this.table_Table.I_PERCENTUALEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.I_PERCENTUALEColumn] = value;
                }
            }
            
            public string S_DITTA {
                get {
                    try {
                        return ((string)(this[this.table_Table.S_DITTAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.S_DITTAColumn] = value;
                }
            }
            
            public string S_DITTAM {
                get {
                    try {
                        return ((string)(this[this.table_Table.S_DITTAMColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.S_DITTAMColumn] = value;
                }
            }
            
            public string S_SERVIZIO {
                get {
                    try {
                        return ((string)(this[this.table_Table.S_SERVIZIOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.S_SERVIZIOColumn] = value;
                }
            }
            
            public string S_STATO {
                get {
                    try {
                        return ((string)(this[this.table_Table.S_STATOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.S_STATOColumn] = value;
                }
            }
            
            public string S_DESCRIZIONE {
                get {
                    try {
                        return ((string)(this[this.table_Table.S_DESCRIZIONEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.S_DESCRIZIONEColumn] = value;
                }
            }
            
            public string S_GIORNO {
                get {
                    try {
                        return ((string)(this[this.table_Table.S_GIORNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.S_GIORNOColumn] = value;
                }
            }
            
            public string S_LGIORNO {
                get {
                    try {
                        return ((string)(this[this.table_Table.S_LGIORNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.S_LGIORNOColumn] = value;
                }
            }
            
            public string S_MESE {
                get {
                    try {
                        return ((string)(this[this.table_Table.S_MESEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.S_MESEColumn] = value;
                }
            }
            
            public string S_LMESE {
                get {
                    try {
                        return ((string)(this[this.table_Table.S_LMESEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.S_LMESEColumn] = value;
                }
            }
            
            public string S_ANNO {
                get {
                    try {
                        return ((string)(this[this.table_Table.S_ANNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.S_ANNOColumn] = value;
                }
            }
            
            public bool IsI_RDLNull() {
                return this.IsNull(this.table_Table.I_RDLColumn);
            }
            
            public void SetI_RDLNull() {
                this[this.table_Table.I_RDLColumn] = System.Convert.DBNull;
            }
            
            public bool IsI_PERCENTUALENull() {
                return this.IsNull(this.table_Table.I_PERCENTUALEColumn);
            }
            
            public void SetI_PERCENTUALENull() {
                this[this.table_Table.I_PERCENTUALEColumn] = System.Convert.DBNull;
            }
            
            public bool IsS_DITTANull() {
                return this.IsNull(this.table_Table.S_DITTAColumn);
            }
            
            public void SetS_DITTANull() {
                this[this.table_Table.S_DITTAColumn] = System.Convert.DBNull;
            }
            
            public bool IsS_DITTAMNull() {
                return this.IsNull(this.table_Table.S_DITTAMColumn);
            }
            
            public void SetS_DITTAMNull() {
                this[this.table_Table.S_DITTAMColumn] = System.Convert.DBNull;
            }
            
            public bool IsS_SERVIZIONull() {
                return this.IsNull(this.table_Table.S_SERVIZIOColumn);
            }
            
            public void SetS_SERVIZIONull() {
                this[this.table_Table.S_SERVIZIOColumn] = System.Convert.DBNull;
            }
            
            public bool IsS_STATONull() {
                return this.IsNull(this.table_Table.S_STATOColumn);
            }
            
            public void SetS_STATONull() {
                this[this.table_Table.S_STATOColumn] = System.Convert.DBNull;
            }
            
            public bool IsS_DESCRIZIONENull() {
                return this.IsNull(this.table_Table.S_DESCRIZIONEColumn);
            }
            
            public void SetS_DESCRIZIONENull() {
                this[this.table_Table.S_DESCRIZIONEColumn] = System.Convert.DBNull;
            }
            
            public bool IsS_GIORNONull() {
                return this.IsNull(this.table_Table.S_GIORNOColumn);
            }
            
            public void SetS_GIORNONull() {
                this[this.table_Table.S_GIORNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsS_LGIORNONull() {
                return this.IsNull(this.table_Table.S_LGIORNOColumn);
            }
            
            public void SetS_LGIORNONull() {
                this[this.table_Table.S_LGIORNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsS_MESENull() {
                return this.IsNull(this.table_Table.S_MESEColumn);
            }
            
            public void SetS_MESENull() {
                this[this.table_Table.S_MESEColumn] = System.Convert.DBNull;
            }
            
            public bool IsS_LMESENull() {
                return this.IsNull(this.table_Table.S_LMESEColumn);
            }
            
            public void SetS_LMESENull() {
                this[this.table_Table.S_LMESEColumn] = System.Convert.DBNull;
            }
            
            public bool IsS_ANNONull() {
                return this.IsNull(this.table_Table.S_ANNOColumn);
            }
            
            public void SetS_ANNONull() {
                this[this.table_Table.S_ANNOColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class _TableRowChangeEvent : EventArgs {
            
            private _TableRow eventRow;
            
            private DataRowAction eventAction;
            
            public _TableRowChangeEvent(_TableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public _TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tblgiudizioDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnn_giudizio;
            
            private DataColumn columndesc_giud;
            
            private DataColumn columndesc_serv;
            
            private DataColumn columntip_giudizio;
            
            private DataColumn columni_percentuale;
            
            private DataColumn columns_mese;
            
            private DataColumn columns_lmese;
            
            private DataColumn columns_anno;
            
            internal tblgiudizioDataTable() : 
                    base("tblgiudizio") {
                this.InitClass();
            }
            
            internal tblgiudizioDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn n_giudizioColumn {
                get {
                    return this.columnn_giudizio;
                }
            }
            
            internal DataColumn desc_giudColumn {
                get {
                    return this.columndesc_giud;
                }
            }
            
            internal DataColumn desc_servColumn {
                get {
                    return this.columndesc_serv;
                }
            }
            
            internal DataColumn tip_giudizioColumn {
                get {
                    return this.columntip_giudizio;
                }
            }
            
            internal DataColumn i_percentualeColumn {
                get {
                    return this.columni_percentuale;
                }
            }
            
            internal DataColumn s_meseColumn {
                get {
                    return this.columns_mese;
                }
            }
            
            internal DataColumn s_lmeseColumn {
                get {
                    return this.columns_lmese;
                }
            }
            
            internal DataColumn s_annoColumn {
                get {
                    return this.columns_anno;
                }
            }
            
            public tblgiudizioRow this[int index] {
                get {
                    return ((tblgiudizioRow)(this.Rows[index]));
                }
            }
            
            public event tblgiudizioRowChangeEventHandler tblgiudizioRowChanged;
            
            public event tblgiudizioRowChangeEventHandler tblgiudizioRowChanging;
            
            public event tblgiudizioRowChangeEventHandler tblgiudizioRowDeleted;
            
            public event tblgiudizioRowChangeEventHandler tblgiudizioRowDeleting;
            
            public void AddtblgiudizioRow(tblgiudizioRow row) {
                this.Rows.Add(row);
            }
            
            public tblgiudizioRow AddtblgiudizioRow(long n_giudizio, string desc_giud, string desc_serv, string tip_giudizio, System.Single i_percentuale, string s_mese, string s_lmese, string s_anno) {
                tblgiudizioRow rowtblgiudizioRow = ((tblgiudizioRow)(this.NewRow()));
                rowtblgiudizioRow.ItemArray = new object[] {
                        n_giudizio,
                        desc_giud,
                        desc_serv,
                        tip_giudizio,
                        i_percentuale,
                        s_mese,
                        s_lmese,
                        s_anno};
                this.Rows.Add(rowtblgiudizioRow);
                return rowtblgiudizioRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                tblgiudizioDataTable cln = ((tblgiudizioDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new tblgiudizioDataTable();
            }
            
            internal void InitVars() {
                this.columnn_giudizio = this.Columns["n_giudizio"];
                this.columndesc_giud = this.Columns["desc_giud"];
                this.columndesc_serv = this.Columns["desc_serv"];
                this.columntip_giudizio = this.Columns["tip_giudizio"];
                this.columni_percentuale = this.Columns["i_percentuale"];
                this.columns_mese = this.Columns["s_mese"];
                this.columns_lmese = this.Columns["s_lmese"];
                this.columns_anno = this.Columns["s_anno"];
            }
            
            private void InitClass() {
                this.columnn_giudizio = new DataColumn("n_giudizio", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnn_giudizio);
                this.columndesc_giud = new DataColumn("desc_giud", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndesc_giud);
                this.columndesc_serv = new DataColumn("desc_serv", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndesc_serv);
                this.columntip_giudizio = new DataColumn("tip_giudizio", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntip_giudizio);
                this.columni_percentuale = new DataColumn("i_percentuale", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columni_percentuale);
                this.columns_mese = new DataColumn("s_mese", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columns_mese);
                this.columns_lmese = new DataColumn("s_lmese", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columns_lmese);
                this.columns_anno = new DataColumn("s_anno", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columns_anno);
            }
            
            public tblgiudizioRow NewtblgiudizioRow() {
                return ((tblgiudizioRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new tblgiudizioRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(tblgiudizioRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblgiudizioRowChanged != null)) {
                    this.tblgiudizioRowChanged(this, new tblgiudizioRowChangeEvent(((tblgiudizioRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblgiudizioRowChanging != null)) {
                    this.tblgiudizioRowChanging(this, new tblgiudizioRowChangeEvent(((tblgiudizioRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblgiudizioRowDeleted != null)) {
                    this.tblgiudizioRowDeleted(this, new tblgiudizioRowChangeEvent(((tblgiudizioRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblgiudizioRowDeleting != null)) {
                    this.tblgiudizioRowDeleting(this, new tblgiudizioRowChangeEvent(((tblgiudizioRow)(e.Row)), e.Action));
                }
            }
            
            public void RemovetblgiudizioRow(tblgiudizioRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tblgiudizioRow : DataRow {
            
            private tblgiudizioDataTable tabletblgiudizio;
            
            internal tblgiudizioRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblgiudizio = ((tblgiudizioDataTable)(this.Table));
            }
            
            public long n_giudizio {
                get {
                    try {
                        return ((long)(this[this.tabletblgiudizio.n_giudizioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblgiudizio.n_giudizioColumn] = value;
                }
            }
            
            public string desc_giud {
                get {
                    try {
                        return ((string)(this[this.tabletblgiudizio.desc_giudColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblgiudizio.desc_giudColumn] = value;
                }
            }
            
            public string desc_serv {
                get {
                    try {
                        return ((string)(this[this.tabletblgiudizio.desc_servColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblgiudizio.desc_servColumn] = value;
                }
            }
            
            public string tip_giudizio {
                get {
                    try {
                        return ((string)(this[this.tabletblgiudizio.tip_giudizioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblgiudizio.tip_giudizioColumn] = value;
                }
            }
            
            public System.Single i_percentuale {
                get {
                    try {
                        return ((System.Single)(this[this.tabletblgiudizio.i_percentualeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblgiudizio.i_percentualeColumn] = value;
                }
            }
            
            public string s_mese {
                get {
                    try {
                        return ((string)(this[this.tabletblgiudizio.s_meseColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblgiudizio.s_meseColumn] = value;
                }
            }
            
            public string s_lmese {
                get {
                    try {
                        return ((string)(this[this.tabletblgiudizio.s_lmeseColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblgiudizio.s_lmeseColumn] = value;
                }
            }
            
            public string s_anno {
                get {
                    try {
                        return ((string)(this[this.tabletblgiudizio.s_annoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblgiudizio.s_annoColumn] = value;
                }
            }
            
            public bool Isn_giudizioNull() {
                return this.IsNull(this.tabletblgiudizio.n_giudizioColumn);
            }
            
            public void Setn_giudizioNull() {
                this[this.tabletblgiudizio.n_giudizioColumn] = System.Convert.DBNull;
            }
            
            public bool Isdesc_giudNull() {
                return this.IsNull(this.tabletblgiudizio.desc_giudColumn);
            }
            
            public void Setdesc_giudNull() {
                this[this.tabletblgiudizio.desc_giudColumn] = System.Convert.DBNull;
            }
            
            public bool Isdesc_servNull() {
                return this.IsNull(this.tabletblgiudizio.desc_servColumn);
            }
            
            public void Setdesc_servNull() {
                this[this.tabletblgiudizio.desc_servColumn] = System.Convert.DBNull;
            }
            
            public bool Istip_giudizioNull() {
                return this.IsNull(this.tabletblgiudizio.tip_giudizioColumn);
            }
            
            public void Settip_giudizioNull() {
                this[this.tabletblgiudizio.tip_giudizioColumn] = System.Convert.DBNull;
            }
            
            public bool Isi_percentualeNull() {
                return this.IsNull(this.tabletblgiudizio.i_percentualeColumn);
            }
            
            public void Seti_percentualeNull() {
                this[this.tabletblgiudizio.i_percentualeColumn] = System.Convert.DBNull;
            }
            
            public bool Iss_meseNull() {
                return this.IsNull(this.tabletblgiudizio.s_meseColumn);
            }
            
            public void Sets_meseNull() {
                this[this.tabletblgiudizio.s_meseColumn] = System.Convert.DBNull;
            }
            
            public bool Iss_lmeseNull() {
                return this.IsNull(this.tabletblgiudizio.s_lmeseColumn);
            }
            
            public void Sets_lmeseNull() {
                this[this.tabletblgiudizio.s_lmeseColumn] = System.Convert.DBNull;
            }
            
            public bool Iss_annoNull() {
                return this.IsNull(this.tabletblgiudizio.s_annoColumn);
            }
            
            public void Sets_annoNull() {
                this[this.tabletblgiudizio.s_annoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class tblgiudizioRowChangeEvent : EventArgs {
            
            private tblgiudizioRow eventRow;
            
            private DataRowAction eventAction;
            
            public tblgiudizioRowChangeEvent(tblgiudizioRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public tblgiudizioRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ChartRadarDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnGG;
            
            private DataColumn columnDELTA;
            
            private DataColumn columnPRIORITY;
            
            private DataColumn columnPENALE;
            
            private DataColumn columnMEDIA;
            
            private DataColumn columnVARIANZA;
            
            internal ChartRadarDataTable() : 
                    base("ChartRadar") {
                this.InitClass();
            }
            
            internal ChartRadarDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn GGColumn {
                get {
                    return this.columnGG;
                }
            }
            
            internal DataColumn DELTAColumn {
                get {
                    return this.columnDELTA;
                }
            }
            
            internal DataColumn PRIORITYColumn {
                get {
                    return this.columnPRIORITY;
                }
            }
            
            internal DataColumn PENALEColumn {
                get {
                    return this.columnPENALE;
                }
            }
            
            internal DataColumn MEDIAColumn {
                get {
                    return this.columnMEDIA;
                }
            }
            
            internal DataColumn VARIANZAColumn {
                get {
                    return this.columnVARIANZA;
                }
            }
            
            public ChartRadarRow this[int index] {
                get {
                    return ((ChartRadarRow)(this.Rows[index]));
                }
            }
            
            public event ChartRadarRowChangeEventHandler ChartRadarRowChanged;
            
            public event ChartRadarRowChangeEventHandler ChartRadarRowChanging;
            
            public event ChartRadarRowChangeEventHandler ChartRadarRowDeleted;
            
            public event ChartRadarRowChangeEventHandler ChartRadarRowDeleting;
            
            public void AddChartRadarRow(ChartRadarRow row) {
                this.Rows.Add(row);
            }
            
            public ChartRadarRow AddChartRadarRow(long GG, long DELTA, long PRIORITY, long PENALE, System.Double MEDIA, System.Double VARIANZA) {
                ChartRadarRow rowChartRadarRow = ((ChartRadarRow)(this.NewRow()));
                rowChartRadarRow.ItemArray = new object[] {
                        GG,
                        DELTA,
                        PRIORITY,
                        PENALE,
                        MEDIA,
                        VARIANZA};
                this.Rows.Add(rowChartRadarRow);
                return rowChartRadarRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ChartRadarDataTable cln = ((ChartRadarDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ChartRadarDataTable();
            }
            
            internal void InitVars() {
                this.columnGG = this.Columns["GG"];
                this.columnDELTA = this.Columns["DELTA"];
                this.columnPRIORITY = this.Columns["PRIORITY"];
                this.columnPENALE = this.Columns["PENALE"];
                this.columnMEDIA = this.Columns["MEDIA"];
                this.columnVARIANZA = this.Columns["VARIANZA"];
            }
            
            private void InitClass() {
                this.columnGG = new DataColumn("GG", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnGG);
                this.columnDELTA = new DataColumn("DELTA", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDELTA);
                this.columnPRIORITY = new DataColumn("PRIORITY", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPRIORITY);
                this.columnPENALE = new DataColumn("PENALE", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPENALE);
                this.columnMEDIA = new DataColumn("MEDIA", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMEDIA);
                this.columnVARIANZA = new DataColumn("VARIANZA", typeof(System.Double), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVARIANZA);
            }
            
            public ChartRadarRow NewChartRadarRow() {
                return ((ChartRadarRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ChartRadarRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ChartRadarRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ChartRadarRowChanged != null)) {
                    this.ChartRadarRowChanged(this, new ChartRadarRowChangeEvent(((ChartRadarRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ChartRadarRowChanging != null)) {
                    this.ChartRadarRowChanging(this, new ChartRadarRowChangeEvent(((ChartRadarRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ChartRadarRowDeleted != null)) {
                    this.ChartRadarRowDeleted(this, new ChartRadarRowChangeEvent(((ChartRadarRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ChartRadarRowDeleting != null)) {
                    this.ChartRadarRowDeleting(this, new ChartRadarRowChangeEvent(((ChartRadarRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveChartRadarRow(ChartRadarRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ChartRadarRow : DataRow {
            
            private ChartRadarDataTable tableChartRadar;
            
            internal ChartRadarRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableChartRadar = ((ChartRadarDataTable)(this.Table));
            }
            
            public long GG {
                get {
                    try {
                        return ((long)(this[this.tableChartRadar.GGColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableChartRadar.GGColumn] = value;
                }
            }
            
            public long DELTA {
                get {
                    try {
                        return ((long)(this[this.tableChartRadar.DELTAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableChartRadar.DELTAColumn] = value;
                }
            }
            
            public long PRIORITY {
                get {
                    try {
                        return ((long)(this[this.tableChartRadar.PRIORITYColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableChartRadar.PRIORITYColumn] = value;
                }
            }
            
            public long PENALE {
                get {
                    try {
                        return ((long)(this[this.tableChartRadar.PENALEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableChartRadar.PENALEColumn] = value;
                }
            }
            
            public System.Double MEDIA {
                get {
                    try {
                        return ((System.Double)(this[this.tableChartRadar.MEDIAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableChartRadar.MEDIAColumn] = value;
                }
            }
            
            public System.Double VARIANZA {
                get {
                    try {
                        return ((System.Double)(this[this.tableChartRadar.VARIANZAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableChartRadar.VARIANZAColumn] = value;
                }
            }
            
            public bool IsGGNull() {
                return this.IsNull(this.tableChartRadar.GGColumn);
            }
            
            public void SetGGNull() {
                this[this.tableChartRadar.GGColumn] = System.Convert.DBNull;
            }
            
            public bool IsDELTANull() {
                return this.IsNull(this.tableChartRadar.DELTAColumn);
            }
            
            public void SetDELTANull() {
                this[this.tableChartRadar.DELTAColumn] = System.Convert.DBNull;
            }
            
            public bool IsPRIORITYNull() {
                return this.IsNull(this.tableChartRadar.PRIORITYColumn);
            }
            
            public void SetPRIORITYNull() {
                this[this.tableChartRadar.PRIORITYColumn] = System.Convert.DBNull;
            }
            
            public bool IsPENALENull() {
                return this.IsNull(this.tableChartRadar.PENALEColumn);
            }
            
            public void SetPENALENull() {
                this[this.tableChartRadar.PENALEColumn] = System.Convert.DBNull;
            }
            
            public bool IsMEDIANull() {
                return this.IsNull(this.tableChartRadar.MEDIAColumn);
            }
            
            public void SetMEDIANull() {
                this[this.tableChartRadar.MEDIAColumn] = System.Convert.DBNull;
            }
            
            public bool IsVARIANZANull() {
                return this.IsNull(this.tableChartRadar.VARIANZAColumn);
            }
            
            public void SetVARIANZANull() {
                this[this.tableChartRadar.VARIANZAColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ChartRadarRowChangeEvent : EventArgs {
            
            private ChartRadarRow eventRow;
            
            private DataRowAction eventAction;
            
            public ChartRadarRowChangeEvent(ChartRadarRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ChartRadarRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
