//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace TheSite.SchemiXSD {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class dsRapportino : DataSet {
        
        private _TableDataTable table_Table;
        
        private rapportoTecnicoInterventoDataTable tablerapportoTecnicoIntervento;
        
        private ListaManodoperaDataTable tableListaManodopera;
        
        private ListaMaterialiDataTable tableListaMateriali;
        
        private TotaliDataTable tableTotali;
        
        private rapportoTecnicoInterventoCumulativoDataTable tablerapportoTecnicoInterventoCumulativo;
        
        private MainTableDataTable tableMainTable;
        
        private TblLogoDataTable tableTblLogo;
        
        public dsRapportino() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected dsRapportino(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Table"] != null)) {
                    this.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
                }
                if ((ds.Tables["rapportoTecnicoIntervento"] != null)) {
                    this.Tables.Add(new rapportoTecnicoInterventoDataTable(ds.Tables["rapportoTecnicoIntervento"]));
                }
                if ((ds.Tables["ListaManodopera"] != null)) {
                    this.Tables.Add(new ListaManodoperaDataTable(ds.Tables["ListaManodopera"]));
                }
                if ((ds.Tables["ListaMateriali"] != null)) {
                    this.Tables.Add(new ListaMaterialiDataTable(ds.Tables["ListaMateriali"]));
                }
                if ((ds.Tables["Totali"] != null)) {
                    this.Tables.Add(new TotaliDataTable(ds.Tables["Totali"]));
                }
                if ((ds.Tables["rapportoTecnicoInterventoCumulativo"] != null)) {
                    this.Tables.Add(new rapportoTecnicoInterventoCumulativoDataTable(ds.Tables["rapportoTecnicoInterventoCumulativo"]));
                }
                if ((ds.Tables["MainTable"] != null)) {
                    this.Tables.Add(new MainTableDataTable(ds.Tables["MainTable"]));
                }
                if ((ds.Tables["TblLogo"] != null)) {
                    this.Tables.Add(new TblLogoDataTable(ds.Tables["TblLogo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public _TableDataTable _Table {
            get {
                return this.table_Table;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public rapportoTecnicoInterventoDataTable rapportoTecnicoIntervento {
            get {
                return this.tablerapportoTecnicoIntervento;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListaManodoperaDataTable ListaManodopera {
            get {
                return this.tableListaManodopera;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListaMaterialiDataTable ListaMateriali {
            get {
                return this.tableListaMateriali;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TotaliDataTable Totali {
            get {
                return this.tableTotali;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public rapportoTecnicoInterventoCumulativoDataTable rapportoTecnicoInterventoCumulativo {
            get {
                return this.tablerapportoTecnicoInterventoCumulativo;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MainTableDataTable MainTable {
            get {
                return this.tableMainTable;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TblLogoDataTable TblLogo {
            get {
                return this.tableTblLogo;
            }
        }
        
        public override DataSet Clone() {
            dsRapportino cln = ((dsRapportino)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["Table"] != null)) {
                this.Tables.Add(new _TableDataTable(ds.Tables["Table"]));
            }
            if ((ds.Tables["rapportoTecnicoIntervento"] != null)) {
                this.Tables.Add(new rapportoTecnicoInterventoDataTable(ds.Tables["rapportoTecnicoIntervento"]));
            }
            if ((ds.Tables["ListaManodopera"] != null)) {
                this.Tables.Add(new ListaManodoperaDataTable(ds.Tables["ListaManodopera"]));
            }
            if ((ds.Tables["ListaMateriali"] != null)) {
                this.Tables.Add(new ListaMaterialiDataTable(ds.Tables["ListaMateriali"]));
            }
            if ((ds.Tables["Totali"] != null)) {
                this.Tables.Add(new TotaliDataTable(ds.Tables["Totali"]));
            }
            if ((ds.Tables["rapportoTecnicoInterventoCumulativo"] != null)) {
                this.Tables.Add(new rapportoTecnicoInterventoCumulativoDataTable(ds.Tables["rapportoTecnicoInterventoCumulativo"]));
            }
            if ((ds.Tables["MainTable"] != null)) {
                this.Tables.Add(new MainTableDataTable(ds.Tables["MainTable"]));
            }
            if ((ds.Tables["TblLogo"] != null)) {
                this.Tables.Add(new TblLogoDataTable(ds.Tables["TblLogo"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.table_Table = ((_TableDataTable)(this.Tables["Table"]));
            if ((this.table_Table != null)) {
                this.table_Table.InitVars();
            }
            this.tablerapportoTecnicoIntervento = ((rapportoTecnicoInterventoDataTable)(this.Tables["rapportoTecnicoIntervento"]));
            if ((this.tablerapportoTecnicoIntervento != null)) {
                this.tablerapportoTecnicoIntervento.InitVars();
            }
            this.tableListaManodopera = ((ListaManodoperaDataTable)(this.Tables["ListaManodopera"]));
            if ((this.tableListaManodopera != null)) {
                this.tableListaManodopera.InitVars();
            }
            this.tableListaMateriali = ((ListaMaterialiDataTable)(this.Tables["ListaMateriali"]));
            if ((this.tableListaMateriali != null)) {
                this.tableListaMateriali.InitVars();
            }
            this.tableTotali = ((TotaliDataTable)(this.Tables["Totali"]));
            if ((this.tableTotali != null)) {
                this.tableTotali.InitVars();
            }
            this.tablerapportoTecnicoInterventoCumulativo = ((rapportoTecnicoInterventoCumulativoDataTable)(this.Tables["rapportoTecnicoInterventoCumulativo"]));
            if ((this.tablerapportoTecnicoInterventoCumulativo != null)) {
                this.tablerapportoTecnicoInterventoCumulativo.InitVars();
            }
            this.tableMainTable = ((MainTableDataTable)(this.Tables["MainTable"]));
            if ((this.tableMainTable != null)) {
                this.tableMainTable.InitVars();
            }
            this.tableTblLogo = ((TblLogoDataTable)(this.Tables["TblLogo"]));
            if ((this.tableTblLogo != null)) {
                this.tableTblLogo.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "dsRapportino";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.table_Table = new _TableDataTable();
            this.Tables.Add(this.table_Table);
            this.tablerapportoTecnicoIntervento = new rapportoTecnicoInterventoDataTable();
            this.Tables.Add(this.tablerapportoTecnicoIntervento);
            this.tableListaManodopera = new ListaManodoperaDataTable();
            this.Tables.Add(this.tableListaManodopera);
            this.tableListaMateriali = new ListaMaterialiDataTable();
            this.Tables.Add(this.tableListaMateriali);
            this.tableTotali = new TotaliDataTable();
            this.Tables.Add(this.tableTotali);
            this.tablerapportoTecnicoInterventoCumulativo = new rapportoTecnicoInterventoCumulativoDataTable();
            this.Tables.Add(this.tablerapportoTecnicoInterventoCumulativo);
            this.tableMainTable = new MainTableDataTable();
            this.Tables.Add(this.tableMainTable);
            this.tableTblLogo = new TblLogoDataTable();
            this.Tables.Add(this.tableTblLogo);
        }
        
        private bool ShouldSerialize_Table() {
            return false;
        }
        
        private bool ShouldSerializerapportoTecnicoIntervento() {
            return false;
        }
        
        private bool ShouldSerializeListaManodopera() {
            return false;
        }
        
        private bool ShouldSerializeListaMateriali() {
            return false;
        }
        
        private bool ShouldSerializeTotali() {
            return false;
        }
        
        private bool ShouldSerializerapportoTecnicoInterventoCumulativo() {
            return false;
        }
        
        private bool ShouldSerializeMainTable() {
            return false;
        }
        
        private bool ShouldSerializeTblLogo() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void _TableRowChangeEventHandler(object sender, _TableRowChangeEvent e);
        
        public delegate void rapportoTecnicoInterventoRowChangeEventHandler(object sender, rapportoTecnicoInterventoRowChangeEvent e);
        
        public delegate void ListaManodoperaRowChangeEventHandler(object sender, ListaManodoperaRowChangeEvent e);
        
        public delegate void ListaMaterialiRowChangeEventHandler(object sender, ListaMaterialiRowChangeEvent e);
        
        public delegate void TotaliRowChangeEventHandler(object sender, TotaliRowChangeEvent e);
        
        public delegate void rapportoTecnicoInterventoCumulativoRowChangeEventHandler(object sender, rapportoTecnicoInterventoCumulativoRowChangeEvent e);
        
        public delegate void MainTableRowChangeEventHandler(object sender, MainTableRowChangeEvent e);
        
        public delegate void TblLogoRowChangeEventHandler(object sender, TblLogoRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class _TableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnWR_ID;
            
            private DataColumn columnWO_ID;
            
            private DataColumn columnBL_ID;
            
            private DataColumn columnCAMPUS;
            
            private DataColumn columnBL_NAME;
            
            private DataColumn columnADDETTO;
            
            private DataColumn columnDATA_ASSIGNED;
            
            private DataColumn columnSERVIZIO;
            
            private DataColumn columnDITTA;
            
            private DataColumn columnEQSTD;
            
            private DataColumn columnEQ_ID;
            
            private DataColumn columnSTATUS;
            
            private DataColumn columnPMP;
            
            private DataColumn columnFREQUENZA;
            
            private DataColumn columnPMP_ID;
            
            private DataColumn columnNUMPASSO;
            
            private DataColumn columnPASSO;
            
            internal _TableDataTable() : 
                    base("Table") {
                this.InitClass();
            }
            
            internal _TableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn WR_IDColumn {
                get {
                    return this.columnWR_ID;
                }
            }
            
            internal DataColumn WO_IDColumn {
                get {
                    return this.columnWO_ID;
                }
            }
            
            internal DataColumn BL_IDColumn {
                get {
                    return this.columnBL_ID;
                }
            }
            
            internal DataColumn CAMPUSColumn {
                get {
                    return this.columnCAMPUS;
                }
            }
            
            internal DataColumn BL_NAMEColumn {
                get {
                    return this.columnBL_NAME;
                }
            }
            
            internal DataColumn ADDETTOColumn {
                get {
                    return this.columnADDETTO;
                }
            }
            
            internal DataColumn DATA_ASSIGNEDColumn {
                get {
                    return this.columnDATA_ASSIGNED;
                }
            }
            
            internal DataColumn SERVIZIOColumn {
                get {
                    return this.columnSERVIZIO;
                }
            }
            
            internal DataColumn DITTAColumn {
                get {
                    return this.columnDITTA;
                }
            }
            
            internal DataColumn EQSTDColumn {
                get {
                    return this.columnEQSTD;
                }
            }
            
            internal DataColumn EQ_IDColumn {
                get {
                    return this.columnEQ_ID;
                }
            }
            
            internal DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            internal DataColumn PMPColumn {
                get {
                    return this.columnPMP;
                }
            }
            
            internal DataColumn FREQUENZAColumn {
                get {
                    return this.columnFREQUENZA;
                }
            }
            
            internal DataColumn PMP_IDColumn {
                get {
                    return this.columnPMP_ID;
                }
            }
            
            internal DataColumn NUMPASSOColumn {
                get {
                    return this.columnNUMPASSO;
                }
            }
            
            internal DataColumn PASSOColumn {
                get {
                    return this.columnPASSO;
                }
            }
            
            public _TableRow this[int index] {
                get {
                    return ((_TableRow)(this.Rows[index]));
                }
            }
            
            public event _TableRowChangeEventHandler _TableRowChanged;
            
            public event _TableRowChangeEventHandler _TableRowChanging;
            
            public event _TableRowChangeEventHandler _TableRowDeleted;
            
            public event _TableRowChangeEventHandler _TableRowDeleting;
            
            public void Add_TableRow(_TableRow row) {
                this.Rows.Add(row);
            }
            
            public _TableRow Add_TableRow(
                        long WR_ID, 
                        long WO_ID, 
                        long BL_ID, 
                        string CAMPUS, 
                        string BL_NAME, 
                        string ADDETTO, 
                        string DATA_ASSIGNED, 
                        string SERVIZIO, 
                        string DITTA, 
                        string EQSTD, 
                        string EQ_ID, 
                        string STATUS, 
                        string PMP, 
                        string FREQUENZA, 
                        string PMP_ID, 
                        long NUMPASSO, 
                        string PASSO) {
                _TableRow row_TableRow = ((_TableRow)(this.NewRow()));
                row_TableRow.ItemArray = new object[] {
                        WR_ID,
                        WO_ID,
                        BL_ID,
                        CAMPUS,
                        BL_NAME,
                        ADDETTO,
                        DATA_ASSIGNED,
                        SERVIZIO,
                        DITTA,
                        EQSTD,
                        EQ_ID,
                        STATUS,
                        PMP,
                        FREQUENZA,
                        PMP_ID,
                        NUMPASSO,
                        PASSO};
                this.Rows.Add(row_TableRow);
                return row_TableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                _TableDataTable cln = ((_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new _TableDataTable();
            }
            
            internal void InitVars() {
                this.columnWR_ID = this.Columns["WR_ID"];
                this.columnWO_ID = this.Columns["WO_ID"];
                this.columnBL_ID = this.Columns["BL_ID"];
                this.columnCAMPUS = this.Columns["CAMPUS"];
                this.columnBL_NAME = this.Columns["BL_NAME"];
                this.columnADDETTO = this.Columns["ADDETTO"];
                this.columnDATA_ASSIGNED = this.Columns["DATA_ASSIGNED"];
                this.columnSERVIZIO = this.Columns["SERVIZIO"];
                this.columnDITTA = this.Columns["DITTA"];
                this.columnEQSTD = this.Columns["EQSTD"];
                this.columnEQ_ID = this.Columns["EQ_ID"];
                this.columnSTATUS = this.Columns["STATUS"];
                this.columnPMP = this.Columns["PMP"];
                this.columnFREQUENZA = this.Columns["FREQUENZA"];
                this.columnPMP_ID = this.Columns["PMP_ID"];
                this.columnNUMPASSO = this.Columns["NUMPASSO"];
                this.columnPASSO = this.Columns["PASSO"];
            }
            
            private void InitClass() {
                this.columnWR_ID = new DataColumn("WR_ID", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWR_ID);
                this.columnWO_ID = new DataColumn("WO_ID", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWO_ID);
                this.columnBL_ID = new DataColumn("BL_ID", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBL_ID);
                this.columnCAMPUS = new DataColumn("CAMPUS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCAMPUS);
                this.columnBL_NAME = new DataColumn("BL_NAME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBL_NAME);
                this.columnADDETTO = new DataColumn("ADDETTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnADDETTO);
                this.columnDATA_ASSIGNED = new DataColumn("DATA_ASSIGNED", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDATA_ASSIGNED);
                this.columnSERVIZIO = new DataColumn("SERVIZIO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSERVIZIO);
                this.columnDITTA = new DataColumn("DITTA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDITTA);
                this.columnEQSTD = new DataColumn("EQSTD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQSTD);
                this.columnEQ_ID = new DataColumn("EQ_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_ID);
                this.columnSTATUS = new DataColumn("STATUS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSTATUS);
                this.columnPMP = new DataColumn("PMP", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPMP);
                this.columnFREQUENZA = new DataColumn("FREQUENZA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFREQUENZA);
                this.columnPMP_ID = new DataColumn("PMP_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPMP_ID);
                this.columnNUMPASSO = new DataColumn("NUMPASSO", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNUMPASSO);
                this.columnPASSO = new DataColumn("PASSO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPASSO);
            }
            
            public _TableRow New_TableRow() {
                return ((_TableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new _TableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(_TableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this._TableRowChanged != null)) {
                    this._TableRowChanged(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this._TableRowChanging != null)) {
                    this._TableRowChanging(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this._TableRowDeleted != null)) {
                    this._TableRowDeleted(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this._TableRowDeleting != null)) {
                    this._TableRowDeleting(this, new _TableRowChangeEvent(((_TableRow)(e.Row)), e.Action));
                }
            }
            
            public void Remove_TableRow(_TableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class _TableRow : DataRow {
            
            private _TableDataTable table_Table;
            
            internal _TableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.table_Table = ((_TableDataTable)(this.Table));
            }
            
            public long WR_ID {
                get {
                    try {
                        return ((long)(this[this.table_Table.WR_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.WR_IDColumn] = value;
                }
            }
            
            public long WO_ID {
                get {
                    try {
                        return ((long)(this[this.table_Table.WO_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.WO_IDColumn] = value;
                }
            }
            
            public long BL_ID {
                get {
                    try {
                        return ((long)(this[this.table_Table.BL_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.BL_IDColumn] = value;
                }
            }
            
            public string CAMPUS {
                get {
                    try {
                        return ((string)(this[this.table_Table.CAMPUSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.CAMPUSColumn] = value;
                }
            }
            
            public string BL_NAME {
                get {
                    try {
                        return ((string)(this[this.table_Table.BL_NAMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.BL_NAMEColumn] = value;
                }
            }
            
            public string ADDETTO {
                get {
                    try {
                        return ((string)(this[this.table_Table.ADDETTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.ADDETTOColumn] = value;
                }
            }
            
            public string DATA_ASSIGNED {
                get {
                    try {
                        return ((string)(this[this.table_Table.DATA_ASSIGNEDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DATA_ASSIGNEDColumn] = value;
                }
            }
            
            public string SERVIZIO {
                get {
                    try {
                        return ((string)(this[this.table_Table.SERVIZIOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.SERVIZIOColumn] = value;
                }
            }
            
            public string DITTA {
                get {
                    try {
                        return ((string)(this[this.table_Table.DITTAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.DITTAColumn] = value;
                }
            }
            
            public string EQSTD {
                get {
                    try {
                        return ((string)(this[this.table_Table.EQSTDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EQSTDColumn] = value;
                }
            }
            
            public string EQ_ID {
                get {
                    try {
                        return ((string)(this[this.table_Table.EQ_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.EQ_IDColumn] = value;
                }
            }
            
            public string STATUS {
                get {
                    try {
                        return ((string)(this[this.table_Table.STATUSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.STATUSColumn] = value;
                }
            }
            
            public string PMP {
                get {
                    try {
                        return ((string)(this[this.table_Table.PMPColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.PMPColumn] = value;
                }
            }
            
            public string FREQUENZA {
                get {
                    try {
                        return ((string)(this[this.table_Table.FREQUENZAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.FREQUENZAColumn] = value;
                }
            }
            
            public string PMP_ID {
                get {
                    try {
                        return ((string)(this[this.table_Table.PMP_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.PMP_IDColumn] = value;
                }
            }
            
            public long NUMPASSO {
                get {
                    try {
                        return ((long)(this[this.table_Table.NUMPASSOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.NUMPASSOColumn] = value;
                }
            }
            
            public string PASSO {
                get {
                    try {
                        return ((string)(this[this.table_Table.PASSOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.table_Table.PASSOColumn] = value;
                }
            }
            
            public bool IsWR_IDNull() {
                return this.IsNull(this.table_Table.WR_IDColumn);
            }
            
            public void SetWR_IDNull() {
                this[this.table_Table.WR_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsWO_IDNull() {
                return this.IsNull(this.table_Table.WO_IDColumn);
            }
            
            public void SetWO_IDNull() {
                this[this.table_Table.WO_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsBL_IDNull() {
                return this.IsNull(this.table_Table.BL_IDColumn);
            }
            
            public void SetBL_IDNull() {
                this[this.table_Table.BL_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsCAMPUSNull() {
                return this.IsNull(this.table_Table.CAMPUSColumn);
            }
            
            public void SetCAMPUSNull() {
                this[this.table_Table.CAMPUSColumn] = System.Convert.DBNull;
            }
            
            public bool IsBL_NAMENull() {
                return this.IsNull(this.table_Table.BL_NAMEColumn);
            }
            
            public void SetBL_NAMENull() {
                this[this.table_Table.BL_NAMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsADDETTONull() {
                return this.IsNull(this.table_Table.ADDETTOColumn);
            }
            
            public void SetADDETTONull() {
                this[this.table_Table.ADDETTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsDATA_ASSIGNEDNull() {
                return this.IsNull(this.table_Table.DATA_ASSIGNEDColumn);
            }
            
            public void SetDATA_ASSIGNEDNull() {
                this[this.table_Table.DATA_ASSIGNEDColumn] = System.Convert.DBNull;
            }
            
            public bool IsSERVIZIONull() {
                return this.IsNull(this.table_Table.SERVIZIOColumn);
            }
            
            public void SetSERVIZIONull() {
                this[this.table_Table.SERVIZIOColumn] = System.Convert.DBNull;
            }
            
            public bool IsDITTANull() {
                return this.IsNull(this.table_Table.DITTAColumn);
            }
            
            public void SetDITTANull() {
                this[this.table_Table.DITTAColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQSTDNull() {
                return this.IsNull(this.table_Table.EQSTDColumn);
            }
            
            public void SetEQSTDNull() {
                this[this.table_Table.EQSTDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_IDNull() {
                return this.IsNull(this.table_Table.EQ_IDColumn);
            }
            
            public void SetEQ_IDNull() {
                this[this.table_Table.EQ_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsSTATUSNull() {
                return this.IsNull(this.table_Table.STATUSColumn);
            }
            
            public void SetSTATUSNull() {
                this[this.table_Table.STATUSColumn] = System.Convert.DBNull;
            }
            
            public bool IsPMPNull() {
                return this.IsNull(this.table_Table.PMPColumn);
            }
            
            public void SetPMPNull() {
                this[this.table_Table.PMPColumn] = System.Convert.DBNull;
            }
            
            public bool IsFREQUENZANull() {
                return this.IsNull(this.table_Table.FREQUENZAColumn);
            }
            
            public void SetFREQUENZANull() {
                this[this.table_Table.FREQUENZAColumn] = System.Convert.DBNull;
            }
            
            public bool IsPMP_IDNull() {
                return this.IsNull(this.table_Table.PMP_IDColumn);
            }
            
            public void SetPMP_IDNull() {
                this[this.table_Table.PMP_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsNUMPASSONull() {
                return this.IsNull(this.table_Table.NUMPASSOColumn);
            }
            
            public void SetNUMPASSONull() {
                this[this.table_Table.NUMPASSOColumn] = System.Convert.DBNull;
            }
            
            public bool IsPASSONull() {
                return this.IsNull(this.table_Table.PASSOColumn);
            }
            
            public void SetPASSONull() {
                this[this.table_Table.PASSOColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class _TableRowChangeEvent : EventArgs {
            
            private _TableRow eventRow;
            
            private DataRowAction eventAction;
            
            public _TableRowChangeEvent(_TableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public _TableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class rapportoTecnicoInterventoDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnVAR_WR_WR_ID;
            
            private DataColumn columnVAR_WR_DESCRIPTION;
            
            private DataColumn columnVAR_WR_STATUD;
            
            private DataColumn columnVAR_WR_EQ_ID;
            
            private DataColumn columnVAR_WR_TR_ID;
            
            private DataColumn columnVAR_WR_AC_ID;
            
            private DataColumn columnVAR_WR_REQUESTOR;
            
            private DataColumn columnVAR_WR_PHONE;
            
            private DataColumn columnVAR_EM_PHONE;
            
            private DataColumn columnVAR_WR_PRIORITY;
            
            private DataColumn columnVAR_WR_PROB_TYPE;
            
            private DataColumn columnVAR_PROBTYPE_PT_ID;
            
            private DataColumn columnID_OPERATORE;
            
            private DataColumn columnVAR_WR_OPERATORE;
            
            private DataColumn columnVAR_WR_GRUPPO;
            
            private DataColumn columnVAR_WR_NOTA_ID;
            
            private DataColumn columnVAR_WR_PMD_ID;
            
            private DataColumn columnVAR_WR_BL_ID;
            
            private DataColumn columnVAR_BL_CAMPUS;
            
            private DataColumn columnVAR_BL_CENTRO_COSTO;
            
            private DataColumn columnVAR_BL_ADDRESS1;
            
            private DataColumn columnVAR_BL_CITY_ID;
            
            private DataColumn columnVAR_WR_TME_REQESTED;
            
            private DataColumn columnVAR_WR_TIME_REQUESTED;
            
            private DataColumn columnVAR_WR_DATE_ASSIGNED;
            
            private DataColumn column_VAR_WR_TIME_ASSIGNED;
            
            private DataColumn columnVAR_WR_DATE_STAT_CHG;
            
            private DataColumn columnVAR_WR_TIME_STAT_CHG;
            
            private DataColumn columnVAR_WO_WO_ID;
            
            private DataColumn columnVAR_WRCF_COMMENTS;
            
            private DataColumn columnDATE_START;
            
            private DataColumn columnDATE_END;
            
            private DataColumn columnVAR_WRCF_DITTA;
            
            private DataColumn columnADDETTO_ID;
            
            private DataColumn columnDESC_PRIORITY;
            
            private DataColumn columnVAR_WR_NOTA_RIC;
            
            private DataColumn columnVAR_WR_DATE_REQUESTED;
            
            private DataColumn columnSODDISFAZIONE;
            
            private DataColumn columnVAR_BLE;
            
            private DataColumn columnVAR_NOTE_COMPL;
            
            private DataColumn columnVAR_REPARTO;
            
            private DataColumn columnID_PROGETTO;
            
            private DataColumn columnIMMAGINE_LOGO;
            
            internal rapportoTecnicoInterventoDataTable() : 
                    base("rapportoTecnicoIntervento") {
                this.InitClass();
            }
            
            internal rapportoTecnicoInterventoDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn VAR_WR_WR_IDColumn {
                get {
                    return this.columnVAR_WR_WR_ID;
                }
            }
            
            internal DataColumn VAR_WR_DESCRIPTIONColumn {
                get {
                    return this.columnVAR_WR_DESCRIPTION;
                }
            }
            
            internal DataColumn VAR_WR_STATUDColumn {
                get {
                    return this.columnVAR_WR_STATUD;
                }
            }
            
            internal DataColumn VAR_WR_EQ_IDColumn {
                get {
                    return this.columnVAR_WR_EQ_ID;
                }
            }
            
            internal DataColumn VAR_WR_TR_IDColumn {
                get {
                    return this.columnVAR_WR_TR_ID;
                }
            }
            
            internal DataColumn VAR_WR_AC_IDColumn {
                get {
                    return this.columnVAR_WR_AC_ID;
                }
            }
            
            internal DataColumn VAR_WR_REQUESTORColumn {
                get {
                    return this.columnVAR_WR_REQUESTOR;
                }
            }
            
            internal DataColumn VAR_WR_PHONEColumn {
                get {
                    return this.columnVAR_WR_PHONE;
                }
            }
            
            internal DataColumn VAR_EM_PHONEColumn {
                get {
                    return this.columnVAR_EM_PHONE;
                }
            }
            
            internal DataColumn VAR_WR_PRIORITYColumn {
                get {
                    return this.columnVAR_WR_PRIORITY;
                }
            }
            
            internal DataColumn VAR_WR_PROB_TYPEColumn {
                get {
                    return this.columnVAR_WR_PROB_TYPE;
                }
            }
            
            internal DataColumn VAR_PROBTYPE_PT_IDColumn {
                get {
                    return this.columnVAR_PROBTYPE_PT_ID;
                }
            }
            
            internal DataColumn ID_OPERATOREColumn {
                get {
                    return this.columnID_OPERATORE;
                }
            }
            
            internal DataColumn VAR_WR_OPERATOREColumn {
                get {
                    return this.columnVAR_WR_OPERATORE;
                }
            }
            
            internal DataColumn VAR_WR_GRUPPOColumn {
                get {
                    return this.columnVAR_WR_GRUPPO;
                }
            }
            
            internal DataColumn VAR_WR_NOTA_IDColumn {
                get {
                    return this.columnVAR_WR_NOTA_ID;
                }
            }
            
            internal DataColumn VAR_WR_PMD_IDColumn {
                get {
                    return this.columnVAR_WR_PMD_ID;
                }
            }
            
            internal DataColumn VAR_WR_BL_IDColumn {
                get {
                    return this.columnVAR_WR_BL_ID;
                }
            }
            
            internal DataColumn VAR_BL_CAMPUSColumn {
                get {
                    return this.columnVAR_BL_CAMPUS;
                }
            }
            
            internal DataColumn VAR_BL_CENTRO_COSTOColumn {
                get {
                    return this.columnVAR_BL_CENTRO_COSTO;
                }
            }
            
            internal DataColumn VAR_BL_ADDRESS1Column {
                get {
                    return this.columnVAR_BL_ADDRESS1;
                }
            }
            
            internal DataColumn VAR_BL_CITY_IDColumn {
                get {
                    return this.columnVAR_BL_CITY_ID;
                }
            }
            
            internal DataColumn VAR_WR_TME_REQESTEDColumn {
                get {
                    return this.columnVAR_WR_TME_REQESTED;
                }
            }
            
            internal DataColumn VAR_WR_TIME_REQUESTEDColumn {
                get {
                    return this.columnVAR_WR_TIME_REQUESTED;
                }
            }
            
            internal DataColumn VAR_WR_DATE_ASSIGNEDColumn {
                get {
                    return this.columnVAR_WR_DATE_ASSIGNED;
                }
            }
            
            internal DataColumn _VAR_WR_TIME_ASSIGNEDColumn {
                get {
                    return this.column_VAR_WR_TIME_ASSIGNED;
                }
            }
            
            internal DataColumn VAR_WR_DATE_STAT_CHGColumn {
                get {
                    return this.columnVAR_WR_DATE_STAT_CHG;
                }
            }
            
            internal DataColumn VAR_WR_TIME_STAT_CHGColumn {
                get {
                    return this.columnVAR_WR_TIME_STAT_CHG;
                }
            }
            
            internal DataColumn VAR_WO_WO_IDColumn {
                get {
                    return this.columnVAR_WO_WO_ID;
                }
            }
            
            internal DataColumn VAR_WRCF_COMMENTSColumn {
                get {
                    return this.columnVAR_WRCF_COMMENTS;
                }
            }
            
            internal DataColumn DATE_STARTColumn {
                get {
                    return this.columnDATE_START;
                }
            }
            
            internal DataColumn DATE_ENDColumn {
                get {
                    return this.columnDATE_END;
                }
            }
            
            internal DataColumn VAR_WRCF_DITTAColumn {
                get {
                    return this.columnVAR_WRCF_DITTA;
                }
            }
            
            internal DataColumn ADDETTO_IDColumn {
                get {
                    return this.columnADDETTO_ID;
                }
            }
            
            internal DataColumn DESC_PRIORITYColumn {
                get {
                    return this.columnDESC_PRIORITY;
                }
            }
            
            internal DataColumn VAR_WR_NOTA_RICColumn {
                get {
                    return this.columnVAR_WR_NOTA_RIC;
                }
            }
            
            internal DataColumn VAR_WR_DATE_REQUESTEDColumn {
                get {
                    return this.columnVAR_WR_DATE_REQUESTED;
                }
            }
            
            internal DataColumn SODDISFAZIONEColumn {
                get {
                    return this.columnSODDISFAZIONE;
                }
            }
            
            internal DataColumn VAR_BLEColumn {
                get {
                    return this.columnVAR_BLE;
                }
            }
            
            internal DataColumn VAR_NOTE_COMPLColumn {
                get {
                    return this.columnVAR_NOTE_COMPL;
                }
            }
            
            internal DataColumn VAR_REPARTOColumn {
                get {
                    return this.columnVAR_REPARTO;
                }
            }
            
            internal DataColumn ID_PROGETTOColumn {
                get {
                    return this.columnID_PROGETTO;
                }
            }
            
            internal DataColumn IMMAGINE_LOGOColumn {
                get {
                    return this.columnIMMAGINE_LOGO;
                }
            }
            
            public rapportoTecnicoInterventoRow this[int index] {
                get {
                    return ((rapportoTecnicoInterventoRow)(this.Rows[index]));
                }
            }
            
            public event rapportoTecnicoInterventoRowChangeEventHandler rapportoTecnicoInterventoRowChanged;
            
            public event rapportoTecnicoInterventoRowChangeEventHandler rapportoTecnicoInterventoRowChanging;
            
            public event rapportoTecnicoInterventoRowChangeEventHandler rapportoTecnicoInterventoRowDeleted;
            
            public event rapportoTecnicoInterventoRowChangeEventHandler rapportoTecnicoInterventoRowDeleting;
            
            public void AddrapportoTecnicoInterventoRow(rapportoTecnicoInterventoRow row) {
                this.Rows.Add(row);
            }
            
            public rapportoTecnicoInterventoRow AddrapportoTecnicoInterventoRow(
                        long VAR_WR_WR_ID, 
                        string VAR_WR_DESCRIPTION, 
                        string VAR_WR_STATUD, 
                        string VAR_WR_EQ_ID, 
                        string VAR_WR_TR_ID, 
                        string VAR_WR_AC_ID, 
                        string VAR_WR_REQUESTOR, 
                        string VAR_WR_PHONE, 
                        string VAR_EM_PHONE, 
                        string VAR_WR_PRIORITY, 
                        string VAR_WR_PROB_TYPE, 
                        string VAR_PROBTYPE_PT_ID, 
                        string ID_OPERATORE, 
                        string VAR_WR_OPERATORE, 
                        string VAR_WR_GRUPPO, 
                        string VAR_WR_NOTA_ID, 
                        string VAR_WR_PMD_ID, 
                        string VAR_WR_BL_ID, 
                        string VAR_BL_CAMPUS, 
                        string VAR_BL_CENTRO_COSTO, 
                        string VAR_BL_ADDRESS1, 
                        string VAR_BL_CITY_ID, 
                        string VAR_WR_TME_REQESTED, 
                        string VAR_WR_TIME_REQUESTED, 
                        string VAR_WR_DATE_ASSIGNED, 
                        string _VAR_WR_TIME_ASSIGNED, 
                        string VAR_WR_DATE_STAT_CHG, 
                        string VAR_WR_TIME_STAT_CHG, 
                        string VAR_WO_WO_ID, 
                        string VAR_WRCF_COMMENTS, 
                        string DATE_START, 
                        string DATE_END, 
                        string VAR_WRCF_DITTA, 
                        string ADDETTO_ID, 
                        string DESC_PRIORITY, 
                        string VAR_WR_NOTA_RIC, 
                        string VAR_WR_DATE_REQUESTED, 
                        string SODDISFAZIONE, 
                        string VAR_BLE, 
                        string VAR_NOTE_COMPL, 
                        string VAR_REPARTO, 
                        long ID_PROGETTO, 
                        System.Byte[] IMMAGINE_LOGO) {
                rapportoTecnicoInterventoRow rowrapportoTecnicoInterventoRow = ((rapportoTecnicoInterventoRow)(this.NewRow()));
                rowrapportoTecnicoInterventoRow.ItemArray = new object[] {
                        VAR_WR_WR_ID,
                        VAR_WR_DESCRIPTION,
                        VAR_WR_STATUD,
                        VAR_WR_EQ_ID,
                        VAR_WR_TR_ID,
                        VAR_WR_AC_ID,
                        VAR_WR_REQUESTOR,
                        VAR_WR_PHONE,
                        VAR_EM_PHONE,
                        VAR_WR_PRIORITY,
                        VAR_WR_PROB_TYPE,
                        VAR_PROBTYPE_PT_ID,
                        ID_OPERATORE,
                        VAR_WR_OPERATORE,
                        VAR_WR_GRUPPO,
                        VAR_WR_NOTA_ID,
                        VAR_WR_PMD_ID,
                        VAR_WR_BL_ID,
                        VAR_BL_CAMPUS,
                        VAR_BL_CENTRO_COSTO,
                        VAR_BL_ADDRESS1,
                        VAR_BL_CITY_ID,
                        VAR_WR_TME_REQESTED,
                        VAR_WR_TIME_REQUESTED,
                        VAR_WR_DATE_ASSIGNED,
                        _VAR_WR_TIME_ASSIGNED,
                        VAR_WR_DATE_STAT_CHG,
                        VAR_WR_TIME_STAT_CHG,
                        VAR_WO_WO_ID,
                        VAR_WRCF_COMMENTS,
                        DATE_START,
                        DATE_END,
                        VAR_WRCF_DITTA,
                        ADDETTO_ID,
                        DESC_PRIORITY,
                        VAR_WR_NOTA_RIC,
                        VAR_WR_DATE_REQUESTED,
                        SODDISFAZIONE,
                        VAR_BLE,
                        VAR_NOTE_COMPL,
                        VAR_REPARTO,
                        ID_PROGETTO,
                        IMMAGINE_LOGO};
                this.Rows.Add(rowrapportoTecnicoInterventoRow);
                return rowrapportoTecnicoInterventoRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                rapportoTecnicoInterventoDataTable cln = ((rapportoTecnicoInterventoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new rapportoTecnicoInterventoDataTable();
            }
            
            internal void InitVars() {
                this.columnVAR_WR_WR_ID = this.Columns["VAR_WR_WR_ID"];
                this.columnVAR_WR_DESCRIPTION = this.Columns["VAR_WR_DESCRIPTION"];
                this.columnVAR_WR_STATUD = this.Columns["VAR_WR_STATUD"];
                this.columnVAR_WR_EQ_ID = this.Columns["VAR_WR_EQ_ID"];
                this.columnVAR_WR_TR_ID = this.Columns["VAR_WR_TR_ID"];
                this.columnVAR_WR_AC_ID = this.Columns["VAR_WR_AC_ID"];
                this.columnVAR_WR_REQUESTOR = this.Columns["VAR_WR_REQUESTOR"];
                this.columnVAR_WR_PHONE = this.Columns["VAR_WR_PHONE"];
                this.columnVAR_EM_PHONE = this.Columns["VAR_EM_PHONE"];
                this.columnVAR_WR_PRIORITY = this.Columns["VAR_WR_PRIORITY"];
                this.columnVAR_WR_PROB_TYPE = this.Columns["VAR_WR_PROB_TYPE"];
                this.columnVAR_PROBTYPE_PT_ID = this.Columns["VAR_PROBTYPE_PT_ID"];
                this.columnID_OPERATORE = this.Columns["ID_OPERATORE"];
                this.columnVAR_WR_OPERATORE = this.Columns["VAR_WR_OPERATORE"];
                this.columnVAR_WR_GRUPPO = this.Columns["VAR_WR_GRUPPO"];
                this.columnVAR_WR_NOTA_ID = this.Columns["VAR_WR_NOTA_ID"];
                this.columnVAR_WR_PMD_ID = this.Columns["VAR_WR_PMD_ID"];
                this.columnVAR_WR_BL_ID = this.Columns["VAR_WR_BL_ID"];
                this.columnVAR_BL_CAMPUS = this.Columns["VAR_BL_CAMPUS"];
                this.columnVAR_BL_CENTRO_COSTO = this.Columns["VAR_BL_CENTRO_COSTO"];
                this.columnVAR_BL_ADDRESS1 = this.Columns["VAR_BL_ADDRESS1"];
                this.columnVAR_BL_CITY_ID = this.Columns["VAR_BL_CITY_ID"];
                this.columnVAR_WR_TME_REQESTED = this.Columns["VAR_WR_TME_REQESTED"];
                this.columnVAR_WR_TIME_REQUESTED = this.Columns["VAR_WR_TIME_REQUESTED"];
                this.columnVAR_WR_DATE_ASSIGNED = this.Columns["VAR_WR_DATE_ASSIGNED"];
                this.column_VAR_WR_TIME_ASSIGNED = this.Columns["VAR_WR_TIME-ASSIGNED"];
                this.columnVAR_WR_DATE_STAT_CHG = this.Columns["VAR_WR_DATE_STAT_CHG"];
                this.columnVAR_WR_TIME_STAT_CHG = this.Columns["VAR_WR_TIME_STAT_CHG"];
                this.columnVAR_WO_WO_ID = this.Columns["VAR_WO_WO_ID"];
                this.columnVAR_WRCF_COMMENTS = this.Columns["VAR_WRCF_COMMENTS"];
                this.columnDATE_START = this.Columns["DATE_START"];
                this.columnDATE_END = this.Columns["DATE_END"];
                this.columnVAR_WRCF_DITTA = this.Columns["VAR_WRCF_DITTA"];
                this.columnADDETTO_ID = this.Columns["ADDETTO_ID"];
                this.columnDESC_PRIORITY = this.Columns["DESC_PRIORITY"];
                this.columnVAR_WR_NOTA_RIC = this.Columns["VAR_WR_NOTA_RIC"];
                this.columnVAR_WR_DATE_REQUESTED = this.Columns["VAR_WR_DATE_REQUESTED"];
                this.columnSODDISFAZIONE = this.Columns["SODDISFAZIONE"];
                this.columnVAR_BLE = this.Columns["VAR_BLE"];
                this.columnVAR_NOTE_COMPL = this.Columns["VAR_NOTE_COMPL"];
                this.columnVAR_REPARTO = this.Columns["VAR_REPARTO"];
                this.columnID_PROGETTO = this.Columns["ID_PROGETTO"];
                this.columnIMMAGINE_LOGO = this.Columns["IMMAGINE_LOGO"];
            }
            
            private void InitClass() {
                this.columnVAR_WR_WR_ID = new DataColumn("VAR_WR_WR_ID", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_WR_WR_ID);
                this.columnVAR_WR_DESCRIPTION = new DataColumn("VAR_WR_DESCRIPTION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_WR_DESCRIPTION);
                this.columnVAR_WR_STATUD = new DataColumn("VAR_WR_STATUD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_WR_STATUD);
                this.columnVAR_WR_EQ_ID = new DataColumn("VAR_WR_EQ_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_WR_EQ_ID);
                this.columnVAR_WR_TR_ID = new DataColumn("VAR_WR_TR_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_WR_TR_ID);
                this.columnVAR_WR_AC_ID = new DataColumn("VAR_WR_AC_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_WR_AC_ID);
                this.columnVAR_WR_REQUESTOR = new DataColumn("VAR_WR_REQUESTOR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_WR_REQUESTOR);
                this.columnVAR_WR_PHONE = new DataColumn("VAR_WR_PHONE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_WR_PHONE);
                this.columnVAR_EM_PHONE = new DataColumn("VAR_EM_PHONE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_EM_PHONE);
                this.columnVAR_WR_PRIORITY = new DataColumn("VAR_WR_PRIORITY", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_WR_PRIORITY);
                this.columnVAR_WR_PROB_TYPE = new DataColumn("VAR_WR_PROB_TYPE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_WR_PROB_TYPE);
                this.columnVAR_PROBTYPE_PT_ID = new DataColumn("VAR_PROBTYPE_PT_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_PROBTYPE_PT_ID);
                this.columnID_OPERATORE = new DataColumn("ID_OPERATORE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnID_OPERATORE);
                this.columnVAR_WR_OPERATORE = new DataColumn("VAR_WR_OPERATORE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_WR_OPERATORE);
                this.columnVAR_WR_GRUPPO = new DataColumn("VAR_WR_GRUPPO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_WR_GRUPPO);
                this.columnVAR_WR_NOTA_ID = new DataColumn("VAR_WR_NOTA_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_WR_NOTA_ID);
                this.columnVAR_WR_PMD_ID = new DataColumn("VAR_WR_PMD_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_WR_PMD_ID);
                this.columnVAR_WR_BL_ID = new DataColumn("VAR_WR_BL_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_WR_BL_ID);
                this.columnVAR_BL_CAMPUS = new DataColumn("VAR_BL_CAMPUS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_BL_CAMPUS);
                this.columnVAR_BL_CENTRO_COSTO = new DataColumn("VAR_BL_CENTRO_COSTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_BL_CENTRO_COSTO);
                this.columnVAR_BL_ADDRESS1 = new DataColumn("VAR_BL_ADDRESS1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_BL_ADDRESS1);
                this.columnVAR_BL_CITY_ID = new DataColumn("VAR_BL_CITY_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_BL_CITY_ID);
                this.columnVAR_WR_TME_REQESTED = new DataColumn("VAR_WR_TME_REQESTED", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_WR_TME_REQESTED);
                this.columnVAR_WR_TIME_REQUESTED = new DataColumn("VAR_WR_TIME_REQUESTED", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_WR_TIME_REQUESTED);
                this.columnVAR_WR_DATE_ASSIGNED = new DataColumn("VAR_WR_DATE_ASSIGNED", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_WR_DATE_ASSIGNED);
                this.column_VAR_WR_TIME_ASSIGNED = new DataColumn("VAR_WR_TIME-ASSIGNED", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.column_VAR_WR_TIME_ASSIGNED);
                this.columnVAR_WR_DATE_STAT_CHG = new DataColumn("VAR_WR_DATE_STAT_CHG", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_WR_DATE_STAT_CHG);
                this.columnVAR_WR_TIME_STAT_CHG = new DataColumn("VAR_WR_TIME_STAT_CHG", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_WR_TIME_STAT_CHG);
                this.columnVAR_WO_WO_ID = new DataColumn("VAR_WO_WO_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_WO_WO_ID);
                this.columnVAR_WRCF_COMMENTS = new DataColumn("VAR_WRCF_COMMENTS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_WRCF_COMMENTS);
                this.columnDATE_START = new DataColumn("DATE_START", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDATE_START);
                this.columnDATE_END = new DataColumn("DATE_END", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDATE_END);
                this.columnVAR_WRCF_DITTA = new DataColumn("VAR_WRCF_DITTA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_WRCF_DITTA);
                this.columnADDETTO_ID = new DataColumn("ADDETTO_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnADDETTO_ID);
                this.columnDESC_PRIORITY = new DataColumn("DESC_PRIORITY", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDESC_PRIORITY);
                this.columnVAR_WR_NOTA_RIC = new DataColumn("VAR_WR_NOTA_RIC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_WR_NOTA_RIC);
                this.columnVAR_WR_DATE_REQUESTED = new DataColumn("VAR_WR_DATE_REQUESTED", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_WR_DATE_REQUESTED);
                this.columnSODDISFAZIONE = new DataColumn("SODDISFAZIONE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSODDISFAZIONE);
                this.columnVAR_BLE = new DataColumn("VAR_BLE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_BLE);
                this.columnVAR_NOTE_COMPL = new DataColumn("VAR_NOTE_COMPL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_NOTE_COMPL);
                this.columnVAR_REPARTO = new DataColumn("VAR_REPARTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnVAR_REPARTO);
                this.columnID_PROGETTO = new DataColumn("ID_PROGETTO", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnID_PROGETTO);
                this.columnIMMAGINE_LOGO = new DataColumn("IMMAGINE_LOGO", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIMMAGINE_LOGO);
            }
            
            public rapportoTecnicoInterventoRow NewrapportoTecnicoInterventoRow() {
                return ((rapportoTecnicoInterventoRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new rapportoTecnicoInterventoRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(rapportoTecnicoInterventoRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.rapportoTecnicoInterventoRowChanged != null)) {
                    this.rapportoTecnicoInterventoRowChanged(this, new rapportoTecnicoInterventoRowChangeEvent(((rapportoTecnicoInterventoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.rapportoTecnicoInterventoRowChanging != null)) {
                    this.rapportoTecnicoInterventoRowChanging(this, new rapportoTecnicoInterventoRowChangeEvent(((rapportoTecnicoInterventoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.rapportoTecnicoInterventoRowDeleted != null)) {
                    this.rapportoTecnicoInterventoRowDeleted(this, new rapportoTecnicoInterventoRowChangeEvent(((rapportoTecnicoInterventoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.rapportoTecnicoInterventoRowDeleting != null)) {
                    this.rapportoTecnicoInterventoRowDeleting(this, new rapportoTecnicoInterventoRowChangeEvent(((rapportoTecnicoInterventoRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoverapportoTecnicoInterventoRow(rapportoTecnicoInterventoRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class rapportoTecnicoInterventoRow : DataRow {
            
            private rapportoTecnicoInterventoDataTable tablerapportoTecnicoIntervento;
            
            internal rapportoTecnicoInterventoRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablerapportoTecnicoIntervento = ((rapportoTecnicoInterventoDataTable)(this.Table));
            }
            
            public long VAR_WR_WR_ID {
                get {
                    try {
                        return ((long)(this[this.tablerapportoTecnicoIntervento.VAR_WR_WR_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_WR_WR_IDColumn] = value;
                }
            }
            
            public string VAR_WR_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_WR_DESCRIPTIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_WR_DESCRIPTIONColumn] = value;
                }
            }
            
            public string VAR_WR_STATUD {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_WR_STATUDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_WR_STATUDColumn] = value;
                }
            }
            
            public string VAR_WR_EQ_ID {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_WR_EQ_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_WR_EQ_IDColumn] = value;
                }
            }
            
            public string VAR_WR_TR_ID {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_WR_TR_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_WR_TR_IDColumn] = value;
                }
            }
            
            public string VAR_WR_AC_ID {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_WR_AC_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_WR_AC_IDColumn] = value;
                }
            }
            
            public string VAR_WR_REQUESTOR {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_WR_REQUESTORColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_WR_REQUESTORColumn] = value;
                }
            }
            
            public string VAR_WR_PHONE {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_WR_PHONEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_WR_PHONEColumn] = value;
                }
            }
            
            public string VAR_EM_PHONE {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_EM_PHONEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_EM_PHONEColumn] = value;
                }
            }
            
            public string VAR_WR_PRIORITY {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_WR_PRIORITYColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_WR_PRIORITYColumn] = value;
                }
            }
            
            public string VAR_WR_PROB_TYPE {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_WR_PROB_TYPEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_WR_PROB_TYPEColumn] = value;
                }
            }
            
            public string VAR_PROBTYPE_PT_ID {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_PROBTYPE_PT_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_PROBTYPE_PT_IDColumn] = value;
                }
            }
            
            public string ID_OPERATORE {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.ID_OPERATOREColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.ID_OPERATOREColumn] = value;
                }
            }
            
            public string VAR_WR_OPERATORE {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_WR_OPERATOREColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_WR_OPERATOREColumn] = value;
                }
            }
            
            public string VAR_WR_GRUPPO {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_WR_GRUPPOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_WR_GRUPPOColumn] = value;
                }
            }
            
            public string VAR_WR_NOTA_ID {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_WR_NOTA_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_WR_NOTA_IDColumn] = value;
                }
            }
            
            public string VAR_WR_PMD_ID {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_WR_PMD_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_WR_PMD_IDColumn] = value;
                }
            }
            
            public string VAR_WR_BL_ID {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_WR_BL_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_WR_BL_IDColumn] = value;
                }
            }
            
            public string VAR_BL_CAMPUS {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_BL_CAMPUSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_BL_CAMPUSColumn] = value;
                }
            }
            
            public string VAR_BL_CENTRO_COSTO {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_BL_CENTRO_COSTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_BL_CENTRO_COSTOColumn] = value;
                }
            }
            
            public string VAR_BL_ADDRESS1 {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_BL_ADDRESS1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_BL_ADDRESS1Column] = value;
                }
            }
            
            public string VAR_BL_CITY_ID {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_BL_CITY_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_BL_CITY_IDColumn] = value;
                }
            }
            
            public string VAR_WR_TME_REQESTED {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_WR_TME_REQESTEDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_WR_TME_REQESTEDColumn] = value;
                }
            }
            
            public string VAR_WR_TIME_REQUESTED {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_WR_TIME_REQUESTEDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_WR_TIME_REQUESTEDColumn] = value;
                }
            }
            
            public string VAR_WR_DATE_ASSIGNED {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_WR_DATE_ASSIGNEDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_WR_DATE_ASSIGNEDColumn] = value;
                }
            }
            
            public string _VAR_WR_TIME_ASSIGNED {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento._VAR_WR_TIME_ASSIGNEDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento._VAR_WR_TIME_ASSIGNEDColumn] = value;
                }
            }
            
            public string VAR_WR_DATE_STAT_CHG {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_WR_DATE_STAT_CHGColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_WR_DATE_STAT_CHGColumn] = value;
                }
            }
            
            public string VAR_WR_TIME_STAT_CHG {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_WR_TIME_STAT_CHGColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_WR_TIME_STAT_CHGColumn] = value;
                }
            }
            
            public string VAR_WO_WO_ID {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_WO_WO_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_WO_WO_IDColumn] = value;
                }
            }
            
            public string VAR_WRCF_COMMENTS {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_WRCF_COMMENTSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_WRCF_COMMENTSColumn] = value;
                }
            }
            
            public string DATE_START {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.DATE_STARTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.DATE_STARTColumn] = value;
                }
            }
            
            public string DATE_END {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.DATE_ENDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.DATE_ENDColumn] = value;
                }
            }
            
            public string VAR_WRCF_DITTA {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_WRCF_DITTAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_WRCF_DITTAColumn] = value;
                }
            }
            
            public string ADDETTO_ID {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.ADDETTO_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.ADDETTO_IDColumn] = value;
                }
            }
            
            public string DESC_PRIORITY {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.DESC_PRIORITYColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.DESC_PRIORITYColumn] = value;
                }
            }
            
            public string VAR_WR_NOTA_RIC {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_WR_NOTA_RICColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_WR_NOTA_RICColumn] = value;
                }
            }
            
            public string VAR_WR_DATE_REQUESTED {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_WR_DATE_REQUESTEDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_WR_DATE_REQUESTEDColumn] = value;
                }
            }
            
            public string SODDISFAZIONE {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.SODDISFAZIONEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.SODDISFAZIONEColumn] = value;
                }
            }
            
            public string VAR_BLE {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_BLEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_BLEColumn] = value;
                }
            }
            
            public string VAR_NOTE_COMPL {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_NOTE_COMPLColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_NOTE_COMPLColumn] = value;
                }
            }
            
            public string VAR_REPARTO {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoIntervento.VAR_REPARTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.VAR_REPARTOColumn] = value;
                }
            }
            
            public long ID_PROGETTO {
                get {
                    try {
                        return ((long)(this[this.tablerapportoTecnicoIntervento.ID_PROGETTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.ID_PROGETTOColumn] = value;
                }
            }
            
            public System.Byte[] IMMAGINE_LOGO {
                get {
                    try {
                        return ((System.Byte[])(this[this.tablerapportoTecnicoIntervento.IMMAGINE_LOGOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoIntervento.IMMAGINE_LOGOColumn] = value;
                }
            }
            
            public bool IsVAR_WR_WR_IDNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_WR_WR_IDColumn);
            }
            
            public void SetVAR_WR_WR_IDNull() {
                this[this.tablerapportoTecnicoIntervento.VAR_WR_WR_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_WR_DESCRIPTIONNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_WR_DESCRIPTIONColumn);
            }
            
            public void SetVAR_WR_DESCRIPTIONNull() {
                this[this.tablerapportoTecnicoIntervento.VAR_WR_DESCRIPTIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_WR_STATUDNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_WR_STATUDColumn);
            }
            
            public void SetVAR_WR_STATUDNull() {
                this[this.tablerapportoTecnicoIntervento.VAR_WR_STATUDColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_WR_EQ_IDNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_WR_EQ_IDColumn);
            }
            
            public void SetVAR_WR_EQ_IDNull() {
                this[this.tablerapportoTecnicoIntervento.VAR_WR_EQ_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_WR_TR_IDNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_WR_TR_IDColumn);
            }
            
            public void SetVAR_WR_TR_IDNull() {
                this[this.tablerapportoTecnicoIntervento.VAR_WR_TR_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_WR_AC_IDNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_WR_AC_IDColumn);
            }
            
            public void SetVAR_WR_AC_IDNull() {
                this[this.tablerapportoTecnicoIntervento.VAR_WR_AC_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_WR_REQUESTORNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_WR_REQUESTORColumn);
            }
            
            public void SetVAR_WR_REQUESTORNull() {
                this[this.tablerapportoTecnicoIntervento.VAR_WR_REQUESTORColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_WR_PHONENull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_WR_PHONEColumn);
            }
            
            public void SetVAR_WR_PHONENull() {
                this[this.tablerapportoTecnicoIntervento.VAR_WR_PHONEColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_EM_PHONENull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_EM_PHONEColumn);
            }
            
            public void SetVAR_EM_PHONENull() {
                this[this.tablerapportoTecnicoIntervento.VAR_EM_PHONEColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_WR_PRIORITYNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_WR_PRIORITYColumn);
            }
            
            public void SetVAR_WR_PRIORITYNull() {
                this[this.tablerapportoTecnicoIntervento.VAR_WR_PRIORITYColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_WR_PROB_TYPENull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_WR_PROB_TYPEColumn);
            }
            
            public void SetVAR_WR_PROB_TYPENull() {
                this[this.tablerapportoTecnicoIntervento.VAR_WR_PROB_TYPEColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_PROBTYPE_PT_IDNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_PROBTYPE_PT_IDColumn);
            }
            
            public void SetVAR_PROBTYPE_PT_IDNull() {
                this[this.tablerapportoTecnicoIntervento.VAR_PROBTYPE_PT_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsID_OPERATORENull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.ID_OPERATOREColumn);
            }
            
            public void SetID_OPERATORENull() {
                this[this.tablerapportoTecnicoIntervento.ID_OPERATOREColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_WR_OPERATORENull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_WR_OPERATOREColumn);
            }
            
            public void SetVAR_WR_OPERATORENull() {
                this[this.tablerapportoTecnicoIntervento.VAR_WR_OPERATOREColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_WR_GRUPPONull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_WR_GRUPPOColumn);
            }
            
            public void SetVAR_WR_GRUPPONull() {
                this[this.tablerapportoTecnicoIntervento.VAR_WR_GRUPPOColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_WR_NOTA_IDNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_WR_NOTA_IDColumn);
            }
            
            public void SetVAR_WR_NOTA_IDNull() {
                this[this.tablerapportoTecnicoIntervento.VAR_WR_NOTA_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_WR_PMD_IDNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_WR_PMD_IDColumn);
            }
            
            public void SetVAR_WR_PMD_IDNull() {
                this[this.tablerapportoTecnicoIntervento.VAR_WR_PMD_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_WR_BL_IDNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_WR_BL_IDColumn);
            }
            
            public void SetVAR_WR_BL_IDNull() {
                this[this.tablerapportoTecnicoIntervento.VAR_WR_BL_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_BL_CAMPUSNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_BL_CAMPUSColumn);
            }
            
            public void SetVAR_BL_CAMPUSNull() {
                this[this.tablerapportoTecnicoIntervento.VAR_BL_CAMPUSColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_BL_CENTRO_COSTONull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_BL_CENTRO_COSTOColumn);
            }
            
            public void SetVAR_BL_CENTRO_COSTONull() {
                this[this.tablerapportoTecnicoIntervento.VAR_BL_CENTRO_COSTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_BL_ADDRESS1Null() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_BL_ADDRESS1Column);
            }
            
            public void SetVAR_BL_ADDRESS1Null() {
                this[this.tablerapportoTecnicoIntervento.VAR_BL_ADDRESS1Column] = System.Convert.DBNull;
            }
            
            public bool IsVAR_BL_CITY_IDNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_BL_CITY_IDColumn);
            }
            
            public void SetVAR_BL_CITY_IDNull() {
                this[this.tablerapportoTecnicoIntervento.VAR_BL_CITY_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_WR_TME_REQESTEDNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_WR_TME_REQESTEDColumn);
            }
            
            public void SetVAR_WR_TME_REQESTEDNull() {
                this[this.tablerapportoTecnicoIntervento.VAR_WR_TME_REQESTEDColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_WR_TIME_REQUESTEDNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_WR_TIME_REQUESTEDColumn);
            }
            
            public void SetVAR_WR_TIME_REQUESTEDNull() {
                this[this.tablerapportoTecnicoIntervento.VAR_WR_TIME_REQUESTEDColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_WR_DATE_ASSIGNEDNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_WR_DATE_ASSIGNEDColumn);
            }
            
            public void SetVAR_WR_DATE_ASSIGNEDNull() {
                this[this.tablerapportoTecnicoIntervento.VAR_WR_DATE_ASSIGNEDColumn] = System.Convert.DBNull;
            }
            
            public bool Is_VAR_WR_TIME_ASSIGNEDNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento._VAR_WR_TIME_ASSIGNEDColumn);
            }
            
            public void Set_VAR_WR_TIME_ASSIGNEDNull() {
                this[this.tablerapportoTecnicoIntervento._VAR_WR_TIME_ASSIGNEDColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_WR_DATE_STAT_CHGNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_WR_DATE_STAT_CHGColumn);
            }
            
            public void SetVAR_WR_DATE_STAT_CHGNull() {
                this[this.tablerapportoTecnicoIntervento.VAR_WR_DATE_STAT_CHGColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_WR_TIME_STAT_CHGNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_WR_TIME_STAT_CHGColumn);
            }
            
            public void SetVAR_WR_TIME_STAT_CHGNull() {
                this[this.tablerapportoTecnicoIntervento.VAR_WR_TIME_STAT_CHGColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_WO_WO_IDNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_WO_WO_IDColumn);
            }
            
            public void SetVAR_WO_WO_IDNull() {
                this[this.tablerapportoTecnicoIntervento.VAR_WO_WO_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_WRCF_COMMENTSNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_WRCF_COMMENTSColumn);
            }
            
            public void SetVAR_WRCF_COMMENTSNull() {
                this[this.tablerapportoTecnicoIntervento.VAR_WRCF_COMMENTSColumn] = System.Convert.DBNull;
            }
            
            public bool IsDATE_STARTNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.DATE_STARTColumn);
            }
            
            public void SetDATE_STARTNull() {
                this[this.tablerapportoTecnicoIntervento.DATE_STARTColumn] = System.Convert.DBNull;
            }
            
            public bool IsDATE_ENDNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.DATE_ENDColumn);
            }
            
            public void SetDATE_ENDNull() {
                this[this.tablerapportoTecnicoIntervento.DATE_ENDColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_WRCF_DITTANull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_WRCF_DITTAColumn);
            }
            
            public void SetVAR_WRCF_DITTANull() {
                this[this.tablerapportoTecnicoIntervento.VAR_WRCF_DITTAColumn] = System.Convert.DBNull;
            }
            
            public bool IsADDETTO_IDNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.ADDETTO_IDColumn);
            }
            
            public void SetADDETTO_IDNull() {
                this[this.tablerapportoTecnicoIntervento.ADDETTO_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsDESC_PRIORITYNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.DESC_PRIORITYColumn);
            }
            
            public void SetDESC_PRIORITYNull() {
                this[this.tablerapportoTecnicoIntervento.DESC_PRIORITYColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_WR_NOTA_RICNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_WR_NOTA_RICColumn);
            }
            
            public void SetVAR_WR_NOTA_RICNull() {
                this[this.tablerapportoTecnicoIntervento.VAR_WR_NOTA_RICColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_WR_DATE_REQUESTEDNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_WR_DATE_REQUESTEDColumn);
            }
            
            public void SetVAR_WR_DATE_REQUESTEDNull() {
                this[this.tablerapportoTecnicoIntervento.VAR_WR_DATE_REQUESTEDColumn] = System.Convert.DBNull;
            }
            
            public bool IsSODDISFAZIONENull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.SODDISFAZIONEColumn);
            }
            
            public void SetSODDISFAZIONENull() {
                this[this.tablerapportoTecnicoIntervento.SODDISFAZIONEColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_BLENull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_BLEColumn);
            }
            
            public void SetVAR_BLENull() {
                this[this.tablerapportoTecnicoIntervento.VAR_BLEColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_NOTE_COMPLNull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_NOTE_COMPLColumn);
            }
            
            public void SetVAR_NOTE_COMPLNull() {
                this[this.tablerapportoTecnicoIntervento.VAR_NOTE_COMPLColumn] = System.Convert.DBNull;
            }
            
            public bool IsVAR_REPARTONull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.VAR_REPARTOColumn);
            }
            
            public void SetVAR_REPARTONull() {
                this[this.tablerapportoTecnicoIntervento.VAR_REPARTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsID_PROGETTONull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.ID_PROGETTOColumn);
            }
            
            public void SetID_PROGETTONull() {
                this[this.tablerapportoTecnicoIntervento.ID_PROGETTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsIMMAGINE_LOGONull() {
                return this.IsNull(this.tablerapportoTecnicoIntervento.IMMAGINE_LOGOColumn);
            }
            
            public void SetIMMAGINE_LOGONull() {
                this[this.tablerapportoTecnicoIntervento.IMMAGINE_LOGOColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class rapportoTecnicoInterventoRowChangeEvent : EventArgs {
            
            private rapportoTecnicoInterventoRow eventRow;
            
            private DataRowAction eventAction;
            
            public rapportoTecnicoInterventoRowChangeEvent(rapportoTecnicoInterventoRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public rapportoTecnicoInterventoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ListaManodoperaDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnID;
            
            private DataColumn columnCOGNOMENOME;
            
            private DataColumn columnDESCRIZIONEINTERVENTO;
            
            private DataColumn columnLIVELLO;
            
            private DataColumn columnPREZZOUNITARIO;
            
            private DataColumn columnORELAVORATE;
            
            private DataColumn columnTOTALE;
            
            private DataColumn columnIDADDETTO;
            
            private DataColumn columnIDADDETTOWR;
            
            private DataColumn columnWR_ID;
            
            internal ListaManodoperaDataTable() : 
                    base("ListaManodopera") {
                this.InitClass();
            }
            
            internal ListaManodoperaDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            internal DataColumn COGNOMENOMEColumn {
                get {
                    return this.columnCOGNOMENOME;
                }
            }
            
            internal DataColumn DESCRIZIONEINTERVENTOColumn {
                get {
                    return this.columnDESCRIZIONEINTERVENTO;
                }
            }
            
            internal DataColumn LIVELLOColumn {
                get {
                    return this.columnLIVELLO;
                }
            }
            
            internal DataColumn PREZZOUNITARIOColumn {
                get {
                    return this.columnPREZZOUNITARIO;
                }
            }
            
            internal DataColumn ORELAVORATEColumn {
                get {
                    return this.columnORELAVORATE;
                }
            }
            
            internal DataColumn TOTALEColumn {
                get {
                    return this.columnTOTALE;
                }
            }
            
            internal DataColumn IDADDETTOColumn {
                get {
                    return this.columnIDADDETTO;
                }
            }
            
            internal DataColumn IDADDETTOWRColumn {
                get {
                    return this.columnIDADDETTOWR;
                }
            }
            
            internal DataColumn WR_IDColumn {
                get {
                    return this.columnWR_ID;
                }
            }
            
            public ListaManodoperaRow this[int index] {
                get {
                    return ((ListaManodoperaRow)(this.Rows[index]));
                }
            }
            
            public event ListaManodoperaRowChangeEventHandler ListaManodoperaRowChanged;
            
            public event ListaManodoperaRowChangeEventHandler ListaManodoperaRowChanging;
            
            public event ListaManodoperaRowChangeEventHandler ListaManodoperaRowDeleted;
            
            public event ListaManodoperaRowChangeEventHandler ListaManodoperaRowDeleting;
            
            public void AddListaManodoperaRow(ListaManodoperaRow row) {
                this.Rows.Add(row);
            }
            
            public ListaManodoperaRow AddListaManodoperaRow(string ID, string COGNOMENOME, string DESCRIZIONEINTERVENTO, string LIVELLO, System.Single PREZZOUNITARIO, string ORELAVORATE, System.Single TOTALE, string IDADDETTO, string IDADDETTOWR, long WR_ID) {
                ListaManodoperaRow rowListaManodoperaRow = ((ListaManodoperaRow)(this.NewRow()));
                rowListaManodoperaRow.ItemArray = new object[] {
                        ID,
                        COGNOMENOME,
                        DESCRIZIONEINTERVENTO,
                        LIVELLO,
                        PREZZOUNITARIO,
                        ORELAVORATE,
                        TOTALE,
                        IDADDETTO,
                        IDADDETTOWR,
                        WR_ID};
                this.Rows.Add(rowListaManodoperaRow);
                return rowListaManodoperaRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ListaManodoperaDataTable cln = ((ListaManodoperaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ListaManodoperaDataTable();
            }
            
            internal void InitVars() {
                this.columnID = this.Columns["ID"];
                this.columnCOGNOMENOME = this.Columns["COGNOMENOME"];
                this.columnDESCRIZIONEINTERVENTO = this.Columns["DESCRIZIONEINTERVENTO"];
                this.columnLIVELLO = this.Columns["LIVELLO"];
                this.columnPREZZOUNITARIO = this.Columns["PREZZOUNITARIO"];
                this.columnORELAVORATE = this.Columns["ORELAVORATE"];
                this.columnTOTALE = this.Columns["TOTALE"];
                this.columnIDADDETTO = this.Columns["IDADDETTO"];
                this.columnIDADDETTOWR = this.Columns["IDADDETTOWR"];
                this.columnWR_ID = this.Columns["WR_ID"];
            }
            
            private void InitClass() {
                this.columnID = new DataColumn("ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnID);
                this.columnCOGNOMENOME = new DataColumn("COGNOMENOME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCOGNOMENOME);
                this.columnDESCRIZIONEINTERVENTO = new DataColumn("DESCRIZIONEINTERVENTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDESCRIZIONEINTERVENTO);
                this.columnLIVELLO = new DataColumn("LIVELLO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLIVELLO);
                this.columnPREZZOUNITARIO = new DataColumn("PREZZOUNITARIO", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPREZZOUNITARIO);
                this.columnORELAVORATE = new DataColumn("ORELAVORATE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnORELAVORATE);
                this.columnTOTALE = new DataColumn("TOTALE", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTOTALE);
                this.columnIDADDETTO = new DataColumn("IDADDETTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIDADDETTO);
                this.columnIDADDETTOWR = new DataColumn("IDADDETTOWR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIDADDETTOWR);
                this.columnWR_ID = new DataColumn("WR_ID", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWR_ID);
            }
            
            public ListaManodoperaRow NewListaManodoperaRow() {
                return ((ListaManodoperaRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ListaManodoperaRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ListaManodoperaRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListaManodoperaRowChanged != null)) {
                    this.ListaManodoperaRowChanged(this, new ListaManodoperaRowChangeEvent(((ListaManodoperaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListaManodoperaRowChanging != null)) {
                    this.ListaManodoperaRowChanging(this, new ListaManodoperaRowChangeEvent(((ListaManodoperaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListaManodoperaRowDeleted != null)) {
                    this.ListaManodoperaRowDeleted(this, new ListaManodoperaRowChangeEvent(((ListaManodoperaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListaManodoperaRowDeleting != null)) {
                    this.ListaManodoperaRowDeleting(this, new ListaManodoperaRowChangeEvent(((ListaManodoperaRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveListaManodoperaRow(ListaManodoperaRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ListaManodoperaRow : DataRow {
            
            private ListaManodoperaDataTable tableListaManodopera;
            
            internal ListaManodoperaRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableListaManodopera = ((ListaManodoperaDataTable)(this.Table));
            }
            
            public string ID {
                get {
                    try {
                        return ((string)(this[this.tableListaManodopera.IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableListaManodopera.IDColumn] = value;
                }
            }
            
            public string COGNOMENOME {
                get {
                    try {
                        return ((string)(this[this.tableListaManodopera.COGNOMENOMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableListaManodopera.COGNOMENOMEColumn] = value;
                }
            }
            
            public string DESCRIZIONEINTERVENTO {
                get {
                    try {
                        return ((string)(this[this.tableListaManodopera.DESCRIZIONEINTERVENTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableListaManodopera.DESCRIZIONEINTERVENTOColumn] = value;
                }
            }
            
            public string LIVELLO {
                get {
                    try {
                        return ((string)(this[this.tableListaManodopera.LIVELLOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableListaManodopera.LIVELLOColumn] = value;
                }
            }
            
            public System.Single PREZZOUNITARIO {
                get {
                    try {
                        return ((System.Single)(this[this.tableListaManodopera.PREZZOUNITARIOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableListaManodopera.PREZZOUNITARIOColumn] = value;
                }
            }
            
            public string ORELAVORATE {
                get {
                    try {
                        return ((string)(this[this.tableListaManodopera.ORELAVORATEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableListaManodopera.ORELAVORATEColumn] = value;
                }
            }
            
            public System.Single TOTALE {
                get {
                    try {
                        return ((System.Single)(this[this.tableListaManodopera.TOTALEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableListaManodopera.TOTALEColumn] = value;
                }
            }
            
            public string IDADDETTO {
                get {
                    try {
                        return ((string)(this[this.tableListaManodopera.IDADDETTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableListaManodopera.IDADDETTOColumn] = value;
                }
            }
            
            public string IDADDETTOWR {
                get {
                    try {
                        return ((string)(this[this.tableListaManodopera.IDADDETTOWRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableListaManodopera.IDADDETTOWRColumn] = value;
                }
            }
            
            public long WR_ID {
                get {
                    try {
                        return ((long)(this[this.tableListaManodopera.WR_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableListaManodopera.WR_IDColumn] = value;
                }
            }
            
            public bool IsIDNull() {
                return this.IsNull(this.tableListaManodopera.IDColumn);
            }
            
            public void SetIDNull() {
                this[this.tableListaManodopera.IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsCOGNOMENOMENull() {
                return this.IsNull(this.tableListaManodopera.COGNOMENOMEColumn);
            }
            
            public void SetCOGNOMENOMENull() {
                this[this.tableListaManodopera.COGNOMENOMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsDESCRIZIONEINTERVENTONull() {
                return this.IsNull(this.tableListaManodopera.DESCRIZIONEINTERVENTOColumn);
            }
            
            public void SetDESCRIZIONEINTERVENTONull() {
                this[this.tableListaManodopera.DESCRIZIONEINTERVENTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsLIVELLONull() {
                return this.IsNull(this.tableListaManodopera.LIVELLOColumn);
            }
            
            public void SetLIVELLONull() {
                this[this.tableListaManodopera.LIVELLOColumn] = System.Convert.DBNull;
            }
            
            public bool IsPREZZOUNITARIONull() {
                return this.IsNull(this.tableListaManodopera.PREZZOUNITARIOColumn);
            }
            
            public void SetPREZZOUNITARIONull() {
                this[this.tableListaManodopera.PREZZOUNITARIOColumn] = System.Convert.DBNull;
            }
            
            public bool IsORELAVORATENull() {
                return this.IsNull(this.tableListaManodopera.ORELAVORATEColumn);
            }
            
            public void SetORELAVORATENull() {
                this[this.tableListaManodopera.ORELAVORATEColumn] = System.Convert.DBNull;
            }
            
            public bool IsTOTALENull() {
                return this.IsNull(this.tableListaManodopera.TOTALEColumn);
            }
            
            public void SetTOTALENull() {
                this[this.tableListaManodopera.TOTALEColumn] = System.Convert.DBNull;
            }
            
            public bool IsIDADDETTONull() {
                return this.IsNull(this.tableListaManodopera.IDADDETTOColumn);
            }
            
            public void SetIDADDETTONull() {
                this[this.tableListaManodopera.IDADDETTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsIDADDETTOWRNull() {
                return this.IsNull(this.tableListaManodopera.IDADDETTOWRColumn);
            }
            
            public void SetIDADDETTOWRNull() {
                this[this.tableListaManodopera.IDADDETTOWRColumn] = System.Convert.DBNull;
            }
            
            public bool IsWR_IDNull() {
                return this.IsNull(this.tableListaManodopera.WR_IDColumn);
            }
            
            public void SetWR_IDNull() {
                this[this.tableListaManodopera.WR_IDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ListaManodoperaRowChangeEvent : EventArgs {
            
            private ListaManodoperaRow eventRow;
            
            private DataRowAction eventAction;
            
            public ListaManodoperaRowChangeEvent(ListaManodoperaRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ListaManodoperaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ListaMaterialiDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnID;
            
            private DataColumn columnMATERIALE;
            
            private DataColumn columnPREZZO_UNITARIO;
            
            private DataColumn columnUNITAMISURA;
            
            private DataColumn columnQUANTITA;
            
            private DataColumn columnPREZZOTOTALE;
            
            private DataColumn columnID_MATERIALI;
            
            private DataColumn columnWR_ID;
            
            internal ListaMaterialiDataTable() : 
                    base("ListaMateriali") {
                this.InitClass();
            }
            
            internal ListaMaterialiDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            internal DataColumn MATERIALEColumn {
                get {
                    return this.columnMATERIALE;
                }
            }
            
            internal DataColumn PREZZO_UNITARIOColumn {
                get {
                    return this.columnPREZZO_UNITARIO;
                }
            }
            
            internal DataColumn UNITAMISURAColumn {
                get {
                    return this.columnUNITAMISURA;
                }
            }
            
            internal DataColumn QUANTITAColumn {
                get {
                    return this.columnQUANTITA;
                }
            }
            
            internal DataColumn PREZZOTOTALEColumn {
                get {
                    return this.columnPREZZOTOTALE;
                }
            }
            
            internal DataColumn ID_MATERIALIColumn {
                get {
                    return this.columnID_MATERIALI;
                }
            }
            
            internal DataColumn WR_IDColumn {
                get {
                    return this.columnWR_ID;
                }
            }
            
            public ListaMaterialiRow this[int index] {
                get {
                    return ((ListaMaterialiRow)(this.Rows[index]));
                }
            }
            
            public event ListaMaterialiRowChangeEventHandler ListaMaterialiRowChanged;
            
            public event ListaMaterialiRowChangeEventHandler ListaMaterialiRowChanging;
            
            public event ListaMaterialiRowChangeEventHandler ListaMaterialiRowDeleted;
            
            public event ListaMaterialiRowChangeEventHandler ListaMaterialiRowDeleting;
            
            public void AddListaMaterialiRow(ListaMaterialiRow row) {
                this.Rows.Add(row);
            }
            
            public ListaMaterialiRow AddListaMaterialiRow(string ID, string MATERIALE, System.Single PREZZO_UNITARIO, string UNITAMISURA, string QUANTITA, System.Single PREZZOTOTALE, string ID_MATERIALI, long WR_ID) {
                ListaMaterialiRow rowListaMaterialiRow = ((ListaMaterialiRow)(this.NewRow()));
                rowListaMaterialiRow.ItemArray = new object[] {
                        ID,
                        MATERIALE,
                        PREZZO_UNITARIO,
                        UNITAMISURA,
                        QUANTITA,
                        PREZZOTOTALE,
                        ID_MATERIALI,
                        WR_ID};
                this.Rows.Add(rowListaMaterialiRow);
                return rowListaMaterialiRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                ListaMaterialiDataTable cln = ((ListaMaterialiDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new ListaMaterialiDataTable();
            }
            
            internal void InitVars() {
                this.columnID = this.Columns["ID"];
                this.columnMATERIALE = this.Columns["MATERIALE"];
                this.columnPREZZO_UNITARIO = this.Columns["PREZZO_UNITARIO"];
                this.columnUNITAMISURA = this.Columns["UNITAMISURA"];
                this.columnQUANTITA = this.Columns["QUANTITA"];
                this.columnPREZZOTOTALE = this.Columns["PREZZOTOTALE"];
                this.columnID_MATERIALI = this.Columns["ID_MATERIALI"];
                this.columnWR_ID = this.Columns["WR_ID"];
            }
            
            private void InitClass() {
                this.columnID = new DataColumn("ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnID);
                this.columnMATERIALE = new DataColumn("MATERIALE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMATERIALE);
                this.columnPREZZO_UNITARIO = new DataColumn("PREZZO_UNITARIO", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPREZZO_UNITARIO);
                this.columnUNITAMISURA = new DataColumn("UNITAMISURA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUNITAMISURA);
                this.columnQUANTITA = new DataColumn("QUANTITA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnQUANTITA);
                this.columnPREZZOTOTALE = new DataColumn("PREZZOTOTALE", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPREZZOTOTALE);
                this.columnID_MATERIALI = new DataColumn("ID_MATERIALI", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnID_MATERIALI);
                this.columnWR_ID = new DataColumn("WR_ID", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWR_ID);
            }
            
            public ListaMaterialiRow NewListaMaterialiRow() {
                return ((ListaMaterialiRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new ListaMaterialiRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(ListaMaterialiRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListaMaterialiRowChanged != null)) {
                    this.ListaMaterialiRowChanged(this, new ListaMaterialiRowChangeEvent(((ListaMaterialiRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListaMaterialiRowChanging != null)) {
                    this.ListaMaterialiRowChanging(this, new ListaMaterialiRowChangeEvent(((ListaMaterialiRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListaMaterialiRowDeleted != null)) {
                    this.ListaMaterialiRowDeleted(this, new ListaMaterialiRowChangeEvent(((ListaMaterialiRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListaMaterialiRowDeleting != null)) {
                    this.ListaMaterialiRowDeleting(this, new ListaMaterialiRowChangeEvent(((ListaMaterialiRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveListaMaterialiRow(ListaMaterialiRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ListaMaterialiRow : DataRow {
            
            private ListaMaterialiDataTable tableListaMateriali;
            
            internal ListaMaterialiRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableListaMateriali = ((ListaMaterialiDataTable)(this.Table));
            }
            
            public string ID {
                get {
                    try {
                        return ((string)(this[this.tableListaMateriali.IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableListaMateriali.IDColumn] = value;
                }
            }
            
            public string MATERIALE {
                get {
                    try {
                        return ((string)(this[this.tableListaMateriali.MATERIALEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableListaMateriali.MATERIALEColumn] = value;
                }
            }
            
            public System.Single PREZZO_UNITARIO {
                get {
                    try {
                        return ((System.Single)(this[this.tableListaMateriali.PREZZO_UNITARIOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableListaMateriali.PREZZO_UNITARIOColumn] = value;
                }
            }
            
            public string UNITAMISURA {
                get {
                    try {
                        return ((string)(this[this.tableListaMateriali.UNITAMISURAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableListaMateriali.UNITAMISURAColumn] = value;
                }
            }
            
            public string QUANTITA {
                get {
                    try {
                        return ((string)(this[this.tableListaMateriali.QUANTITAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableListaMateriali.QUANTITAColumn] = value;
                }
            }
            
            public System.Single PREZZOTOTALE {
                get {
                    try {
                        return ((System.Single)(this[this.tableListaMateriali.PREZZOTOTALEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableListaMateriali.PREZZOTOTALEColumn] = value;
                }
            }
            
            public string ID_MATERIALI {
                get {
                    try {
                        return ((string)(this[this.tableListaMateriali.ID_MATERIALIColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableListaMateriali.ID_MATERIALIColumn] = value;
                }
            }
            
            public long WR_ID {
                get {
                    try {
                        return ((long)(this[this.tableListaMateriali.WR_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableListaMateriali.WR_IDColumn] = value;
                }
            }
            
            public bool IsIDNull() {
                return this.IsNull(this.tableListaMateriali.IDColumn);
            }
            
            public void SetIDNull() {
                this[this.tableListaMateriali.IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsMATERIALENull() {
                return this.IsNull(this.tableListaMateriali.MATERIALEColumn);
            }
            
            public void SetMATERIALENull() {
                this[this.tableListaMateriali.MATERIALEColumn] = System.Convert.DBNull;
            }
            
            public bool IsPREZZO_UNITARIONull() {
                return this.IsNull(this.tableListaMateriali.PREZZO_UNITARIOColumn);
            }
            
            public void SetPREZZO_UNITARIONull() {
                this[this.tableListaMateriali.PREZZO_UNITARIOColumn] = System.Convert.DBNull;
            }
            
            public bool IsUNITAMISURANull() {
                return this.IsNull(this.tableListaMateriali.UNITAMISURAColumn);
            }
            
            public void SetUNITAMISURANull() {
                this[this.tableListaMateriali.UNITAMISURAColumn] = System.Convert.DBNull;
            }
            
            public bool IsQUANTITANull() {
                return this.IsNull(this.tableListaMateriali.QUANTITAColumn);
            }
            
            public void SetQUANTITANull() {
                this[this.tableListaMateriali.QUANTITAColumn] = System.Convert.DBNull;
            }
            
            public bool IsPREZZOTOTALENull() {
                return this.IsNull(this.tableListaMateriali.PREZZOTOTALEColumn);
            }
            
            public void SetPREZZOTOTALENull() {
                this[this.tableListaMateriali.PREZZOTOTALEColumn] = System.Convert.DBNull;
            }
            
            public bool IsID_MATERIALINull() {
                return this.IsNull(this.tableListaMateriali.ID_MATERIALIColumn);
            }
            
            public void SetID_MATERIALINull() {
                this[this.tableListaMateriali.ID_MATERIALIColumn] = System.Convert.DBNull;
            }
            
            public bool IsWR_IDNull() {
                return this.IsNull(this.tableListaMateriali.WR_IDColumn);
            }
            
            public void SetWR_IDNull() {
                this[this.tableListaMateriali.WR_IDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class ListaMaterialiRowChangeEvent : EventArgs {
            
            private ListaMaterialiRow eventRow;
            
            private DataRowAction eventAction;
            
            public ListaMaterialiRowChangeEvent(ListaMaterialiRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public ListaMaterialiRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TotaliDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnTotaleManodopera;
            
            private DataColumn columnTotaleMateriali;
            
            private DataColumn columnWR_ID;
            
            internal TotaliDataTable() : 
                    base("Totali") {
                this.InitClass();
            }
            
            internal TotaliDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn TotaleManodoperaColumn {
                get {
                    return this.columnTotaleManodopera;
                }
            }
            
            internal DataColumn TotaleMaterialiColumn {
                get {
                    return this.columnTotaleMateriali;
                }
            }
            
            internal DataColumn WR_IDColumn {
                get {
                    return this.columnWR_ID;
                }
            }
            
            public TotaliRow this[int index] {
                get {
                    return ((TotaliRow)(this.Rows[index]));
                }
            }
            
            public event TotaliRowChangeEventHandler TotaliRowChanged;
            
            public event TotaliRowChangeEventHandler TotaliRowChanging;
            
            public event TotaliRowChangeEventHandler TotaliRowDeleted;
            
            public event TotaliRowChangeEventHandler TotaliRowDeleting;
            
            public void AddTotaliRow(TotaliRow row) {
                this.Rows.Add(row);
            }
            
            public TotaliRow AddTotaliRow(System.Single TotaleManodopera, System.Single TotaleMateriali, long WR_ID) {
                TotaliRow rowTotaliRow = ((TotaliRow)(this.NewRow()));
                rowTotaliRow.ItemArray = new object[] {
                        TotaleManodopera,
                        TotaleMateriali,
                        WR_ID};
                this.Rows.Add(rowTotaliRow);
                return rowTotaliRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                TotaliDataTable cln = ((TotaliDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new TotaliDataTable();
            }
            
            internal void InitVars() {
                this.columnTotaleManodopera = this.Columns["TotaleManodopera"];
                this.columnTotaleMateriali = this.Columns["TotaleMateriali"];
                this.columnWR_ID = this.Columns["WR_ID"];
            }
            
            private void InitClass() {
                this.columnTotaleManodopera = new DataColumn("TotaleManodopera", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTotaleManodopera);
                this.columnTotaleMateriali = new DataColumn("TotaleMateriali", typeof(System.Single), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTotaleMateriali);
                this.columnWR_ID = new DataColumn("WR_ID", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWR_ID);
            }
            
            public TotaliRow NewTotaliRow() {
                return ((TotaliRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new TotaliRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(TotaliRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TotaliRowChanged != null)) {
                    this.TotaliRowChanged(this, new TotaliRowChangeEvent(((TotaliRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TotaliRowChanging != null)) {
                    this.TotaliRowChanging(this, new TotaliRowChangeEvent(((TotaliRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TotaliRowDeleted != null)) {
                    this.TotaliRowDeleted(this, new TotaliRowChangeEvent(((TotaliRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TotaliRowDeleting != null)) {
                    this.TotaliRowDeleting(this, new TotaliRowChangeEvent(((TotaliRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveTotaliRow(TotaliRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TotaliRow : DataRow {
            
            private TotaliDataTable tableTotali;
            
            internal TotaliRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableTotali = ((TotaliDataTable)(this.Table));
            }
            
            public System.Single TotaleManodopera {
                get {
                    try {
                        return ((System.Single)(this[this.tableTotali.TotaleManodoperaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotali.TotaleManodoperaColumn] = value;
                }
            }
            
            public System.Single TotaleMateriali {
                get {
                    try {
                        return ((System.Single)(this[this.tableTotali.TotaleMaterialiColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotali.TotaleMaterialiColumn] = value;
                }
            }
            
            public long WR_ID {
                get {
                    try {
                        return ((long)(this[this.tableTotali.WR_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTotali.WR_IDColumn] = value;
                }
            }
            
            public bool IsTotaleManodoperaNull() {
                return this.IsNull(this.tableTotali.TotaleManodoperaColumn);
            }
            
            public void SetTotaleManodoperaNull() {
                this[this.tableTotali.TotaleManodoperaColumn] = System.Convert.DBNull;
            }
            
            public bool IsTotaleMaterialiNull() {
                return this.IsNull(this.tableTotali.TotaleMaterialiColumn);
            }
            
            public void SetTotaleMaterialiNull() {
                this[this.tableTotali.TotaleMaterialiColumn] = System.Convert.DBNull;
            }
            
            public bool IsWR_IDNull() {
                return this.IsNull(this.tableTotali.WR_IDColumn);
            }
            
            public void SetWR_IDNull() {
                this[this.tableTotali.WR_IDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TotaliRowChangeEvent : EventArgs {
            
            private TotaliRow eventRow;
            
            private DataRowAction eventAction;
            
            public TotaliRowChangeEvent(TotaliRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public TotaliRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class rapportoTecnicoInterventoCumulativoDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnC0DICE_EDIFICIO;
            
            private DataColumn columnRICHIESTA_DI_LAVORO;
            
            private DataColumn columnADDETTO_ID;
            
            private DataColumn columnDATA_DA;
            
            private DataColumn columnDATA_A;
            
            private DataColumn columnORDINE_LAVORO;
            
            private DataColumn columnSTATO_RICHIESTA;
            
            private DataColumn columnSERVIZIO_ID;
            
            private DataColumn columnRICHIEDENTI_TIPO_ID;
            
            private DataColumn columnEM_ID;
            
            private DataColumn columnID_PRIORITY;
            
            private DataColumn columnDESCRIZIONE;
            
            private DataColumn columnTIPOMANUTENZIONE_ID;
            
            private DataColumn columnDATA_ASSEGNAZIONE_INIT;
            
            private DataColumn columnDATA_ASEGNAZIONE_END;
            
            private DataColumn columnRPT_ID;
            
            internal rapportoTecnicoInterventoCumulativoDataTable() : 
                    base("rapportoTecnicoInterventoCumulativo") {
                this.InitClass();
            }
            
            internal rapportoTecnicoInterventoCumulativoDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn C0DICE_EDIFICIOColumn {
                get {
                    return this.columnC0DICE_EDIFICIO;
                }
            }
            
            internal DataColumn RICHIESTA_DI_LAVOROColumn {
                get {
                    return this.columnRICHIESTA_DI_LAVORO;
                }
            }
            
            internal DataColumn ADDETTO_IDColumn {
                get {
                    return this.columnADDETTO_ID;
                }
            }
            
            internal DataColumn DATA_DAColumn {
                get {
                    return this.columnDATA_DA;
                }
            }
            
            internal DataColumn DATA_AColumn {
                get {
                    return this.columnDATA_A;
                }
            }
            
            internal DataColumn ORDINE_LAVOROColumn {
                get {
                    return this.columnORDINE_LAVORO;
                }
            }
            
            internal DataColumn STATO_RICHIESTAColumn {
                get {
                    return this.columnSTATO_RICHIESTA;
                }
            }
            
            internal DataColumn SERVIZIO_IDColumn {
                get {
                    return this.columnSERVIZIO_ID;
                }
            }
            
            internal DataColumn RICHIEDENTI_TIPO_IDColumn {
                get {
                    return this.columnRICHIEDENTI_TIPO_ID;
                }
            }
            
            internal DataColumn EM_IDColumn {
                get {
                    return this.columnEM_ID;
                }
            }
            
            internal DataColumn ID_PRIORITYColumn {
                get {
                    return this.columnID_PRIORITY;
                }
            }
            
            internal DataColumn DESCRIZIONEColumn {
                get {
                    return this.columnDESCRIZIONE;
                }
            }
            
            internal DataColumn TIPOMANUTENZIONE_IDColumn {
                get {
                    return this.columnTIPOMANUTENZIONE_ID;
                }
            }
            
            internal DataColumn DATA_ASSEGNAZIONE_INITColumn {
                get {
                    return this.columnDATA_ASSEGNAZIONE_INIT;
                }
            }
            
            internal DataColumn DATA_ASEGNAZIONE_ENDColumn {
                get {
                    return this.columnDATA_ASEGNAZIONE_END;
                }
            }
            
            internal DataColumn RPT_IDColumn {
                get {
                    return this.columnRPT_ID;
                }
            }
            
            public rapportoTecnicoInterventoCumulativoRow this[int index] {
                get {
                    return ((rapportoTecnicoInterventoCumulativoRow)(this.Rows[index]));
                }
            }
            
            public event rapportoTecnicoInterventoCumulativoRowChangeEventHandler rapportoTecnicoInterventoCumulativoRowChanged;
            
            public event rapportoTecnicoInterventoCumulativoRowChangeEventHandler rapportoTecnicoInterventoCumulativoRowChanging;
            
            public event rapportoTecnicoInterventoCumulativoRowChangeEventHandler rapportoTecnicoInterventoCumulativoRowDeleted;
            
            public event rapportoTecnicoInterventoCumulativoRowChangeEventHandler rapportoTecnicoInterventoCumulativoRowDeleting;
            
            public void AddrapportoTecnicoInterventoCumulativoRow(rapportoTecnicoInterventoCumulativoRow row) {
                this.Rows.Add(row);
            }
            
            public rapportoTecnicoInterventoCumulativoRow AddrapportoTecnicoInterventoCumulativoRow(
                        string C0DICE_EDIFICIO, 
                        string RICHIESTA_DI_LAVORO, 
                        string ADDETTO_ID, 
                        string DATA_DA, 
                        string DATA_A, 
                        string ORDINE_LAVORO, 
                        string STATO_RICHIESTA, 
                        string SERVIZIO_ID, 
                        string RICHIEDENTI_TIPO_ID, 
                        string EM_ID, 
                        string ID_PRIORITY, 
                        string DESCRIZIONE, 
                        string TIPOMANUTENZIONE_ID, 
                        string DATA_ASSEGNAZIONE_INIT, 
                        string DATA_ASEGNAZIONE_END, 
                        long RPT_ID) {
                rapportoTecnicoInterventoCumulativoRow rowrapportoTecnicoInterventoCumulativoRow = ((rapportoTecnicoInterventoCumulativoRow)(this.NewRow()));
                rowrapportoTecnicoInterventoCumulativoRow.ItemArray = new object[] {
                        C0DICE_EDIFICIO,
                        RICHIESTA_DI_LAVORO,
                        ADDETTO_ID,
                        DATA_DA,
                        DATA_A,
                        ORDINE_LAVORO,
                        STATO_RICHIESTA,
                        SERVIZIO_ID,
                        RICHIEDENTI_TIPO_ID,
                        EM_ID,
                        ID_PRIORITY,
                        DESCRIZIONE,
                        TIPOMANUTENZIONE_ID,
                        DATA_ASSEGNAZIONE_INIT,
                        DATA_ASEGNAZIONE_END,
                        RPT_ID};
                this.Rows.Add(rowrapportoTecnicoInterventoCumulativoRow);
                return rowrapportoTecnicoInterventoCumulativoRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                rapportoTecnicoInterventoCumulativoDataTable cln = ((rapportoTecnicoInterventoCumulativoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new rapportoTecnicoInterventoCumulativoDataTable();
            }
            
            internal void InitVars() {
                this.columnC0DICE_EDIFICIO = this.Columns["C0DICE_EDIFICIO"];
                this.columnRICHIESTA_DI_LAVORO = this.Columns["RICHIESTA_DI_LAVORO"];
                this.columnADDETTO_ID = this.Columns["ADDETTO_ID"];
                this.columnDATA_DA = this.Columns["DATA_DA"];
                this.columnDATA_A = this.Columns["DATA_A"];
                this.columnORDINE_LAVORO = this.Columns["ORDINE_LAVORO"];
                this.columnSTATO_RICHIESTA = this.Columns["STATO_RICHIESTA"];
                this.columnSERVIZIO_ID = this.Columns["SERVIZIO_ID"];
                this.columnRICHIEDENTI_TIPO_ID = this.Columns["RICHIEDENTI_TIPO_ID"];
                this.columnEM_ID = this.Columns["EM_ID"];
                this.columnID_PRIORITY = this.Columns["ID_PRIORITY"];
                this.columnDESCRIZIONE = this.Columns["DESCRIZIONE"];
                this.columnTIPOMANUTENZIONE_ID = this.Columns["TIPOMANUTENZIONE_ID"];
                this.columnDATA_ASSEGNAZIONE_INIT = this.Columns["DATA_ASSEGNAZIONE_INIT"];
                this.columnDATA_ASEGNAZIONE_END = this.Columns["DATA_ASEGNAZIONE_END"];
                this.columnRPT_ID = this.Columns["RPT_ID"];
            }
            
            private void InitClass() {
                this.columnC0DICE_EDIFICIO = new DataColumn("C0DICE_EDIFICIO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnC0DICE_EDIFICIO);
                this.columnRICHIESTA_DI_LAVORO = new DataColumn("RICHIESTA_DI_LAVORO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRICHIESTA_DI_LAVORO);
                this.columnADDETTO_ID = new DataColumn("ADDETTO_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnADDETTO_ID);
                this.columnDATA_DA = new DataColumn("DATA_DA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDATA_DA);
                this.columnDATA_A = new DataColumn("DATA_A", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDATA_A);
                this.columnORDINE_LAVORO = new DataColumn("ORDINE_LAVORO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnORDINE_LAVORO);
                this.columnSTATO_RICHIESTA = new DataColumn("STATO_RICHIESTA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSTATO_RICHIESTA);
                this.columnSERVIZIO_ID = new DataColumn("SERVIZIO_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSERVIZIO_ID);
                this.columnRICHIEDENTI_TIPO_ID = new DataColumn("RICHIEDENTI_TIPO_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRICHIEDENTI_TIPO_ID);
                this.columnEM_ID = new DataColumn("EM_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEM_ID);
                this.columnID_PRIORITY = new DataColumn("ID_PRIORITY", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnID_PRIORITY);
                this.columnDESCRIZIONE = new DataColumn("DESCRIZIONE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDESCRIZIONE);
                this.columnTIPOMANUTENZIONE_ID = new DataColumn("TIPOMANUTENZIONE_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTIPOMANUTENZIONE_ID);
                this.columnDATA_ASSEGNAZIONE_INIT = new DataColumn("DATA_ASSEGNAZIONE_INIT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDATA_ASSEGNAZIONE_INIT);
                this.columnDATA_ASEGNAZIONE_END = new DataColumn("DATA_ASEGNAZIONE_END", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDATA_ASEGNAZIONE_END);
                this.columnRPT_ID = new DataColumn("RPT_ID", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRPT_ID);
            }
            
            public rapportoTecnicoInterventoCumulativoRow NewrapportoTecnicoInterventoCumulativoRow() {
                return ((rapportoTecnicoInterventoCumulativoRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new rapportoTecnicoInterventoCumulativoRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(rapportoTecnicoInterventoCumulativoRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.rapportoTecnicoInterventoCumulativoRowChanged != null)) {
                    this.rapportoTecnicoInterventoCumulativoRowChanged(this, new rapportoTecnicoInterventoCumulativoRowChangeEvent(((rapportoTecnicoInterventoCumulativoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.rapportoTecnicoInterventoCumulativoRowChanging != null)) {
                    this.rapportoTecnicoInterventoCumulativoRowChanging(this, new rapportoTecnicoInterventoCumulativoRowChangeEvent(((rapportoTecnicoInterventoCumulativoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.rapportoTecnicoInterventoCumulativoRowDeleted != null)) {
                    this.rapportoTecnicoInterventoCumulativoRowDeleted(this, new rapportoTecnicoInterventoCumulativoRowChangeEvent(((rapportoTecnicoInterventoCumulativoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.rapportoTecnicoInterventoCumulativoRowDeleting != null)) {
                    this.rapportoTecnicoInterventoCumulativoRowDeleting(this, new rapportoTecnicoInterventoCumulativoRowChangeEvent(((rapportoTecnicoInterventoCumulativoRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoverapportoTecnicoInterventoCumulativoRow(rapportoTecnicoInterventoCumulativoRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class rapportoTecnicoInterventoCumulativoRow : DataRow {
            
            private rapportoTecnicoInterventoCumulativoDataTable tablerapportoTecnicoInterventoCumulativo;
            
            internal rapportoTecnicoInterventoCumulativoRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tablerapportoTecnicoInterventoCumulativo = ((rapportoTecnicoInterventoCumulativoDataTable)(this.Table));
            }
            
            public string C0DICE_EDIFICIO {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoInterventoCumulativo.C0DICE_EDIFICIOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoInterventoCumulativo.C0DICE_EDIFICIOColumn] = value;
                }
            }
            
            public string RICHIESTA_DI_LAVORO {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoInterventoCumulativo.RICHIESTA_DI_LAVOROColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoInterventoCumulativo.RICHIESTA_DI_LAVOROColumn] = value;
                }
            }
            
            public string ADDETTO_ID {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoInterventoCumulativo.ADDETTO_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoInterventoCumulativo.ADDETTO_IDColumn] = value;
                }
            }
            
            public string DATA_DA {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoInterventoCumulativo.DATA_DAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoInterventoCumulativo.DATA_DAColumn] = value;
                }
            }
            
            public string DATA_A {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoInterventoCumulativo.DATA_AColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoInterventoCumulativo.DATA_AColumn] = value;
                }
            }
            
            public string ORDINE_LAVORO {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoInterventoCumulativo.ORDINE_LAVOROColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoInterventoCumulativo.ORDINE_LAVOROColumn] = value;
                }
            }
            
            public string STATO_RICHIESTA {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoInterventoCumulativo.STATO_RICHIESTAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoInterventoCumulativo.STATO_RICHIESTAColumn] = value;
                }
            }
            
            public string SERVIZIO_ID {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoInterventoCumulativo.SERVIZIO_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoInterventoCumulativo.SERVIZIO_IDColumn] = value;
                }
            }
            
            public string RICHIEDENTI_TIPO_ID {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoInterventoCumulativo.RICHIEDENTI_TIPO_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoInterventoCumulativo.RICHIEDENTI_TIPO_IDColumn] = value;
                }
            }
            
            public string EM_ID {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoInterventoCumulativo.EM_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoInterventoCumulativo.EM_IDColumn] = value;
                }
            }
            
            public string ID_PRIORITY {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoInterventoCumulativo.ID_PRIORITYColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoInterventoCumulativo.ID_PRIORITYColumn] = value;
                }
            }
            
            public string DESCRIZIONE {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoInterventoCumulativo.DESCRIZIONEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoInterventoCumulativo.DESCRIZIONEColumn] = value;
                }
            }
            
            public string TIPOMANUTENZIONE_ID {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoInterventoCumulativo.TIPOMANUTENZIONE_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoInterventoCumulativo.TIPOMANUTENZIONE_IDColumn] = value;
                }
            }
            
            public string DATA_ASSEGNAZIONE_INIT {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoInterventoCumulativo.DATA_ASSEGNAZIONE_INITColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoInterventoCumulativo.DATA_ASSEGNAZIONE_INITColumn] = value;
                }
            }
            
            public string DATA_ASEGNAZIONE_END {
                get {
                    try {
                        return ((string)(this[this.tablerapportoTecnicoInterventoCumulativo.DATA_ASEGNAZIONE_ENDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoInterventoCumulativo.DATA_ASEGNAZIONE_ENDColumn] = value;
                }
            }
            
            public long RPT_ID {
                get {
                    try {
                        return ((long)(this[this.tablerapportoTecnicoInterventoCumulativo.RPT_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tablerapportoTecnicoInterventoCumulativo.RPT_IDColumn] = value;
                }
            }
            
            public bool IsC0DICE_EDIFICIONull() {
                return this.IsNull(this.tablerapportoTecnicoInterventoCumulativo.C0DICE_EDIFICIOColumn);
            }
            
            public void SetC0DICE_EDIFICIONull() {
                this[this.tablerapportoTecnicoInterventoCumulativo.C0DICE_EDIFICIOColumn] = System.Convert.DBNull;
            }
            
            public bool IsRICHIESTA_DI_LAVORONull() {
                return this.IsNull(this.tablerapportoTecnicoInterventoCumulativo.RICHIESTA_DI_LAVOROColumn);
            }
            
            public void SetRICHIESTA_DI_LAVORONull() {
                this[this.tablerapportoTecnicoInterventoCumulativo.RICHIESTA_DI_LAVOROColumn] = System.Convert.DBNull;
            }
            
            public bool IsADDETTO_IDNull() {
                return this.IsNull(this.tablerapportoTecnicoInterventoCumulativo.ADDETTO_IDColumn);
            }
            
            public void SetADDETTO_IDNull() {
                this[this.tablerapportoTecnicoInterventoCumulativo.ADDETTO_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsDATA_DANull() {
                return this.IsNull(this.tablerapportoTecnicoInterventoCumulativo.DATA_DAColumn);
            }
            
            public void SetDATA_DANull() {
                this[this.tablerapportoTecnicoInterventoCumulativo.DATA_DAColumn] = System.Convert.DBNull;
            }
            
            public bool IsDATA_ANull() {
                return this.IsNull(this.tablerapportoTecnicoInterventoCumulativo.DATA_AColumn);
            }
            
            public void SetDATA_ANull() {
                this[this.tablerapportoTecnicoInterventoCumulativo.DATA_AColumn] = System.Convert.DBNull;
            }
            
            public bool IsORDINE_LAVORONull() {
                return this.IsNull(this.tablerapportoTecnicoInterventoCumulativo.ORDINE_LAVOROColumn);
            }
            
            public void SetORDINE_LAVORONull() {
                this[this.tablerapportoTecnicoInterventoCumulativo.ORDINE_LAVOROColumn] = System.Convert.DBNull;
            }
            
            public bool IsSTATO_RICHIESTANull() {
                return this.IsNull(this.tablerapportoTecnicoInterventoCumulativo.STATO_RICHIESTAColumn);
            }
            
            public void SetSTATO_RICHIESTANull() {
                this[this.tablerapportoTecnicoInterventoCumulativo.STATO_RICHIESTAColumn] = System.Convert.DBNull;
            }
            
            public bool IsSERVIZIO_IDNull() {
                return this.IsNull(this.tablerapportoTecnicoInterventoCumulativo.SERVIZIO_IDColumn);
            }
            
            public void SetSERVIZIO_IDNull() {
                this[this.tablerapportoTecnicoInterventoCumulativo.SERVIZIO_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsRICHIEDENTI_TIPO_IDNull() {
                return this.IsNull(this.tablerapportoTecnicoInterventoCumulativo.RICHIEDENTI_TIPO_IDColumn);
            }
            
            public void SetRICHIEDENTI_TIPO_IDNull() {
                this[this.tablerapportoTecnicoInterventoCumulativo.RICHIEDENTI_TIPO_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEM_IDNull() {
                return this.IsNull(this.tablerapportoTecnicoInterventoCumulativo.EM_IDColumn);
            }
            
            public void SetEM_IDNull() {
                this[this.tablerapportoTecnicoInterventoCumulativo.EM_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsID_PRIORITYNull() {
                return this.IsNull(this.tablerapportoTecnicoInterventoCumulativo.ID_PRIORITYColumn);
            }
            
            public void SetID_PRIORITYNull() {
                this[this.tablerapportoTecnicoInterventoCumulativo.ID_PRIORITYColumn] = System.Convert.DBNull;
            }
            
            public bool IsDESCRIZIONENull() {
                return this.IsNull(this.tablerapportoTecnicoInterventoCumulativo.DESCRIZIONEColumn);
            }
            
            public void SetDESCRIZIONENull() {
                this[this.tablerapportoTecnicoInterventoCumulativo.DESCRIZIONEColumn] = System.Convert.DBNull;
            }
            
            public bool IsTIPOMANUTENZIONE_IDNull() {
                return this.IsNull(this.tablerapportoTecnicoInterventoCumulativo.TIPOMANUTENZIONE_IDColumn);
            }
            
            public void SetTIPOMANUTENZIONE_IDNull() {
                this[this.tablerapportoTecnicoInterventoCumulativo.TIPOMANUTENZIONE_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsDATA_ASSEGNAZIONE_INITNull() {
                return this.IsNull(this.tablerapportoTecnicoInterventoCumulativo.DATA_ASSEGNAZIONE_INITColumn);
            }
            
            public void SetDATA_ASSEGNAZIONE_INITNull() {
                this[this.tablerapportoTecnicoInterventoCumulativo.DATA_ASSEGNAZIONE_INITColumn] = System.Convert.DBNull;
            }
            
            public bool IsDATA_ASEGNAZIONE_ENDNull() {
                return this.IsNull(this.tablerapportoTecnicoInterventoCumulativo.DATA_ASEGNAZIONE_ENDColumn);
            }
            
            public void SetDATA_ASEGNAZIONE_ENDNull() {
                this[this.tablerapportoTecnicoInterventoCumulativo.DATA_ASEGNAZIONE_ENDColumn] = System.Convert.DBNull;
            }
            
            public bool IsRPT_IDNull() {
                return this.IsNull(this.tablerapportoTecnicoInterventoCumulativo.RPT_IDColumn);
            }
            
            public void SetRPT_IDNull() {
                this[this.tablerapportoTecnicoInterventoCumulativo.RPT_IDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class rapportoTecnicoInterventoCumulativoRowChangeEvent : EventArgs {
            
            private rapportoTecnicoInterventoCumulativoRow eventRow;
            
            private DataRowAction eventAction;
            
            public rapportoTecnicoInterventoCumulativoRowChangeEvent(rapportoTecnicoInterventoCumulativoRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public rapportoTecnicoInterventoCumulativoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MainTableDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnWR_ID;
            
            private DataColumn columnWO_ID;
            
            private DataColumn columnHA_MANODOPERA;
            
            private DataColumn columnHA_MATERIALI;
            
            internal MainTableDataTable() : 
                    base("MainTable") {
                this.InitClass();
            }
            
            internal MainTableDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn WR_IDColumn {
                get {
                    return this.columnWR_ID;
                }
            }
            
            internal DataColumn WO_IDColumn {
                get {
                    return this.columnWO_ID;
                }
            }
            
            internal DataColumn HA_MANODOPERAColumn {
                get {
                    return this.columnHA_MANODOPERA;
                }
            }
            
            internal DataColumn HA_MATERIALIColumn {
                get {
                    return this.columnHA_MATERIALI;
                }
            }
            
            public MainTableRow this[int index] {
                get {
                    return ((MainTableRow)(this.Rows[index]));
                }
            }
            
            public event MainTableRowChangeEventHandler MainTableRowChanged;
            
            public event MainTableRowChangeEventHandler MainTableRowChanging;
            
            public event MainTableRowChangeEventHandler MainTableRowDeleted;
            
            public event MainTableRowChangeEventHandler MainTableRowDeleting;
            
            public void AddMainTableRow(MainTableRow row) {
                this.Rows.Add(row);
            }
            
            public MainTableRow AddMainTableRow(long WR_ID, string WO_ID, string HA_MANODOPERA, string HA_MATERIALI) {
                MainTableRow rowMainTableRow = ((MainTableRow)(this.NewRow()));
                rowMainTableRow.ItemArray = new object[] {
                        WR_ID,
                        WO_ID,
                        HA_MANODOPERA,
                        HA_MATERIALI};
                this.Rows.Add(rowMainTableRow);
                return rowMainTableRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                MainTableDataTable cln = ((MainTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new MainTableDataTable();
            }
            
            internal void InitVars() {
                this.columnWR_ID = this.Columns["WR_ID"];
                this.columnWO_ID = this.Columns["WO_ID"];
                this.columnHA_MANODOPERA = this.Columns["HA_MANODOPERA"];
                this.columnHA_MATERIALI = this.Columns["HA_MATERIALI"];
            }
            
            private void InitClass() {
                this.columnWR_ID = new DataColumn("WR_ID", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWR_ID);
                this.columnWO_ID = new DataColumn("WO_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWO_ID);
                this.columnHA_MANODOPERA = new DataColumn("HA_MANODOPERA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHA_MANODOPERA);
                this.columnHA_MATERIALI = new DataColumn("HA_MATERIALI", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHA_MATERIALI);
            }
            
            public MainTableRow NewMainTableRow() {
                return ((MainTableRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new MainTableRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(MainTableRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MainTableRowChanged != null)) {
                    this.MainTableRowChanged(this, new MainTableRowChangeEvent(((MainTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MainTableRowChanging != null)) {
                    this.MainTableRowChanging(this, new MainTableRowChangeEvent(((MainTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MainTableRowDeleted != null)) {
                    this.MainTableRowDeleted(this, new MainTableRowChangeEvent(((MainTableRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MainTableRowDeleting != null)) {
                    this.MainTableRowDeleting(this, new MainTableRowChangeEvent(((MainTableRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveMainTableRow(MainTableRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MainTableRow : DataRow {
            
            private MainTableDataTable tableMainTable;
            
            internal MainTableRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableMainTable = ((MainTableDataTable)(this.Table));
            }
            
            public long WR_ID {
                get {
                    try {
                        return ((long)(this[this.tableMainTable.WR_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainTable.WR_IDColumn] = value;
                }
            }
            
            public string WO_ID {
                get {
                    try {
                        return ((string)(this[this.tableMainTable.WO_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainTable.WO_IDColumn] = value;
                }
            }
            
            public string HA_MANODOPERA {
                get {
                    try {
                        return ((string)(this[this.tableMainTable.HA_MANODOPERAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainTable.HA_MANODOPERAColumn] = value;
                }
            }
            
            public string HA_MATERIALI {
                get {
                    try {
                        return ((string)(this[this.tableMainTable.HA_MATERIALIColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableMainTable.HA_MATERIALIColumn] = value;
                }
            }
            
            public bool IsWR_IDNull() {
                return this.IsNull(this.tableMainTable.WR_IDColumn);
            }
            
            public void SetWR_IDNull() {
                this[this.tableMainTable.WR_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsWO_IDNull() {
                return this.IsNull(this.tableMainTable.WO_IDColumn);
            }
            
            public void SetWO_IDNull() {
                this[this.tableMainTable.WO_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsHA_MANODOPERANull() {
                return this.IsNull(this.tableMainTable.HA_MANODOPERAColumn);
            }
            
            public void SetHA_MANODOPERANull() {
                this[this.tableMainTable.HA_MANODOPERAColumn] = System.Convert.DBNull;
            }
            
            public bool IsHA_MATERIALINull() {
                return this.IsNull(this.tableMainTable.HA_MATERIALIColumn);
            }
            
            public void SetHA_MATERIALINull() {
                this[this.tableMainTable.HA_MATERIALIColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MainTableRowChangeEvent : EventArgs {
            
            private MainTableRow eventRow;
            
            private DataRowAction eventAction;
            
            public MainTableRowChangeEvent(MainTableRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public MainTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblLogoDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnImmagine;
            
            private DataColumn columnID_PROGETTO;
            
            internal TblLogoDataTable() : 
                    base("TblLogo") {
                this.InitClass();
            }
            
            internal TblLogoDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn ImmagineColumn {
                get {
                    return this.columnImmagine;
                }
            }
            
            internal DataColumn ID_PROGETTOColumn {
                get {
                    return this.columnID_PROGETTO;
                }
            }
            
            public TblLogoRow this[int index] {
                get {
                    return ((TblLogoRow)(this.Rows[index]));
                }
            }
            
            public event TblLogoRowChangeEventHandler TblLogoRowChanged;
            
            public event TblLogoRowChangeEventHandler TblLogoRowChanging;
            
            public event TblLogoRowChangeEventHandler TblLogoRowDeleted;
            
            public event TblLogoRowChangeEventHandler TblLogoRowDeleting;
            
            public void AddTblLogoRow(TblLogoRow row) {
                this.Rows.Add(row);
            }
            
            public TblLogoRow AddTblLogoRow(System.Byte[] Immagine, long ID_PROGETTO) {
                TblLogoRow rowTblLogoRow = ((TblLogoRow)(this.NewRow()));
                rowTblLogoRow.ItemArray = new object[] {
                        Immagine,
                        ID_PROGETTO};
                this.Rows.Add(rowTblLogoRow);
                return rowTblLogoRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                TblLogoDataTable cln = ((TblLogoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new TblLogoDataTable();
            }
            
            internal void InitVars() {
                this.columnImmagine = this.Columns["Immagine"];
                this.columnID_PROGETTO = this.Columns["ID_PROGETTO"];
            }
            
            private void InitClass() {
                this.columnImmagine = new DataColumn("Immagine", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnImmagine);
                this.columnID_PROGETTO = new DataColumn("ID_PROGETTO", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnID_PROGETTO);
            }
            
            public TblLogoRow NewTblLogoRow() {
                return ((TblLogoRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new TblLogoRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(TblLogoRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TblLogoRowChanged != null)) {
                    this.TblLogoRowChanged(this, new TblLogoRowChangeEvent(((TblLogoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TblLogoRowChanging != null)) {
                    this.TblLogoRowChanging(this, new TblLogoRowChangeEvent(((TblLogoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TblLogoRowDeleted != null)) {
                    this.TblLogoRowDeleted(this, new TblLogoRowChangeEvent(((TblLogoRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TblLogoRowDeleting != null)) {
                    this.TblLogoRowDeleting(this, new TblLogoRowChangeEvent(((TblLogoRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveTblLogoRow(TblLogoRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblLogoRow : DataRow {
            
            private TblLogoDataTable tableTblLogo;
            
            internal TblLogoRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableTblLogo = ((TblLogoDataTable)(this.Table));
            }
            
            public System.Byte[] Immagine {
                get {
                    try {
                        return ((System.Byte[])(this[this.tableTblLogo.ImmagineColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblLogo.ImmagineColumn] = value;
                }
            }
            
            public long ID_PROGETTO {
                get {
                    try {
                        return ((long)(this[this.tableTblLogo.ID_PROGETTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblLogo.ID_PROGETTOColumn] = value;
                }
            }
            
            public bool IsImmagineNull() {
                return this.IsNull(this.tableTblLogo.ImmagineColumn);
            }
            
            public void SetImmagineNull() {
                this[this.tableTblLogo.ImmagineColumn] = System.Convert.DBNull;
            }
            
            public bool IsID_PROGETTONull() {
                return this.IsNull(this.tableTblLogo.ID_PROGETTOColumn);
            }
            
            public void SetID_PROGETTONull() {
                this[this.tableTblLogo.ID_PROGETTOColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblLogoRowChangeEvent : EventArgs {
            
            private TblLogoRow eventRow;
            
            private DataRowAction eventAction;
            
            public TblLogoRowChangeEvent(TblLogoRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public TblLogoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
