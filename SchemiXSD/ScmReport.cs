//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace TheSite.SchemiXSD {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class NewDataSet : DataSet {
        
        private TblGeneraleDataTable tableTblGenerale;
        
        private TblDatiTecniciDataTable tableTblDatiTecnici;
        
        private TblPmpPassiDataTable tableTblPmpPassi;
        
        private TblAllDataDataTable tableTblAllData;
        
        private TblAllegatiDataTable tableTblAllegati;
        
        private TblDatiTecniciEstesaDataTable tableTblDatiTecniciEstesa;
        
        private TblAllegatiEstesaDataTable tableTblAllegatiEstesa;
        
        private TblManRicDataTable tableTblManRic;
        
        private TblManProgDataTable tableTblManProg;
        
        private TblManStraDataTable tableTblManStra;
        
        public NewDataSet() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected NewDataSet(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["TblGenerale"] != null)) {
                    this.Tables.Add(new TblGeneraleDataTable(ds.Tables["TblGenerale"]));
                }
                if ((ds.Tables["TblDatiTecnici"] != null)) {
                    this.Tables.Add(new TblDatiTecniciDataTable(ds.Tables["TblDatiTecnici"]));
                }
                if ((ds.Tables["TblPmpPassi"] != null)) {
                    this.Tables.Add(new TblPmpPassiDataTable(ds.Tables["TblPmpPassi"]));
                }
                if ((ds.Tables["TblAllData"] != null)) {
                    this.Tables.Add(new TblAllDataDataTable(ds.Tables["TblAllData"]));
                }
                if ((ds.Tables["TblAllegati"] != null)) {
                    this.Tables.Add(new TblAllegatiDataTable(ds.Tables["TblAllegati"]));
                }
                if ((ds.Tables["TblDatiTecniciEstesa"] != null)) {
                    this.Tables.Add(new TblDatiTecniciEstesaDataTable(ds.Tables["TblDatiTecniciEstesa"]));
                }
                if ((ds.Tables["TblAllegatiEstesa"] != null)) {
                    this.Tables.Add(new TblAllegatiEstesaDataTable(ds.Tables["TblAllegatiEstesa"]));
                }
                if ((ds.Tables["TblManRic"] != null)) {
                    this.Tables.Add(new TblManRicDataTable(ds.Tables["TblManRic"]));
                }
                if ((ds.Tables["TblManProg"] != null)) {
                    this.Tables.Add(new TblManProgDataTable(ds.Tables["TblManProg"]));
                }
                if ((ds.Tables["TblManStra"] != null)) {
                    this.Tables.Add(new TblManStraDataTable(ds.Tables["TblManStra"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TblGeneraleDataTable TblGenerale {
            get {
                return this.tableTblGenerale;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TblDatiTecniciDataTable TblDatiTecnici {
            get {
                return this.tableTblDatiTecnici;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TblPmpPassiDataTable TblPmpPassi {
            get {
                return this.tableTblPmpPassi;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TblAllDataDataTable TblAllData {
            get {
                return this.tableTblAllData;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TblAllegatiDataTable TblAllegati {
            get {
                return this.tableTblAllegati;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TblDatiTecniciEstesaDataTable TblDatiTecniciEstesa {
            get {
                return this.tableTblDatiTecniciEstesa;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TblAllegatiEstesaDataTable TblAllegatiEstesa {
            get {
                return this.tableTblAllegatiEstesa;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TblManRicDataTable TblManRic {
            get {
                return this.tableTblManRic;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TblManProgDataTable TblManProg {
            get {
                return this.tableTblManProg;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TblManStraDataTable TblManStra {
            get {
                return this.tableTblManStra;
            }
        }
        
        public override DataSet Clone() {
            NewDataSet cln = ((NewDataSet)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["TblGenerale"] != null)) {
                this.Tables.Add(new TblGeneraleDataTable(ds.Tables["TblGenerale"]));
            }
            if ((ds.Tables["TblDatiTecnici"] != null)) {
                this.Tables.Add(new TblDatiTecniciDataTable(ds.Tables["TblDatiTecnici"]));
            }
            if ((ds.Tables["TblPmpPassi"] != null)) {
                this.Tables.Add(new TblPmpPassiDataTable(ds.Tables["TblPmpPassi"]));
            }
            if ((ds.Tables["TblAllData"] != null)) {
                this.Tables.Add(new TblAllDataDataTable(ds.Tables["TblAllData"]));
            }
            if ((ds.Tables["TblAllegati"] != null)) {
                this.Tables.Add(new TblAllegatiDataTable(ds.Tables["TblAllegati"]));
            }
            if ((ds.Tables["TblDatiTecniciEstesa"] != null)) {
                this.Tables.Add(new TblDatiTecniciEstesaDataTable(ds.Tables["TblDatiTecniciEstesa"]));
            }
            if ((ds.Tables["TblAllegatiEstesa"] != null)) {
                this.Tables.Add(new TblAllegatiEstesaDataTable(ds.Tables["TblAllegatiEstesa"]));
            }
            if ((ds.Tables["TblManRic"] != null)) {
                this.Tables.Add(new TblManRicDataTable(ds.Tables["TblManRic"]));
            }
            if ((ds.Tables["TblManProg"] != null)) {
                this.Tables.Add(new TblManProgDataTable(ds.Tables["TblManProg"]));
            }
            if ((ds.Tables["TblManStra"] != null)) {
                this.Tables.Add(new TblManStraDataTable(ds.Tables["TblManStra"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableTblGenerale = ((TblGeneraleDataTable)(this.Tables["TblGenerale"]));
            if ((this.tableTblGenerale != null)) {
                this.tableTblGenerale.InitVars();
            }
            this.tableTblDatiTecnici = ((TblDatiTecniciDataTable)(this.Tables["TblDatiTecnici"]));
            if ((this.tableTblDatiTecnici != null)) {
                this.tableTblDatiTecnici.InitVars();
            }
            this.tableTblPmpPassi = ((TblPmpPassiDataTable)(this.Tables["TblPmpPassi"]));
            if ((this.tableTblPmpPassi != null)) {
                this.tableTblPmpPassi.InitVars();
            }
            this.tableTblAllData = ((TblAllDataDataTable)(this.Tables["TblAllData"]));
            if ((this.tableTblAllData != null)) {
                this.tableTblAllData.InitVars();
            }
            this.tableTblAllegati = ((TblAllegatiDataTable)(this.Tables["TblAllegati"]));
            if ((this.tableTblAllegati != null)) {
                this.tableTblAllegati.InitVars();
            }
            this.tableTblDatiTecniciEstesa = ((TblDatiTecniciEstesaDataTable)(this.Tables["TblDatiTecniciEstesa"]));
            if ((this.tableTblDatiTecniciEstesa != null)) {
                this.tableTblDatiTecniciEstesa.InitVars();
            }
            this.tableTblAllegatiEstesa = ((TblAllegatiEstesaDataTable)(this.Tables["TblAllegatiEstesa"]));
            if ((this.tableTblAllegatiEstesa != null)) {
                this.tableTblAllegatiEstesa.InitVars();
            }
            this.tableTblManRic = ((TblManRicDataTable)(this.Tables["TblManRic"]));
            if ((this.tableTblManRic != null)) {
                this.tableTblManRic.InitVars();
            }
            this.tableTblManProg = ((TblManProgDataTable)(this.Tables["TblManProg"]));
            if ((this.tableTblManProg != null)) {
                this.tableTblManProg.InitVars();
            }
            this.tableTblManStra = ((TblManStraDataTable)(this.Tables["TblManStra"]));
            if ((this.tableTblManStra != null)) {
                this.tableTblManStra.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "NewDataSet";
            this.Prefix = "";
            this.Namespace = "";
            this.Locale = new System.Globalization.CultureInfo("it-IT");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableTblGenerale = new TblGeneraleDataTable();
            this.Tables.Add(this.tableTblGenerale);
            this.tableTblDatiTecnici = new TblDatiTecniciDataTable();
            this.Tables.Add(this.tableTblDatiTecnici);
            this.tableTblPmpPassi = new TblPmpPassiDataTable();
            this.Tables.Add(this.tableTblPmpPassi);
            this.tableTblAllData = new TblAllDataDataTable();
            this.Tables.Add(this.tableTblAllData);
            this.tableTblAllegati = new TblAllegatiDataTable();
            this.Tables.Add(this.tableTblAllegati);
            this.tableTblDatiTecniciEstesa = new TblDatiTecniciEstesaDataTable();
            this.Tables.Add(this.tableTblDatiTecniciEstesa);
            this.tableTblAllegatiEstesa = new TblAllegatiEstesaDataTable();
            this.Tables.Add(this.tableTblAllegatiEstesa);
            this.tableTblManRic = new TblManRicDataTable();
            this.Tables.Add(this.tableTblManRic);
            this.tableTblManProg = new TblManProgDataTable();
            this.Tables.Add(this.tableTblManProg);
            this.tableTblManStra = new TblManStraDataTable();
            this.Tables.Add(this.tableTblManStra);
        }
        
        private bool ShouldSerializeTblGenerale() {
            return false;
        }
        
        private bool ShouldSerializeTblDatiTecnici() {
            return false;
        }
        
        private bool ShouldSerializeTblPmpPassi() {
            return false;
        }
        
        private bool ShouldSerializeTblAllData() {
            return false;
        }
        
        private bool ShouldSerializeTblAllegati() {
            return false;
        }
        
        private bool ShouldSerializeTblDatiTecniciEstesa() {
            return false;
        }
        
        private bool ShouldSerializeTblAllegatiEstesa() {
            return false;
        }
        
        private bool ShouldSerializeTblManRic() {
            return false;
        }
        
        private bool ShouldSerializeTblManProg() {
            return false;
        }
        
        private bool ShouldSerializeTblManStra() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void TblGeneraleRowChangeEventHandler(object sender, TblGeneraleRowChangeEvent e);
        
        public delegate void TblDatiTecniciRowChangeEventHandler(object sender, TblDatiTecniciRowChangeEvent e);
        
        public delegate void TblPmpPassiRowChangeEventHandler(object sender, TblPmpPassiRowChangeEvent e);
        
        public delegate void TblAllDataRowChangeEventHandler(object sender, TblAllDataRowChangeEvent e);
        
        public delegate void TblAllegatiRowChangeEventHandler(object sender, TblAllegatiRowChangeEvent e);
        
        public delegate void TblDatiTecniciEstesaRowChangeEventHandler(object sender, TblDatiTecniciEstesaRowChangeEvent e);
        
        public delegate void TblAllegatiEstesaRowChangeEventHandler(object sender, TblAllegatiEstesaRowChangeEvent e);
        
        public delegate void TblManRicRowChangeEventHandler(object sender, TblManRicRowChangeEvent e);
        
        public delegate void TblManProgRowChangeEventHandler(object sender, TblManProgRowChangeEvent e);
        
        public delegate void TblManStraRowChangeEventHandler(object sender, TblManStraRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblGeneraleDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnEQ_ID;
            
            private DataColumn columnEQ_OPTION1;
            
            private DataColumn columnEQ_CONDITION;
            
            private DataColumn columnEQ_CRITICALITY;
            
            private DataColumn columnEQ_OPTION2;
            
            private DataColumn columnEQ_GARANZIA;
            
            private DataColumn columnEQSTD_MODELNO;
            
            private DataColumn columnEQ_IMAGE_EQ_ASSY;
            
            private DataColumn columnEQ_RM_ID;
            
            private DataColumn columnEQ_BL_ID;
            
            private DataColumn columnEQ_VN_ID;
            
            private DataColumn columnEQ_LOC_COLUMN;
            
            private DataColumn columnEQ_LOC_MAINT_MANL;
            
            private DataColumn columnEQ_EQ_COMMENTS;
            
            private DataColumn columnEQ_POTENZA;
            
            private DataColumn columnEQ_FUEL_ID;
            
            private DataColumn columnEQ_DATE_MANUFACTURED;
            
            private DataColumn columnEQ_DATE_INSTALLED;
            
            private DataColumn columnEQ_DATE_IN_SERVICE;
            
            private DataColumn columnEQ_UTENZA;
            
            private DataColumn columnEQ_EQSTD;
            
            private DataColumn columnEQ_EQSTD_ID;
            
            private DataColumn columnEQ_QTY_PMS;
            
            private DataColumn columnEQSTD_OPTION2;
            
            private DataColumn columnEQ_NUM_SERIAL;
            
            private DataColumn columnEQ_SOTTOCOMPONENTE;
            
            private DataColumn columnEQSTD_MFR;
            
            private DataColumn columnEQSTD_CATEGORY;
            
            private DataColumn columnEQSTD_OPTION1;
            
            private DataColumn columnEQSTD_DESCRIPTION;
            
            private DataColumn columnEQSTD_EQ_STD;
            
            private DataColumn columnPIANI_DESC_ID_DESCRIZIONE;
            
            private DataColumn columnRM_RM_ID_DESCRIZIONE;
            
            private DataColumn columnBL_NAME;
            
            private DataColumn columnEQ_IMMAGINI_IMMAGINE;
            
            private DataColumn columnIdEqstd;
            
            private DataColumn columnIdEq;
            
            internal TblGeneraleDataTable() : 
                    base("TblGenerale") {
                this.InitClass();
            }
            
            internal TblGeneraleDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn EQ_IDColumn {
                get {
                    return this.columnEQ_ID;
                }
            }
            
            internal DataColumn EQ_OPTION1Column {
                get {
                    return this.columnEQ_OPTION1;
                }
            }
            
            internal DataColumn EQ_CONDITIONColumn {
                get {
                    return this.columnEQ_CONDITION;
                }
            }
            
            internal DataColumn EQ_CRITICALITYColumn {
                get {
                    return this.columnEQ_CRITICALITY;
                }
            }
            
            internal DataColumn EQ_OPTION2Column {
                get {
                    return this.columnEQ_OPTION2;
                }
            }
            
            internal DataColumn EQ_GARANZIAColumn {
                get {
                    return this.columnEQ_GARANZIA;
                }
            }
            
            internal DataColumn EQSTD_MODELNOColumn {
                get {
                    return this.columnEQSTD_MODELNO;
                }
            }
            
            internal DataColumn EQ_IMAGE_EQ_ASSYColumn {
                get {
                    return this.columnEQ_IMAGE_EQ_ASSY;
                }
            }
            
            internal DataColumn EQ_RM_IDColumn {
                get {
                    return this.columnEQ_RM_ID;
                }
            }
            
            internal DataColumn EQ_BL_IDColumn {
                get {
                    return this.columnEQ_BL_ID;
                }
            }
            
            internal DataColumn EQ_VN_IDColumn {
                get {
                    return this.columnEQ_VN_ID;
                }
            }
            
            internal DataColumn EQ_LOC_COLUMNColumn {
                get {
                    return this.columnEQ_LOC_COLUMN;
                }
            }
            
            internal DataColumn EQ_LOC_MAINT_MANLColumn {
                get {
                    return this.columnEQ_LOC_MAINT_MANL;
                }
            }
            
            internal DataColumn EQ_EQ_COMMENTSColumn {
                get {
                    return this.columnEQ_EQ_COMMENTS;
                }
            }
            
            internal DataColumn EQ_POTENZAColumn {
                get {
                    return this.columnEQ_POTENZA;
                }
            }
            
            internal DataColumn EQ_FUEL_IDColumn {
                get {
                    return this.columnEQ_FUEL_ID;
                }
            }
            
            internal DataColumn EQ_DATE_MANUFACTUREDColumn {
                get {
                    return this.columnEQ_DATE_MANUFACTURED;
                }
            }
            
            internal DataColumn EQ_DATE_INSTALLEDColumn {
                get {
                    return this.columnEQ_DATE_INSTALLED;
                }
            }
            
            internal DataColumn EQ_DATE_IN_SERVICEColumn {
                get {
                    return this.columnEQ_DATE_IN_SERVICE;
                }
            }
            
            internal DataColumn EQ_UTENZAColumn {
                get {
                    return this.columnEQ_UTENZA;
                }
            }
            
            internal DataColumn EQ_EQSTDColumn {
                get {
                    return this.columnEQ_EQSTD;
                }
            }
            
            internal DataColumn EQ_EQSTD_IDColumn {
                get {
                    return this.columnEQ_EQSTD_ID;
                }
            }
            
            internal DataColumn EQ_QTY_PMSColumn {
                get {
                    return this.columnEQ_QTY_PMS;
                }
            }
            
            internal DataColumn EQSTD_OPTION2Column {
                get {
                    return this.columnEQSTD_OPTION2;
                }
            }
            
            internal DataColumn EQ_NUM_SERIALColumn {
                get {
                    return this.columnEQ_NUM_SERIAL;
                }
            }
            
            internal DataColumn EQ_SOTTOCOMPONENTEColumn {
                get {
                    return this.columnEQ_SOTTOCOMPONENTE;
                }
            }
            
            internal DataColumn EQSTD_MFRColumn {
                get {
                    return this.columnEQSTD_MFR;
                }
            }
            
            internal DataColumn EQSTD_CATEGORYColumn {
                get {
                    return this.columnEQSTD_CATEGORY;
                }
            }
            
            internal DataColumn EQSTD_OPTION1Column {
                get {
                    return this.columnEQSTD_OPTION1;
                }
            }
            
            internal DataColumn EQSTD_DESCRIPTIONColumn {
                get {
                    return this.columnEQSTD_DESCRIPTION;
                }
            }
            
            internal DataColumn EQSTD_EQ_STDColumn {
                get {
                    return this.columnEQSTD_EQ_STD;
                }
            }
            
            internal DataColumn PIANI_DESC_ID_DESCRIZIONEColumn {
                get {
                    return this.columnPIANI_DESC_ID_DESCRIZIONE;
                }
            }
            
            internal DataColumn RM_RM_ID_DESCRIZIONEColumn {
                get {
                    return this.columnRM_RM_ID_DESCRIZIONE;
                }
            }
            
            internal DataColumn BL_NAMEColumn {
                get {
                    return this.columnBL_NAME;
                }
            }
            
            internal DataColumn EQ_IMMAGINI_IMMAGINEColumn {
                get {
                    return this.columnEQ_IMMAGINI_IMMAGINE;
                }
            }
            
            internal DataColumn IdEqstdColumn {
                get {
                    return this.columnIdEqstd;
                }
            }
            
            internal DataColumn IdEqColumn {
                get {
                    return this.columnIdEq;
                }
            }
            
            public TblGeneraleRow this[int index] {
                get {
                    return ((TblGeneraleRow)(this.Rows[index]));
                }
            }
            
            public event TblGeneraleRowChangeEventHandler TblGeneraleRowChanged;
            
            public event TblGeneraleRowChangeEventHandler TblGeneraleRowChanging;
            
            public event TblGeneraleRowChangeEventHandler TblGeneraleRowDeleted;
            
            public event TblGeneraleRowChangeEventHandler TblGeneraleRowDeleting;
            
            public void AddTblGeneraleRow(TblGeneraleRow row) {
                this.Rows.Add(row);
            }
            
            public TblGeneraleRow AddTblGeneraleRow(
                        string EQ_ID, 
                        string EQ_OPTION1, 
                        string EQ_CONDITION, 
                        string EQ_CRITICALITY, 
                        string EQ_OPTION2, 
                        string EQ_GARANZIA, 
                        string EQSTD_MODELNO, 
                        string EQ_IMAGE_EQ_ASSY, 
                        string EQ_RM_ID, 
                        string EQ_BL_ID, 
                        string EQ_VN_ID, 
                        string EQ_LOC_COLUMN, 
                        string EQ_LOC_MAINT_MANL, 
                        string EQ_EQ_COMMENTS, 
                        string EQ_POTENZA, 
                        string EQ_FUEL_ID, 
                        string EQ_DATE_MANUFACTURED, 
                        string EQ_DATE_INSTALLED, 
                        string EQ_DATE_IN_SERVICE, 
                        string EQ_UTENZA, 
                        string EQ_EQSTD, 
                        string EQ_EQSTD_ID, 
                        string EQ_QTY_PMS, 
                        string EQSTD_OPTION2, 
                        string EQ_NUM_SERIAL, 
                        string EQ_SOTTOCOMPONENTE, 
                        string EQSTD_MFR, 
                        string EQSTD_CATEGORY, 
                        string EQSTD_OPTION1, 
                        string EQSTD_DESCRIPTION, 
                        string EQSTD_EQ_STD, 
                        string PIANI_DESC_ID_DESCRIZIONE, 
                        string RM_RM_ID_DESCRIZIONE, 
                        string BL_NAME, 
                        System.Byte[] EQ_IMMAGINI_IMMAGINE, 
                        System.Decimal IdEqstd, 
                        System.Decimal IdEq) {
                TblGeneraleRow rowTblGeneraleRow = ((TblGeneraleRow)(this.NewRow()));
                rowTblGeneraleRow.ItemArray = new object[] {
                        EQ_ID,
                        EQ_OPTION1,
                        EQ_CONDITION,
                        EQ_CRITICALITY,
                        EQ_OPTION2,
                        EQ_GARANZIA,
                        EQSTD_MODELNO,
                        EQ_IMAGE_EQ_ASSY,
                        EQ_RM_ID,
                        EQ_BL_ID,
                        EQ_VN_ID,
                        EQ_LOC_COLUMN,
                        EQ_LOC_MAINT_MANL,
                        EQ_EQ_COMMENTS,
                        EQ_POTENZA,
                        EQ_FUEL_ID,
                        EQ_DATE_MANUFACTURED,
                        EQ_DATE_INSTALLED,
                        EQ_DATE_IN_SERVICE,
                        EQ_UTENZA,
                        EQ_EQSTD,
                        EQ_EQSTD_ID,
                        EQ_QTY_PMS,
                        EQSTD_OPTION2,
                        EQ_NUM_SERIAL,
                        EQ_SOTTOCOMPONENTE,
                        EQSTD_MFR,
                        EQSTD_CATEGORY,
                        EQSTD_OPTION1,
                        EQSTD_DESCRIPTION,
                        EQSTD_EQ_STD,
                        PIANI_DESC_ID_DESCRIZIONE,
                        RM_RM_ID_DESCRIZIONE,
                        BL_NAME,
                        EQ_IMMAGINI_IMMAGINE,
                        IdEqstd,
                        IdEq};
                this.Rows.Add(rowTblGeneraleRow);
                return rowTblGeneraleRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                TblGeneraleDataTable cln = ((TblGeneraleDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new TblGeneraleDataTable();
            }
            
            internal void InitVars() {
                this.columnEQ_ID = this.Columns["EQ_ID"];
                this.columnEQ_OPTION1 = this.Columns["EQ_OPTION1"];
                this.columnEQ_CONDITION = this.Columns["EQ_CONDITION"];
                this.columnEQ_CRITICALITY = this.Columns["EQ_CRITICALITY"];
                this.columnEQ_OPTION2 = this.Columns["EQ_OPTION2"];
                this.columnEQ_GARANZIA = this.Columns["EQ_GARANZIA"];
                this.columnEQSTD_MODELNO = this.Columns["EQSTD_MODELNO"];
                this.columnEQ_IMAGE_EQ_ASSY = this.Columns["EQ_IMAGE_EQ_ASSY"];
                this.columnEQ_RM_ID = this.Columns["EQ_RM_ID"];
                this.columnEQ_BL_ID = this.Columns["EQ_BL_ID"];
                this.columnEQ_VN_ID = this.Columns["EQ_VN_ID"];
                this.columnEQ_LOC_COLUMN = this.Columns["EQ_LOC_COLUMN"];
                this.columnEQ_LOC_MAINT_MANL = this.Columns["EQ_LOC_MAINT_MANL"];
                this.columnEQ_EQ_COMMENTS = this.Columns["EQ_EQ_COMMENTS"];
                this.columnEQ_POTENZA = this.Columns["EQ_POTENZA"];
                this.columnEQ_FUEL_ID = this.Columns["EQ_FUEL_ID"];
                this.columnEQ_DATE_MANUFACTURED = this.Columns["EQ_DATE_MANUFACTURED"];
                this.columnEQ_DATE_INSTALLED = this.Columns["EQ_DATE_INSTALLED"];
                this.columnEQ_DATE_IN_SERVICE = this.Columns["EQ_DATE_IN_SERVICE"];
                this.columnEQ_UTENZA = this.Columns["EQ_UTENZA"];
                this.columnEQ_EQSTD = this.Columns["EQ_EQSTD"];
                this.columnEQ_EQSTD_ID = this.Columns["EQ_EQSTD_ID"];
                this.columnEQ_QTY_PMS = this.Columns["EQ_QTY_PMS"];
                this.columnEQSTD_OPTION2 = this.Columns["EQSTD_OPTION2"];
                this.columnEQ_NUM_SERIAL = this.Columns["EQ_NUM_SERIAL"];
                this.columnEQ_SOTTOCOMPONENTE = this.Columns["EQ_SOTTOCOMPONENTE"];
                this.columnEQSTD_MFR = this.Columns["EQSTD_MFR"];
                this.columnEQSTD_CATEGORY = this.Columns["EQSTD_CATEGORY"];
                this.columnEQSTD_OPTION1 = this.Columns["EQSTD_OPTION1"];
                this.columnEQSTD_DESCRIPTION = this.Columns["EQSTD_DESCRIPTION"];
                this.columnEQSTD_EQ_STD = this.Columns["EQSTD_EQ_STD"];
                this.columnPIANI_DESC_ID_DESCRIZIONE = this.Columns["PIANI_DESC_ID_DESCRIZIONE"];
                this.columnRM_RM_ID_DESCRIZIONE = this.Columns["RM_RM_ID_DESCRIZIONE"];
                this.columnBL_NAME = this.Columns["BL_NAME"];
                this.columnEQ_IMMAGINI_IMMAGINE = this.Columns["EQ_IMMAGINI_IMMAGINE"];
                this.columnIdEqstd = this.Columns["IdEqstd"];
                this.columnIdEq = this.Columns["IdEq"];
            }
            
            private void InitClass() {
                this.columnEQ_ID = new DataColumn("EQ_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_ID);
                this.columnEQ_OPTION1 = new DataColumn("EQ_OPTION1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_OPTION1);
                this.columnEQ_CONDITION = new DataColumn("EQ_CONDITION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_CONDITION);
                this.columnEQ_CRITICALITY = new DataColumn("EQ_CRITICALITY", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_CRITICALITY);
                this.columnEQ_OPTION2 = new DataColumn("EQ_OPTION2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_OPTION2);
                this.columnEQ_GARANZIA = new DataColumn("EQ_GARANZIA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_GARANZIA);
                this.columnEQSTD_MODELNO = new DataColumn("EQSTD_MODELNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQSTD_MODELNO);
                this.columnEQ_IMAGE_EQ_ASSY = new DataColumn("EQ_IMAGE_EQ_ASSY", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_IMAGE_EQ_ASSY);
                this.columnEQ_RM_ID = new DataColumn("EQ_RM_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_RM_ID);
                this.columnEQ_BL_ID = new DataColumn("EQ_BL_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_BL_ID);
                this.columnEQ_VN_ID = new DataColumn("EQ_VN_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_VN_ID);
                this.columnEQ_LOC_COLUMN = new DataColumn("EQ_LOC_COLUMN", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_LOC_COLUMN);
                this.columnEQ_LOC_MAINT_MANL = new DataColumn("EQ_LOC_MAINT_MANL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_LOC_MAINT_MANL);
                this.columnEQ_EQ_COMMENTS = new DataColumn("EQ_EQ_COMMENTS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_EQ_COMMENTS);
                this.columnEQ_POTENZA = new DataColumn("EQ_POTENZA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_POTENZA);
                this.columnEQ_FUEL_ID = new DataColumn("EQ_FUEL_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_FUEL_ID);
                this.columnEQ_DATE_MANUFACTURED = new DataColumn("EQ_DATE_MANUFACTURED", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_DATE_MANUFACTURED);
                this.columnEQ_DATE_INSTALLED = new DataColumn("EQ_DATE_INSTALLED", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_DATE_INSTALLED);
                this.columnEQ_DATE_IN_SERVICE = new DataColumn("EQ_DATE_IN_SERVICE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_DATE_IN_SERVICE);
                this.columnEQ_UTENZA = new DataColumn("EQ_UTENZA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_UTENZA);
                this.columnEQ_EQSTD = new DataColumn("EQ_EQSTD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_EQSTD);
                this.columnEQ_EQSTD_ID = new DataColumn("EQ_EQSTD_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_EQSTD_ID);
                this.columnEQ_QTY_PMS = new DataColumn("EQ_QTY_PMS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_QTY_PMS);
                this.columnEQSTD_OPTION2 = new DataColumn("EQSTD_OPTION2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQSTD_OPTION2);
                this.columnEQ_NUM_SERIAL = new DataColumn("EQ_NUM_SERIAL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_NUM_SERIAL);
                this.columnEQ_SOTTOCOMPONENTE = new DataColumn("EQ_SOTTOCOMPONENTE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_SOTTOCOMPONENTE);
                this.columnEQSTD_MFR = new DataColumn("EQSTD_MFR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQSTD_MFR);
                this.columnEQSTD_CATEGORY = new DataColumn("EQSTD_CATEGORY", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQSTD_CATEGORY);
                this.columnEQSTD_OPTION1 = new DataColumn("EQSTD_OPTION1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQSTD_OPTION1);
                this.columnEQSTD_DESCRIPTION = new DataColumn("EQSTD_DESCRIPTION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQSTD_DESCRIPTION);
                this.columnEQSTD_EQ_STD = new DataColumn("EQSTD_EQ_STD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQSTD_EQ_STD);
                this.columnPIANI_DESC_ID_DESCRIZIONE = new DataColumn("PIANI_DESC_ID_DESCRIZIONE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPIANI_DESC_ID_DESCRIZIONE);
                this.columnRM_RM_ID_DESCRIZIONE = new DataColumn("RM_RM_ID_DESCRIZIONE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRM_RM_ID_DESCRIZIONE);
                this.columnBL_NAME = new DataColumn("BL_NAME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBL_NAME);
                this.columnEQ_IMMAGINI_IMMAGINE = new DataColumn("EQ_IMMAGINI_IMMAGINE", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_IMMAGINI_IMMAGINE);
                this.columnIdEqstd = new DataColumn("IdEqstd", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEqstd);
                this.columnIdEq = new DataColumn("IdEq", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEq);
            }
            
            public TblGeneraleRow NewTblGeneraleRow() {
                return ((TblGeneraleRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new TblGeneraleRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(TblGeneraleRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TblGeneraleRowChanged != null)) {
                    this.TblGeneraleRowChanged(this, new TblGeneraleRowChangeEvent(((TblGeneraleRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TblGeneraleRowChanging != null)) {
                    this.TblGeneraleRowChanging(this, new TblGeneraleRowChangeEvent(((TblGeneraleRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TblGeneraleRowDeleted != null)) {
                    this.TblGeneraleRowDeleted(this, new TblGeneraleRowChangeEvent(((TblGeneraleRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TblGeneraleRowDeleting != null)) {
                    this.TblGeneraleRowDeleting(this, new TblGeneraleRowChangeEvent(((TblGeneraleRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveTblGeneraleRow(TblGeneraleRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblGeneraleRow : DataRow {
            
            private TblGeneraleDataTable tableTblGenerale;
            
            internal TblGeneraleRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableTblGenerale = ((TblGeneraleDataTable)(this.Table));
            }
            
            public string EQ_ID {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQ_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQ_IDColumn] = value;
                }
            }
            
            public string EQ_OPTION1 {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQ_OPTION1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQ_OPTION1Column] = value;
                }
            }
            
            public string EQ_CONDITION {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQ_CONDITIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQ_CONDITIONColumn] = value;
                }
            }
            
            public string EQ_CRITICALITY {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQ_CRITICALITYColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQ_CRITICALITYColumn] = value;
                }
            }
            
            public string EQ_OPTION2 {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQ_OPTION2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQ_OPTION2Column] = value;
                }
            }
            
            public string EQ_GARANZIA {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQ_GARANZIAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQ_GARANZIAColumn] = value;
                }
            }
            
            public string EQSTD_MODELNO {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQSTD_MODELNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQSTD_MODELNOColumn] = value;
                }
            }
            
            public string EQ_IMAGE_EQ_ASSY {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQ_IMAGE_EQ_ASSYColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQ_IMAGE_EQ_ASSYColumn] = value;
                }
            }
            
            public string EQ_RM_ID {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQ_RM_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQ_RM_IDColumn] = value;
                }
            }
            
            public string EQ_BL_ID {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQ_BL_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQ_BL_IDColumn] = value;
                }
            }
            
            public string EQ_VN_ID {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQ_VN_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQ_VN_IDColumn] = value;
                }
            }
            
            public string EQ_LOC_COLUMN {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQ_LOC_COLUMNColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQ_LOC_COLUMNColumn] = value;
                }
            }
            
            public string EQ_LOC_MAINT_MANL {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQ_LOC_MAINT_MANLColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQ_LOC_MAINT_MANLColumn] = value;
                }
            }
            
            public string EQ_EQ_COMMENTS {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQ_EQ_COMMENTSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQ_EQ_COMMENTSColumn] = value;
                }
            }
            
            public string EQ_POTENZA {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQ_POTENZAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQ_POTENZAColumn] = value;
                }
            }
            
            public string EQ_FUEL_ID {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQ_FUEL_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQ_FUEL_IDColumn] = value;
                }
            }
            
            public string EQ_DATE_MANUFACTURED {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQ_DATE_MANUFACTUREDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQ_DATE_MANUFACTUREDColumn] = value;
                }
            }
            
            public string EQ_DATE_INSTALLED {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQ_DATE_INSTALLEDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQ_DATE_INSTALLEDColumn] = value;
                }
            }
            
            public string EQ_DATE_IN_SERVICE {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQ_DATE_IN_SERVICEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQ_DATE_IN_SERVICEColumn] = value;
                }
            }
            
            public string EQ_UTENZA {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQ_UTENZAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQ_UTENZAColumn] = value;
                }
            }
            
            public string EQ_EQSTD {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQ_EQSTDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQ_EQSTDColumn] = value;
                }
            }
            
            public string EQ_EQSTD_ID {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQ_EQSTD_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQ_EQSTD_IDColumn] = value;
                }
            }
            
            public string EQ_QTY_PMS {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQ_QTY_PMSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQ_QTY_PMSColumn] = value;
                }
            }
            
            public string EQSTD_OPTION2 {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQSTD_OPTION2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQSTD_OPTION2Column] = value;
                }
            }
            
            public string EQ_NUM_SERIAL {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQ_NUM_SERIALColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQ_NUM_SERIALColumn] = value;
                }
            }
            
            public string EQ_SOTTOCOMPONENTE {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQ_SOTTOCOMPONENTEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQ_SOTTOCOMPONENTEColumn] = value;
                }
            }
            
            public string EQSTD_MFR {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQSTD_MFRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQSTD_MFRColumn] = value;
                }
            }
            
            public string EQSTD_CATEGORY {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQSTD_CATEGORYColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQSTD_CATEGORYColumn] = value;
                }
            }
            
            public string EQSTD_OPTION1 {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQSTD_OPTION1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQSTD_OPTION1Column] = value;
                }
            }
            
            public string EQSTD_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQSTD_DESCRIPTIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQSTD_DESCRIPTIONColumn] = value;
                }
            }
            
            public string EQSTD_EQ_STD {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.EQSTD_EQ_STDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQSTD_EQ_STDColumn] = value;
                }
            }
            
            public string PIANI_DESC_ID_DESCRIZIONE {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.PIANI_DESC_ID_DESCRIZIONEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.PIANI_DESC_ID_DESCRIZIONEColumn] = value;
                }
            }
            
            public string RM_RM_ID_DESCRIZIONE {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.RM_RM_ID_DESCRIZIONEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.RM_RM_ID_DESCRIZIONEColumn] = value;
                }
            }
            
            public string BL_NAME {
                get {
                    try {
                        return ((string)(this[this.tableTblGenerale.BL_NAMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.BL_NAMEColumn] = value;
                }
            }
            
            public System.Byte[] EQ_IMMAGINI_IMMAGINE {
                get {
                    try {
                        return ((System.Byte[])(this[this.tableTblGenerale.EQ_IMMAGINI_IMMAGINEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.EQ_IMMAGINI_IMMAGINEColumn] = value;
                }
            }
            
            public System.Decimal IdEqstd {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblGenerale.IdEqstdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.IdEqstdColumn] = value;
                }
            }
            
            public System.Decimal IdEq {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblGenerale.IdEqColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblGenerale.IdEqColumn] = value;
                }
            }
            
            public bool IsEQ_IDNull() {
                return this.IsNull(this.tableTblGenerale.EQ_IDColumn);
            }
            
            public void SetEQ_IDNull() {
                this[this.tableTblGenerale.EQ_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_OPTION1Null() {
                return this.IsNull(this.tableTblGenerale.EQ_OPTION1Column);
            }
            
            public void SetEQ_OPTION1Null() {
                this[this.tableTblGenerale.EQ_OPTION1Column] = System.Convert.DBNull;
            }
            
            public bool IsEQ_CONDITIONNull() {
                return this.IsNull(this.tableTblGenerale.EQ_CONDITIONColumn);
            }
            
            public void SetEQ_CONDITIONNull() {
                this[this.tableTblGenerale.EQ_CONDITIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_CRITICALITYNull() {
                return this.IsNull(this.tableTblGenerale.EQ_CRITICALITYColumn);
            }
            
            public void SetEQ_CRITICALITYNull() {
                this[this.tableTblGenerale.EQ_CRITICALITYColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_OPTION2Null() {
                return this.IsNull(this.tableTblGenerale.EQ_OPTION2Column);
            }
            
            public void SetEQ_OPTION2Null() {
                this[this.tableTblGenerale.EQ_OPTION2Column] = System.Convert.DBNull;
            }
            
            public bool IsEQ_GARANZIANull() {
                return this.IsNull(this.tableTblGenerale.EQ_GARANZIAColumn);
            }
            
            public void SetEQ_GARANZIANull() {
                this[this.tableTblGenerale.EQ_GARANZIAColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQSTD_MODELNONull() {
                return this.IsNull(this.tableTblGenerale.EQSTD_MODELNOColumn);
            }
            
            public void SetEQSTD_MODELNONull() {
                this[this.tableTblGenerale.EQSTD_MODELNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_IMAGE_EQ_ASSYNull() {
                return this.IsNull(this.tableTblGenerale.EQ_IMAGE_EQ_ASSYColumn);
            }
            
            public void SetEQ_IMAGE_EQ_ASSYNull() {
                this[this.tableTblGenerale.EQ_IMAGE_EQ_ASSYColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_RM_IDNull() {
                return this.IsNull(this.tableTblGenerale.EQ_RM_IDColumn);
            }
            
            public void SetEQ_RM_IDNull() {
                this[this.tableTblGenerale.EQ_RM_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_BL_IDNull() {
                return this.IsNull(this.tableTblGenerale.EQ_BL_IDColumn);
            }
            
            public void SetEQ_BL_IDNull() {
                this[this.tableTblGenerale.EQ_BL_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_VN_IDNull() {
                return this.IsNull(this.tableTblGenerale.EQ_VN_IDColumn);
            }
            
            public void SetEQ_VN_IDNull() {
                this[this.tableTblGenerale.EQ_VN_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_LOC_COLUMNNull() {
                return this.IsNull(this.tableTblGenerale.EQ_LOC_COLUMNColumn);
            }
            
            public void SetEQ_LOC_COLUMNNull() {
                this[this.tableTblGenerale.EQ_LOC_COLUMNColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_LOC_MAINT_MANLNull() {
                return this.IsNull(this.tableTblGenerale.EQ_LOC_MAINT_MANLColumn);
            }
            
            public void SetEQ_LOC_MAINT_MANLNull() {
                this[this.tableTblGenerale.EQ_LOC_MAINT_MANLColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_EQ_COMMENTSNull() {
                return this.IsNull(this.tableTblGenerale.EQ_EQ_COMMENTSColumn);
            }
            
            public void SetEQ_EQ_COMMENTSNull() {
                this[this.tableTblGenerale.EQ_EQ_COMMENTSColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_POTENZANull() {
                return this.IsNull(this.tableTblGenerale.EQ_POTENZAColumn);
            }
            
            public void SetEQ_POTENZANull() {
                this[this.tableTblGenerale.EQ_POTENZAColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_FUEL_IDNull() {
                return this.IsNull(this.tableTblGenerale.EQ_FUEL_IDColumn);
            }
            
            public void SetEQ_FUEL_IDNull() {
                this[this.tableTblGenerale.EQ_FUEL_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_DATE_MANUFACTUREDNull() {
                return this.IsNull(this.tableTblGenerale.EQ_DATE_MANUFACTUREDColumn);
            }
            
            public void SetEQ_DATE_MANUFACTUREDNull() {
                this[this.tableTblGenerale.EQ_DATE_MANUFACTUREDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_DATE_INSTALLEDNull() {
                return this.IsNull(this.tableTblGenerale.EQ_DATE_INSTALLEDColumn);
            }
            
            public void SetEQ_DATE_INSTALLEDNull() {
                this[this.tableTblGenerale.EQ_DATE_INSTALLEDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_DATE_IN_SERVICENull() {
                return this.IsNull(this.tableTblGenerale.EQ_DATE_IN_SERVICEColumn);
            }
            
            public void SetEQ_DATE_IN_SERVICENull() {
                this[this.tableTblGenerale.EQ_DATE_IN_SERVICEColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_UTENZANull() {
                return this.IsNull(this.tableTblGenerale.EQ_UTENZAColumn);
            }
            
            public void SetEQ_UTENZANull() {
                this[this.tableTblGenerale.EQ_UTENZAColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_EQSTDNull() {
                return this.IsNull(this.tableTblGenerale.EQ_EQSTDColumn);
            }
            
            public void SetEQ_EQSTDNull() {
                this[this.tableTblGenerale.EQ_EQSTDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_EQSTD_IDNull() {
                return this.IsNull(this.tableTblGenerale.EQ_EQSTD_IDColumn);
            }
            
            public void SetEQ_EQSTD_IDNull() {
                this[this.tableTblGenerale.EQ_EQSTD_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_QTY_PMSNull() {
                return this.IsNull(this.tableTblGenerale.EQ_QTY_PMSColumn);
            }
            
            public void SetEQ_QTY_PMSNull() {
                this[this.tableTblGenerale.EQ_QTY_PMSColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQSTD_OPTION2Null() {
                return this.IsNull(this.tableTblGenerale.EQSTD_OPTION2Column);
            }
            
            public void SetEQSTD_OPTION2Null() {
                this[this.tableTblGenerale.EQSTD_OPTION2Column] = System.Convert.DBNull;
            }
            
            public bool IsEQ_NUM_SERIALNull() {
                return this.IsNull(this.tableTblGenerale.EQ_NUM_SERIALColumn);
            }
            
            public void SetEQ_NUM_SERIALNull() {
                this[this.tableTblGenerale.EQ_NUM_SERIALColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_SOTTOCOMPONENTENull() {
                return this.IsNull(this.tableTblGenerale.EQ_SOTTOCOMPONENTEColumn);
            }
            
            public void SetEQ_SOTTOCOMPONENTENull() {
                this[this.tableTblGenerale.EQ_SOTTOCOMPONENTEColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQSTD_MFRNull() {
                return this.IsNull(this.tableTblGenerale.EQSTD_MFRColumn);
            }
            
            public void SetEQSTD_MFRNull() {
                this[this.tableTblGenerale.EQSTD_MFRColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQSTD_CATEGORYNull() {
                return this.IsNull(this.tableTblGenerale.EQSTD_CATEGORYColumn);
            }
            
            public void SetEQSTD_CATEGORYNull() {
                this[this.tableTblGenerale.EQSTD_CATEGORYColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQSTD_OPTION1Null() {
                return this.IsNull(this.tableTblGenerale.EQSTD_OPTION1Column);
            }
            
            public void SetEQSTD_OPTION1Null() {
                this[this.tableTblGenerale.EQSTD_OPTION1Column] = System.Convert.DBNull;
            }
            
            public bool IsEQSTD_DESCRIPTIONNull() {
                return this.IsNull(this.tableTblGenerale.EQSTD_DESCRIPTIONColumn);
            }
            
            public void SetEQSTD_DESCRIPTIONNull() {
                this[this.tableTblGenerale.EQSTD_DESCRIPTIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQSTD_EQ_STDNull() {
                return this.IsNull(this.tableTblGenerale.EQSTD_EQ_STDColumn);
            }
            
            public void SetEQSTD_EQ_STDNull() {
                this[this.tableTblGenerale.EQSTD_EQ_STDColumn] = System.Convert.DBNull;
            }
            
            public bool IsPIANI_DESC_ID_DESCRIZIONENull() {
                return this.IsNull(this.tableTblGenerale.PIANI_DESC_ID_DESCRIZIONEColumn);
            }
            
            public void SetPIANI_DESC_ID_DESCRIZIONENull() {
                this[this.tableTblGenerale.PIANI_DESC_ID_DESCRIZIONEColumn] = System.Convert.DBNull;
            }
            
            public bool IsRM_RM_ID_DESCRIZIONENull() {
                return this.IsNull(this.tableTblGenerale.RM_RM_ID_DESCRIZIONEColumn);
            }
            
            public void SetRM_RM_ID_DESCRIZIONENull() {
                this[this.tableTblGenerale.RM_RM_ID_DESCRIZIONEColumn] = System.Convert.DBNull;
            }
            
            public bool IsBL_NAMENull() {
                return this.IsNull(this.tableTblGenerale.BL_NAMEColumn);
            }
            
            public void SetBL_NAMENull() {
                this[this.tableTblGenerale.BL_NAMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_IMMAGINI_IMMAGINENull() {
                return this.IsNull(this.tableTblGenerale.EQ_IMMAGINI_IMMAGINEColumn);
            }
            
            public void SetEQ_IMMAGINI_IMMAGINENull() {
                this[this.tableTblGenerale.EQ_IMMAGINI_IMMAGINEColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEqstdNull() {
                return this.IsNull(this.tableTblGenerale.IdEqstdColumn);
            }
            
            public void SetIdEqstdNull() {
                this[this.tableTblGenerale.IdEqstdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEqNull() {
                return this.IsNull(this.tableTblGenerale.IdEqColumn);
            }
            
            public void SetIdEqNull() {
                this[this.tableTblGenerale.IdEqColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblGeneraleRowChangeEvent : EventArgs {
            
            private TblGeneraleRow eventRow;
            
            private DataRowAction eventAction;
            
            public TblGeneraleRowChangeEvent(TblGeneraleRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public TblGeneraleRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblDatiTecniciDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnDATITECNICIID;
            
            private DataColumn columnEQID;
            
            private DataColumn columnTIPOLOGIAID;
            
            private DataColumn columnDESCRIZIONE;
            
            private DataColumn columnTIPOLOGIA;
            
            internal TblDatiTecniciDataTable() : 
                    base("TblDatiTecnici") {
                this.InitClass();
            }
            
            internal TblDatiTecniciDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn DATITECNICIIDColumn {
                get {
                    return this.columnDATITECNICIID;
                }
            }
            
            internal DataColumn EQIDColumn {
                get {
                    return this.columnEQID;
                }
            }
            
            internal DataColumn TIPOLOGIAIDColumn {
                get {
                    return this.columnTIPOLOGIAID;
                }
            }
            
            internal DataColumn DESCRIZIONEColumn {
                get {
                    return this.columnDESCRIZIONE;
                }
            }
            
            internal DataColumn TIPOLOGIAColumn {
                get {
                    return this.columnTIPOLOGIA;
                }
            }
            
            public TblDatiTecniciRow this[int index] {
                get {
                    return ((TblDatiTecniciRow)(this.Rows[index]));
                }
            }
            
            public event TblDatiTecniciRowChangeEventHandler TblDatiTecniciRowChanged;
            
            public event TblDatiTecniciRowChangeEventHandler TblDatiTecniciRowChanging;
            
            public event TblDatiTecniciRowChangeEventHandler TblDatiTecniciRowDeleted;
            
            public event TblDatiTecniciRowChangeEventHandler TblDatiTecniciRowDeleting;
            
            public void AddTblDatiTecniciRow(TblDatiTecniciRow row) {
                this.Rows.Add(row);
            }
            
            public TblDatiTecniciRow AddTblDatiTecniciRow(System.Decimal DATITECNICIID, System.Decimal EQID, System.Decimal TIPOLOGIAID, string DESCRIZIONE, string TIPOLOGIA) {
                TblDatiTecniciRow rowTblDatiTecniciRow = ((TblDatiTecniciRow)(this.NewRow()));
                rowTblDatiTecniciRow.ItemArray = new object[] {
                        DATITECNICIID,
                        EQID,
                        TIPOLOGIAID,
                        DESCRIZIONE,
                        TIPOLOGIA};
                this.Rows.Add(rowTblDatiTecniciRow);
                return rowTblDatiTecniciRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                TblDatiTecniciDataTable cln = ((TblDatiTecniciDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new TblDatiTecniciDataTable();
            }
            
            internal void InitVars() {
                this.columnDATITECNICIID = this.Columns["DATITECNICIID"];
                this.columnEQID = this.Columns["EQID"];
                this.columnTIPOLOGIAID = this.Columns["TIPOLOGIAID"];
                this.columnDESCRIZIONE = this.Columns["DESCRIZIONE"];
                this.columnTIPOLOGIA = this.Columns["TIPOLOGIA"];
            }
            
            private void InitClass() {
                this.columnDATITECNICIID = new DataColumn("DATITECNICIID", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDATITECNICIID);
                this.columnEQID = new DataColumn("EQID", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQID);
                this.columnTIPOLOGIAID = new DataColumn("TIPOLOGIAID", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTIPOLOGIAID);
                this.columnDESCRIZIONE = new DataColumn("DESCRIZIONE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDESCRIZIONE);
                this.columnTIPOLOGIA = new DataColumn("TIPOLOGIA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTIPOLOGIA);
            }
            
            public TblDatiTecniciRow NewTblDatiTecniciRow() {
                return ((TblDatiTecniciRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new TblDatiTecniciRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(TblDatiTecniciRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TblDatiTecniciRowChanged != null)) {
                    this.TblDatiTecniciRowChanged(this, new TblDatiTecniciRowChangeEvent(((TblDatiTecniciRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TblDatiTecniciRowChanging != null)) {
                    this.TblDatiTecniciRowChanging(this, new TblDatiTecniciRowChangeEvent(((TblDatiTecniciRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TblDatiTecniciRowDeleted != null)) {
                    this.TblDatiTecniciRowDeleted(this, new TblDatiTecniciRowChangeEvent(((TblDatiTecniciRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TblDatiTecniciRowDeleting != null)) {
                    this.TblDatiTecniciRowDeleting(this, new TblDatiTecniciRowChangeEvent(((TblDatiTecniciRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveTblDatiTecniciRow(TblDatiTecniciRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblDatiTecniciRow : DataRow {
            
            private TblDatiTecniciDataTable tableTblDatiTecnici;
            
            internal TblDatiTecniciRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableTblDatiTecnici = ((TblDatiTecniciDataTable)(this.Table));
            }
            
            public System.Decimal DATITECNICIID {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblDatiTecnici.DATITECNICIIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblDatiTecnici.DATITECNICIIDColumn] = value;
                }
            }
            
            public System.Decimal EQID {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblDatiTecnici.EQIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblDatiTecnici.EQIDColumn] = value;
                }
            }
            
            public System.Decimal TIPOLOGIAID {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblDatiTecnici.TIPOLOGIAIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblDatiTecnici.TIPOLOGIAIDColumn] = value;
                }
            }
            
            public string DESCRIZIONE {
                get {
                    try {
                        return ((string)(this[this.tableTblDatiTecnici.DESCRIZIONEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblDatiTecnici.DESCRIZIONEColumn] = value;
                }
            }
            
            public string TIPOLOGIA {
                get {
                    try {
                        return ((string)(this[this.tableTblDatiTecnici.TIPOLOGIAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblDatiTecnici.TIPOLOGIAColumn] = value;
                }
            }
            
            public bool IsDATITECNICIIDNull() {
                return this.IsNull(this.tableTblDatiTecnici.DATITECNICIIDColumn);
            }
            
            public void SetDATITECNICIIDNull() {
                this[this.tableTblDatiTecnici.DATITECNICIIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQIDNull() {
                return this.IsNull(this.tableTblDatiTecnici.EQIDColumn);
            }
            
            public void SetEQIDNull() {
                this[this.tableTblDatiTecnici.EQIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsTIPOLOGIAIDNull() {
                return this.IsNull(this.tableTblDatiTecnici.TIPOLOGIAIDColumn);
            }
            
            public void SetTIPOLOGIAIDNull() {
                this[this.tableTblDatiTecnici.TIPOLOGIAIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsDESCRIZIONENull() {
                return this.IsNull(this.tableTblDatiTecnici.DESCRIZIONEColumn);
            }
            
            public void SetDESCRIZIONENull() {
                this[this.tableTblDatiTecnici.DESCRIZIONEColumn] = System.Convert.DBNull;
            }
            
            public bool IsTIPOLOGIANull() {
                return this.IsNull(this.tableTblDatiTecnici.TIPOLOGIAColumn);
            }
            
            public void SetTIPOLOGIANull() {
                this[this.tableTblDatiTecnici.TIPOLOGIAColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblDatiTecniciRowChangeEvent : EventArgs {
            
            private TblDatiTecniciRow eventRow;
            
            private DataRowAction eventAction;
            
            public TblDatiTecniciRowChangeEvent(TblDatiTecniciRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public TblDatiTecniciRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblPmpPassiDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnFREQUENZA;
            
            private DataColumn columnUNITS;
            
            private DataColumn columnUNITS_HOUR;
            
            private DataColumn columnTR_ID;
            
            private DataColumn columnID;
            
            private DataColumn columnPM_GROUP;
            
            private DataColumn columnEQ_STD;
            
            private DataColumn columnPMP;
            
            private DataColumn columnPASSO;
            
            private DataColumn columnISTRUZIONE;
            
            private DataColumn columnTEMPO;
            
            private DataColumn columnIdEqstd;
            
            private DataColumn columnIdEq;
            
            private DataColumn columndescription;
            
            internal TblPmpPassiDataTable() : 
                    base("TblPmpPassi") {
                this.InitClass();
            }
            
            internal TblPmpPassiDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn FREQUENZAColumn {
                get {
                    return this.columnFREQUENZA;
                }
            }
            
            internal DataColumn UNITSColumn {
                get {
                    return this.columnUNITS;
                }
            }
            
            internal DataColumn UNITS_HOURColumn {
                get {
                    return this.columnUNITS_HOUR;
                }
            }
            
            internal DataColumn TR_IDColumn {
                get {
                    return this.columnTR_ID;
                }
            }
            
            internal DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            internal DataColumn PM_GROUPColumn {
                get {
                    return this.columnPM_GROUP;
                }
            }
            
            internal DataColumn EQ_STDColumn {
                get {
                    return this.columnEQ_STD;
                }
            }
            
            internal DataColumn PMPColumn {
                get {
                    return this.columnPMP;
                }
            }
            
            internal DataColumn PASSOColumn {
                get {
                    return this.columnPASSO;
                }
            }
            
            internal DataColumn ISTRUZIONEColumn {
                get {
                    return this.columnISTRUZIONE;
                }
            }
            
            internal DataColumn TEMPOColumn {
                get {
                    return this.columnTEMPO;
                }
            }
            
            internal DataColumn IdEqstdColumn {
                get {
                    return this.columnIdEqstd;
                }
            }
            
            internal DataColumn IdEqColumn {
                get {
                    return this.columnIdEq;
                }
            }
            
            internal DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            public TblPmpPassiRow this[int index] {
                get {
                    return ((TblPmpPassiRow)(this.Rows[index]));
                }
            }
            
            public event TblPmpPassiRowChangeEventHandler TblPmpPassiRowChanged;
            
            public event TblPmpPassiRowChangeEventHandler TblPmpPassiRowChanging;
            
            public event TblPmpPassiRowChangeEventHandler TblPmpPassiRowDeleted;
            
            public event TblPmpPassiRowChangeEventHandler TblPmpPassiRowDeleting;
            
            public void AddTblPmpPassiRow(TblPmpPassiRow row) {
                this.Rows.Add(row);
            }
            
            public TblPmpPassiRow AddTblPmpPassiRow(string FREQUENZA, string UNITS, System.Decimal UNITS_HOUR, string TR_ID, System.Decimal ID, string PM_GROUP, string EQ_STD, string PMP, System.Decimal PASSO, string ISTRUZIONE, System.Decimal TEMPO, System.Decimal IdEqstd, System.Decimal IdEq, string description) {
                TblPmpPassiRow rowTblPmpPassiRow = ((TblPmpPassiRow)(this.NewRow()));
                rowTblPmpPassiRow.ItemArray = new object[] {
                        FREQUENZA,
                        UNITS,
                        UNITS_HOUR,
                        TR_ID,
                        ID,
                        PM_GROUP,
                        EQ_STD,
                        PMP,
                        PASSO,
                        ISTRUZIONE,
                        TEMPO,
                        IdEqstd,
                        IdEq,
                        description};
                this.Rows.Add(rowTblPmpPassiRow);
                return rowTblPmpPassiRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                TblPmpPassiDataTable cln = ((TblPmpPassiDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new TblPmpPassiDataTable();
            }
            
            internal void InitVars() {
                this.columnFREQUENZA = this.Columns["FREQUENZA"];
                this.columnUNITS = this.Columns["UNITS"];
                this.columnUNITS_HOUR = this.Columns["UNITS_HOUR"];
                this.columnTR_ID = this.Columns["TR_ID"];
                this.columnID = this.Columns["ID"];
                this.columnPM_GROUP = this.Columns["PM_GROUP"];
                this.columnEQ_STD = this.Columns["EQ_STD"];
                this.columnPMP = this.Columns["PMP"];
                this.columnPASSO = this.Columns["PASSO"];
                this.columnISTRUZIONE = this.Columns["ISTRUZIONE"];
                this.columnTEMPO = this.Columns["TEMPO"];
                this.columnIdEqstd = this.Columns["IdEqstd"];
                this.columnIdEq = this.Columns["IdEq"];
                this.columndescription = this.Columns["description"];
            }
            
            private void InitClass() {
                this.columnFREQUENZA = new DataColumn("FREQUENZA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFREQUENZA);
                this.columnUNITS = new DataColumn("UNITS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUNITS);
                this.columnUNITS_HOUR = new DataColumn("UNITS_HOUR", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUNITS_HOUR);
                this.columnTR_ID = new DataColumn("TR_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTR_ID);
                this.columnID = new DataColumn("ID", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnID);
                this.columnPM_GROUP = new DataColumn("PM_GROUP", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPM_GROUP);
                this.columnEQ_STD = new DataColumn("EQ_STD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_STD);
                this.columnPMP = new DataColumn("PMP", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPMP);
                this.columnPASSO = new DataColumn("PASSO", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPASSO);
                this.columnISTRUZIONE = new DataColumn("ISTRUZIONE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnISTRUZIONE);
                this.columnTEMPO = new DataColumn("TEMPO", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTEMPO);
                this.columnIdEqstd = new DataColumn("IdEqstd", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEqstd);
                this.columnIdEq = new DataColumn("IdEq", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEq);
                this.columndescription = new DataColumn("description", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndescription);
            }
            
            public TblPmpPassiRow NewTblPmpPassiRow() {
                return ((TblPmpPassiRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new TblPmpPassiRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(TblPmpPassiRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TblPmpPassiRowChanged != null)) {
                    this.TblPmpPassiRowChanged(this, new TblPmpPassiRowChangeEvent(((TblPmpPassiRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TblPmpPassiRowChanging != null)) {
                    this.TblPmpPassiRowChanging(this, new TblPmpPassiRowChangeEvent(((TblPmpPassiRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TblPmpPassiRowDeleted != null)) {
                    this.TblPmpPassiRowDeleted(this, new TblPmpPassiRowChangeEvent(((TblPmpPassiRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TblPmpPassiRowDeleting != null)) {
                    this.TblPmpPassiRowDeleting(this, new TblPmpPassiRowChangeEvent(((TblPmpPassiRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveTblPmpPassiRow(TblPmpPassiRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblPmpPassiRow : DataRow {
            
            private TblPmpPassiDataTable tableTblPmpPassi;
            
            internal TblPmpPassiRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableTblPmpPassi = ((TblPmpPassiDataTable)(this.Table));
            }
            
            public string FREQUENZA {
                get {
                    try {
                        return ((string)(this[this.tableTblPmpPassi.FREQUENZAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblPmpPassi.FREQUENZAColumn] = value;
                }
            }
            
            public string UNITS {
                get {
                    try {
                        return ((string)(this[this.tableTblPmpPassi.UNITSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblPmpPassi.UNITSColumn] = value;
                }
            }
            
            public System.Decimal UNITS_HOUR {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblPmpPassi.UNITS_HOURColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblPmpPassi.UNITS_HOURColumn] = value;
                }
            }
            
            public string TR_ID {
                get {
                    try {
                        return ((string)(this[this.tableTblPmpPassi.TR_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblPmpPassi.TR_IDColumn] = value;
                }
            }
            
            public System.Decimal ID {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblPmpPassi.IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblPmpPassi.IDColumn] = value;
                }
            }
            
            public string PM_GROUP {
                get {
                    try {
                        return ((string)(this[this.tableTblPmpPassi.PM_GROUPColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblPmpPassi.PM_GROUPColumn] = value;
                }
            }
            
            public string EQ_STD {
                get {
                    try {
                        return ((string)(this[this.tableTblPmpPassi.EQ_STDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblPmpPassi.EQ_STDColumn] = value;
                }
            }
            
            public string PMP {
                get {
                    try {
                        return ((string)(this[this.tableTblPmpPassi.PMPColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblPmpPassi.PMPColumn] = value;
                }
            }
            
            public System.Decimal PASSO {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblPmpPassi.PASSOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblPmpPassi.PASSOColumn] = value;
                }
            }
            
            public string ISTRUZIONE {
                get {
                    try {
                        return ((string)(this[this.tableTblPmpPassi.ISTRUZIONEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblPmpPassi.ISTRUZIONEColumn] = value;
                }
            }
            
            public System.Decimal TEMPO {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblPmpPassi.TEMPOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblPmpPassi.TEMPOColumn] = value;
                }
            }
            
            public System.Decimal IdEqstd {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblPmpPassi.IdEqstdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblPmpPassi.IdEqstdColumn] = value;
                }
            }
            
            public System.Decimal IdEq {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblPmpPassi.IdEqColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblPmpPassi.IdEqColumn] = value;
                }
            }
            
            public string description {
                get {
                    try {
                        return ((string)(this[this.tableTblPmpPassi.descriptionColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblPmpPassi.descriptionColumn] = value;
                }
            }
            
            public bool IsFREQUENZANull() {
                return this.IsNull(this.tableTblPmpPassi.FREQUENZAColumn);
            }
            
            public void SetFREQUENZANull() {
                this[this.tableTblPmpPassi.FREQUENZAColumn] = System.Convert.DBNull;
            }
            
            public bool IsUNITSNull() {
                return this.IsNull(this.tableTblPmpPassi.UNITSColumn);
            }
            
            public void SetUNITSNull() {
                this[this.tableTblPmpPassi.UNITSColumn] = System.Convert.DBNull;
            }
            
            public bool IsUNITS_HOURNull() {
                return this.IsNull(this.tableTblPmpPassi.UNITS_HOURColumn);
            }
            
            public void SetUNITS_HOURNull() {
                this[this.tableTblPmpPassi.UNITS_HOURColumn] = System.Convert.DBNull;
            }
            
            public bool IsTR_IDNull() {
                return this.IsNull(this.tableTblPmpPassi.TR_IDColumn);
            }
            
            public void SetTR_IDNull() {
                this[this.tableTblPmpPassi.TR_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsIDNull() {
                return this.IsNull(this.tableTblPmpPassi.IDColumn);
            }
            
            public void SetIDNull() {
                this[this.tableTblPmpPassi.IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsPM_GROUPNull() {
                return this.IsNull(this.tableTblPmpPassi.PM_GROUPColumn);
            }
            
            public void SetPM_GROUPNull() {
                this[this.tableTblPmpPassi.PM_GROUPColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_STDNull() {
                return this.IsNull(this.tableTblPmpPassi.EQ_STDColumn);
            }
            
            public void SetEQ_STDNull() {
                this[this.tableTblPmpPassi.EQ_STDColumn] = System.Convert.DBNull;
            }
            
            public bool IsPMPNull() {
                return this.IsNull(this.tableTblPmpPassi.PMPColumn);
            }
            
            public void SetPMPNull() {
                this[this.tableTblPmpPassi.PMPColumn] = System.Convert.DBNull;
            }
            
            public bool IsPASSONull() {
                return this.IsNull(this.tableTblPmpPassi.PASSOColumn);
            }
            
            public void SetPASSONull() {
                this[this.tableTblPmpPassi.PASSOColumn] = System.Convert.DBNull;
            }
            
            public bool IsISTRUZIONENull() {
                return this.IsNull(this.tableTblPmpPassi.ISTRUZIONEColumn);
            }
            
            public void SetISTRUZIONENull() {
                this[this.tableTblPmpPassi.ISTRUZIONEColumn] = System.Convert.DBNull;
            }
            
            public bool IsTEMPONull() {
                return this.IsNull(this.tableTblPmpPassi.TEMPOColumn);
            }
            
            public void SetTEMPONull() {
                this[this.tableTblPmpPassi.TEMPOColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEqstdNull() {
                return this.IsNull(this.tableTblPmpPassi.IdEqstdColumn);
            }
            
            public void SetIdEqstdNull() {
                this[this.tableTblPmpPassi.IdEqstdColumn] = System.Convert.DBNull;
            }
            
            public bool IsIdEqNull() {
                return this.IsNull(this.tableTblPmpPassi.IdEqColumn);
            }
            
            public void SetIdEqNull() {
                this[this.tableTblPmpPassi.IdEqColumn] = System.Convert.DBNull;
            }
            
            public bool IsdescriptionNull() {
                return this.IsNull(this.tableTblPmpPassi.descriptionColumn);
            }
            
            public void SetdescriptionNull() {
                this[this.tableTblPmpPassi.descriptionColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblPmpPassiRowChangeEvent : EventArgs {
            
            private TblPmpPassiRow eventRow;
            
            private DataRowAction eventAction;
            
            public TblPmpPassiRowChangeEvent(TblPmpPassiRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public TblPmpPassiRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblAllDataDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnEQ_ID;
            
            private DataColumn columnEQ_OPTION1;
            
            private DataColumn columnEQ_CONDITION;
            
            private DataColumn columnEQ_CRITICALITY;
            
            private DataColumn columnEQ_OPTION2;
            
            private DataColumn columnEQ_GARANZIA;
            
            private DataColumn columnEQSTD_MODELNO;
            
            private DataColumn columnEQ_IMAGE_EQ_ASSY;
            
            private DataColumn columnEQ_RM_ID;
            
            private DataColumn columnEQ_BL_ID;
            
            private DataColumn columnEQ_VN_ID;
            
            private DataColumn columnEQ_LOC_COLUMN;
            
            private DataColumn columnEQ_LOC_MAINT_MANL;
            
            private DataColumn columnEQ_EQ_COMMENTS;
            
            private DataColumn columnEQ_POTENZA;
            
            private DataColumn columnEQ_FUEL_ID;
            
            private DataColumn columnEQ_DATE_MANUFACTURED;
            
            private DataColumn columnEQ_DATE_INSTALLED;
            
            private DataColumn columnEQ_DATE_IN_SERVICE;
            
            private DataColumn columnEQ_UTENZA;
            
            private DataColumn columnEQ_EQSTD;
            
            private DataColumn columnEQ_EQSTD_ID;
            
            private DataColumn columnEQ_QTY_PMS;
            
            private DataColumn columnEQSTD_OPTION2;
            
            private DataColumn columnEQ_NUM_SERIAL;
            
            private DataColumn columnEQ_SOTTOCOMPONENTE;
            
            private DataColumn columnEQSTD_MFR;
            
            private DataColumn columnEQSTD_CATEGORY;
            
            private DataColumn columnEQSTD_OPTION1;
            
            private DataColumn columnEQSTD_DESCRIPTION;
            
            private DataColumn columnEQSTD_EQ_STD;
            
            private DataColumn columnPIANI_DESC_ID_DESCRIZIONE;
            
            private DataColumn columnRM_RM_ID_DESCRIZIONE;
            
            private DataColumn columnBL_NAME;
            
            private DataColumn columnIDEQSTD;
            
            private DataColumn columnIDEQ;
            
            private DataColumn columnFREQUENZA;
            
            private DataColumn columnUNITS;
            
            private DataColumn columnUNITS_HOUR;
            
            private DataColumn columnTR_ID;
            
            private DataColumn columnID;
            
            private DataColumn columnPM_GROUP;
            
            private DataColumn columnPMP;
            
            private DataColumn columnPASSO;
            
            private DataColumn columnISTRUZIONE;
            
            private DataColumn columnTEMPO;
            
            private DataColumn columnEQSTD_ID;
            
            private DataColumn columnDATITECNICIID;
            
            private DataColumn columnEQID;
            
            private DataColumn columnTIPOLOGIAID;
            
            private DataColumn columnDESCRIZIONE;
            
            private DataColumn columnTIPOLOGIA;
            
            private DataColumn columnEQ_IMMAGINI_IMMAGINE;
            
            internal TblAllDataDataTable() : 
                    base("TblAllData") {
                this.InitClass();
            }
            
            internal TblAllDataDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn EQ_IDColumn {
                get {
                    return this.columnEQ_ID;
                }
            }
            
            internal DataColumn EQ_OPTION1Column {
                get {
                    return this.columnEQ_OPTION1;
                }
            }
            
            internal DataColumn EQ_CONDITIONColumn {
                get {
                    return this.columnEQ_CONDITION;
                }
            }
            
            internal DataColumn EQ_CRITICALITYColumn {
                get {
                    return this.columnEQ_CRITICALITY;
                }
            }
            
            internal DataColumn EQ_OPTION2Column {
                get {
                    return this.columnEQ_OPTION2;
                }
            }
            
            internal DataColumn EQ_GARANZIAColumn {
                get {
                    return this.columnEQ_GARANZIA;
                }
            }
            
            internal DataColumn EQSTD_MODELNOColumn {
                get {
                    return this.columnEQSTD_MODELNO;
                }
            }
            
            internal DataColumn EQ_IMAGE_EQ_ASSYColumn {
                get {
                    return this.columnEQ_IMAGE_EQ_ASSY;
                }
            }
            
            internal DataColumn EQ_RM_IDColumn {
                get {
                    return this.columnEQ_RM_ID;
                }
            }
            
            internal DataColumn EQ_BL_IDColumn {
                get {
                    return this.columnEQ_BL_ID;
                }
            }
            
            internal DataColumn EQ_VN_IDColumn {
                get {
                    return this.columnEQ_VN_ID;
                }
            }
            
            internal DataColumn EQ_LOC_COLUMNColumn {
                get {
                    return this.columnEQ_LOC_COLUMN;
                }
            }
            
            internal DataColumn EQ_LOC_MAINT_MANLColumn {
                get {
                    return this.columnEQ_LOC_MAINT_MANL;
                }
            }
            
            internal DataColumn EQ_EQ_COMMENTSColumn {
                get {
                    return this.columnEQ_EQ_COMMENTS;
                }
            }
            
            internal DataColumn EQ_POTENZAColumn {
                get {
                    return this.columnEQ_POTENZA;
                }
            }
            
            internal DataColumn EQ_FUEL_IDColumn {
                get {
                    return this.columnEQ_FUEL_ID;
                }
            }
            
            internal DataColumn EQ_DATE_MANUFACTUREDColumn {
                get {
                    return this.columnEQ_DATE_MANUFACTURED;
                }
            }
            
            internal DataColumn EQ_DATE_INSTALLEDColumn {
                get {
                    return this.columnEQ_DATE_INSTALLED;
                }
            }
            
            internal DataColumn EQ_DATE_IN_SERVICEColumn {
                get {
                    return this.columnEQ_DATE_IN_SERVICE;
                }
            }
            
            internal DataColumn EQ_UTENZAColumn {
                get {
                    return this.columnEQ_UTENZA;
                }
            }
            
            internal DataColumn EQ_EQSTDColumn {
                get {
                    return this.columnEQ_EQSTD;
                }
            }
            
            internal DataColumn EQ_EQSTD_IDColumn {
                get {
                    return this.columnEQ_EQSTD_ID;
                }
            }
            
            internal DataColumn EQ_QTY_PMSColumn {
                get {
                    return this.columnEQ_QTY_PMS;
                }
            }
            
            internal DataColumn EQSTD_OPTION2Column {
                get {
                    return this.columnEQSTD_OPTION2;
                }
            }
            
            internal DataColumn EQ_NUM_SERIALColumn {
                get {
                    return this.columnEQ_NUM_SERIAL;
                }
            }
            
            internal DataColumn EQ_SOTTOCOMPONENTEColumn {
                get {
                    return this.columnEQ_SOTTOCOMPONENTE;
                }
            }
            
            internal DataColumn EQSTD_MFRColumn {
                get {
                    return this.columnEQSTD_MFR;
                }
            }
            
            internal DataColumn EQSTD_CATEGORYColumn {
                get {
                    return this.columnEQSTD_CATEGORY;
                }
            }
            
            internal DataColumn EQSTD_OPTION1Column {
                get {
                    return this.columnEQSTD_OPTION1;
                }
            }
            
            internal DataColumn EQSTD_DESCRIPTIONColumn {
                get {
                    return this.columnEQSTD_DESCRIPTION;
                }
            }
            
            internal DataColumn EQSTD_EQ_STDColumn {
                get {
                    return this.columnEQSTD_EQ_STD;
                }
            }
            
            internal DataColumn PIANI_DESC_ID_DESCRIZIONEColumn {
                get {
                    return this.columnPIANI_DESC_ID_DESCRIZIONE;
                }
            }
            
            internal DataColumn RM_RM_ID_DESCRIZIONEColumn {
                get {
                    return this.columnRM_RM_ID_DESCRIZIONE;
                }
            }
            
            internal DataColumn BL_NAMEColumn {
                get {
                    return this.columnBL_NAME;
                }
            }
            
            internal DataColumn IDEQSTDColumn {
                get {
                    return this.columnIDEQSTD;
                }
            }
            
            internal DataColumn IDEQColumn {
                get {
                    return this.columnIDEQ;
                }
            }
            
            internal DataColumn FREQUENZAColumn {
                get {
                    return this.columnFREQUENZA;
                }
            }
            
            internal DataColumn UNITSColumn {
                get {
                    return this.columnUNITS;
                }
            }
            
            internal DataColumn UNITS_HOURColumn {
                get {
                    return this.columnUNITS_HOUR;
                }
            }
            
            internal DataColumn TR_IDColumn {
                get {
                    return this.columnTR_ID;
                }
            }
            
            internal DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            internal DataColumn PM_GROUPColumn {
                get {
                    return this.columnPM_GROUP;
                }
            }
            
            internal DataColumn PMPColumn {
                get {
                    return this.columnPMP;
                }
            }
            
            internal DataColumn PASSOColumn {
                get {
                    return this.columnPASSO;
                }
            }
            
            internal DataColumn ISTRUZIONEColumn {
                get {
                    return this.columnISTRUZIONE;
                }
            }
            
            internal DataColumn TEMPOColumn {
                get {
                    return this.columnTEMPO;
                }
            }
            
            internal DataColumn EQSTD_IDColumn {
                get {
                    return this.columnEQSTD_ID;
                }
            }
            
            internal DataColumn DATITECNICIIDColumn {
                get {
                    return this.columnDATITECNICIID;
                }
            }
            
            internal DataColumn EQIDColumn {
                get {
                    return this.columnEQID;
                }
            }
            
            internal DataColumn TIPOLOGIAIDColumn {
                get {
                    return this.columnTIPOLOGIAID;
                }
            }
            
            internal DataColumn DESCRIZIONEColumn {
                get {
                    return this.columnDESCRIZIONE;
                }
            }
            
            internal DataColumn TIPOLOGIAColumn {
                get {
                    return this.columnTIPOLOGIA;
                }
            }
            
            internal DataColumn EQ_IMMAGINI_IMMAGINEColumn {
                get {
                    return this.columnEQ_IMMAGINI_IMMAGINE;
                }
            }
            
            public TblAllDataRow this[int index] {
                get {
                    return ((TblAllDataRow)(this.Rows[index]));
                }
            }
            
            public event TblAllDataRowChangeEventHandler TblAllDataRowChanged;
            
            public event TblAllDataRowChangeEventHandler TblAllDataRowChanging;
            
            public event TblAllDataRowChangeEventHandler TblAllDataRowDeleted;
            
            public event TblAllDataRowChangeEventHandler TblAllDataRowDeleting;
            
            public void AddTblAllDataRow(TblAllDataRow row) {
                this.Rows.Add(row);
            }
            
            public TblAllDataRow AddTblAllDataRow(
                        string EQ_ID, 
                        string EQ_OPTION1, 
                        string EQ_CONDITION, 
                        string EQ_CRITICALITY, 
                        string EQ_OPTION2, 
                        string EQ_GARANZIA, 
                        string EQSTD_MODELNO, 
                        string EQ_IMAGE_EQ_ASSY, 
                        string EQ_RM_ID, 
                        string EQ_BL_ID, 
                        string EQ_VN_ID, 
                        string EQ_LOC_COLUMN, 
                        string EQ_LOC_MAINT_MANL, 
                        string EQ_EQ_COMMENTS, 
                        string EQ_POTENZA, 
                        string EQ_FUEL_ID, 
                        string EQ_DATE_MANUFACTURED, 
                        string EQ_DATE_INSTALLED, 
                        string EQ_DATE_IN_SERVICE, 
                        string EQ_UTENZA, 
                        string EQ_EQSTD, 
                        string EQ_EQSTD_ID, 
                        string EQ_QTY_PMS, 
                        string EQSTD_OPTION2, 
                        string EQ_NUM_SERIAL, 
                        string EQ_SOTTOCOMPONENTE, 
                        string EQSTD_MFR, 
                        string EQSTD_CATEGORY, 
                        string EQSTD_OPTION1, 
                        string EQSTD_DESCRIPTION, 
                        string EQSTD_EQ_STD, 
                        string PIANI_DESC_ID_DESCRIZIONE, 
                        string RM_RM_ID_DESCRIZIONE, 
                        string BL_NAME, 
                        System.Decimal IDEQSTD, 
                        System.Decimal IDEQ, 
                        string FREQUENZA, 
                        string UNITS, 
                        System.Decimal UNITS_HOUR, 
                        string TR_ID, 
                        System.Decimal ID, 
                        string PM_GROUP, 
                        string PMP, 
                        System.Decimal PASSO, 
                        string ISTRUZIONE, 
                        System.Decimal TEMPO, 
                        System.Decimal EQSTD_ID, 
                        System.Decimal DATITECNICIID, 
                        System.Decimal EQID, 
                        System.Decimal TIPOLOGIAID, 
                        string DESCRIZIONE, 
                        string TIPOLOGIA, 
                        System.Byte[] EQ_IMMAGINI_IMMAGINE) {
                TblAllDataRow rowTblAllDataRow = ((TblAllDataRow)(this.NewRow()));
                rowTblAllDataRow.ItemArray = new object[] {
                        EQ_ID,
                        EQ_OPTION1,
                        EQ_CONDITION,
                        EQ_CRITICALITY,
                        EQ_OPTION2,
                        EQ_GARANZIA,
                        EQSTD_MODELNO,
                        EQ_IMAGE_EQ_ASSY,
                        EQ_RM_ID,
                        EQ_BL_ID,
                        EQ_VN_ID,
                        EQ_LOC_COLUMN,
                        EQ_LOC_MAINT_MANL,
                        EQ_EQ_COMMENTS,
                        EQ_POTENZA,
                        EQ_FUEL_ID,
                        EQ_DATE_MANUFACTURED,
                        EQ_DATE_INSTALLED,
                        EQ_DATE_IN_SERVICE,
                        EQ_UTENZA,
                        EQ_EQSTD,
                        EQ_EQSTD_ID,
                        EQ_QTY_PMS,
                        EQSTD_OPTION2,
                        EQ_NUM_SERIAL,
                        EQ_SOTTOCOMPONENTE,
                        EQSTD_MFR,
                        EQSTD_CATEGORY,
                        EQSTD_OPTION1,
                        EQSTD_DESCRIPTION,
                        EQSTD_EQ_STD,
                        PIANI_DESC_ID_DESCRIZIONE,
                        RM_RM_ID_DESCRIZIONE,
                        BL_NAME,
                        IDEQSTD,
                        IDEQ,
                        FREQUENZA,
                        UNITS,
                        UNITS_HOUR,
                        TR_ID,
                        ID,
                        PM_GROUP,
                        PMP,
                        PASSO,
                        ISTRUZIONE,
                        TEMPO,
                        EQSTD_ID,
                        DATITECNICIID,
                        EQID,
                        TIPOLOGIAID,
                        DESCRIZIONE,
                        TIPOLOGIA,
                        EQ_IMMAGINI_IMMAGINE};
                this.Rows.Add(rowTblAllDataRow);
                return rowTblAllDataRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                TblAllDataDataTable cln = ((TblAllDataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new TblAllDataDataTable();
            }
            
            internal void InitVars() {
                this.columnEQ_ID = this.Columns["EQ_ID"];
                this.columnEQ_OPTION1 = this.Columns["EQ_OPTION1"];
                this.columnEQ_CONDITION = this.Columns["EQ_CONDITION"];
                this.columnEQ_CRITICALITY = this.Columns["EQ_CRITICALITY"];
                this.columnEQ_OPTION2 = this.Columns["EQ_OPTION2"];
                this.columnEQ_GARANZIA = this.Columns["EQ_GARANZIA"];
                this.columnEQSTD_MODELNO = this.Columns["EQSTD_MODELNO"];
                this.columnEQ_IMAGE_EQ_ASSY = this.Columns["EQ_IMAGE_EQ_ASSY"];
                this.columnEQ_RM_ID = this.Columns["EQ_RM_ID"];
                this.columnEQ_BL_ID = this.Columns["EQ_BL_ID"];
                this.columnEQ_VN_ID = this.Columns["EQ_VN_ID"];
                this.columnEQ_LOC_COLUMN = this.Columns["EQ_LOC_COLUMN"];
                this.columnEQ_LOC_MAINT_MANL = this.Columns["EQ_LOC_MAINT_MANL"];
                this.columnEQ_EQ_COMMENTS = this.Columns["EQ_EQ_COMMENTS"];
                this.columnEQ_POTENZA = this.Columns["EQ_POTENZA"];
                this.columnEQ_FUEL_ID = this.Columns["EQ_FUEL_ID"];
                this.columnEQ_DATE_MANUFACTURED = this.Columns["EQ_DATE_MANUFACTURED"];
                this.columnEQ_DATE_INSTALLED = this.Columns["EQ_DATE_INSTALLED"];
                this.columnEQ_DATE_IN_SERVICE = this.Columns["EQ_DATE_IN_SERVICE"];
                this.columnEQ_UTENZA = this.Columns["EQ_UTENZA"];
                this.columnEQ_EQSTD = this.Columns["EQ_EQSTD"];
                this.columnEQ_EQSTD_ID = this.Columns["EQ_EQSTD_ID"];
                this.columnEQ_QTY_PMS = this.Columns["EQ_QTY_PMS"];
                this.columnEQSTD_OPTION2 = this.Columns["EQSTD_OPTION2"];
                this.columnEQ_NUM_SERIAL = this.Columns["EQ_NUM_SERIAL"];
                this.columnEQ_SOTTOCOMPONENTE = this.Columns["EQ_SOTTOCOMPONENTE"];
                this.columnEQSTD_MFR = this.Columns["EQSTD_MFR"];
                this.columnEQSTD_CATEGORY = this.Columns["EQSTD_CATEGORY"];
                this.columnEQSTD_OPTION1 = this.Columns["EQSTD_OPTION1"];
                this.columnEQSTD_DESCRIPTION = this.Columns["EQSTD_DESCRIPTION"];
                this.columnEQSTD_EQ_STD = this.Columns["EQSTD_EQ_STD"];
                this.columnPIANI_DESC_ID_DESCRIZIONE = this.Columns["PIANI_DESC_ID_DESCRIZIONE"];
                this.columnRM_RM_ID_DESCRIZIONE = this.Columns["RM_RM_ID_DESCRIZIONE"];
                this.columnBL_NAME = this.Columns["BL_NAME"];
                this.columnIDEQSTD = this.Columns["IDEQSTD"];
                this.columnIDEQ = this.Columns["IDEQ"];
                this.columnFREQUENZA = this.Columns["FREQUENZA"];
                this.columnUNITS = this.Columns["UNITS"];
                this.columnUNITS_HOUR = this.Columns["UNITS_HOUR"];
                this.columnTR_ID = this.Columns["TR_ID"];
                this.columnID = this.Columns["ID"];
                this.columnPM_GROUP = this.Columns["PM_GROUP"];
                this.columnPMP = this.Columns["PMP"];
                this.columnPASSO = this.Columns["PASSO"];
                this.columnISTRUZIONE = this.Columns["ISTRUZIONE"];
                this.columnTEMPO = this.Columns["TEMPO"];
                this.columnEQSTD_ID = this.Columns["EQSTD_ID"];
                this.columnDATITECNICIID = this.Columns["DATITECNICIID"];
                this.columnEQID = this.Columns["EQID"];
                this.columnTIPOLOGIAID = this.Columns["TIPOLOGIAID"];
                this.columnDESCRIZIONE = this.Columns["DESCRIZIONE"];
                this.columnTIPOLOGIA = this.Columns["TIPOLOGIA"];
                this.columnEQ_IMMAGINI_IMMAGINE = this.Columns["EQ_IMMAGINI_IMMAGINE"];
            }
            
            private void InitClass() {
                this.columnEQ_ID = new DataColumn("EQ_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_ID);
                this.columnEQ_OPTION1 = new DataColumn("EQ_OPTION1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_OPTION1);
                this.columnEQ_CONDITION = new DataColumn("EQ_CONDITION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_CONDITION);
                this.columnEQ_CRITICALITY = new DataColumn("EQ_CRITICALITY", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_CRITICALITY);
                this.columnEQ_OPTION2 = new DataColumn("EQ_OPTION2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_OPTION2);
                this.columnEQ_GARANZIA = new DataColumn("EQ_GARANZIA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_GARANZIA);
                this.columnEQSTD_MODELNO = new DataColumn("EQSTD_MODELNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQSTD_MODELNO);
                this.columnEQ_IMAGE_EQ_ASSY = new DataColumn("EQ_IMAGE_EQ_ASSY", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_IMAGE_EQ_ASSY);
                this.columnEQ_RM_ID = new DataColumn("EQ_RM_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_RM_ID);
                this.columnEQ_BL_ID = new DataColumn("EQ_BL_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_BL_ID);
                this.columnEQ_VN_ID = new DataColumn("EQ_VN_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_VN_ID);
                this.columnEQ_LOC_COLUMN = new DataColumn("EQ_LOC_COLUMN", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_LOC_COLUMN);
                this.columnEQ_LOC_MAINT_MANL = new DataColumn("EQ_LOC_MAINT_MANL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_LOC_MAINT_MANL);
                this.columnEQ_EQ_COMMENTS = new DataColumn("EQ_EQ_COMMENTS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_EQ_COMMENTS);
                this.columnEQ_POTENZA = new DataColumn("EQ_POTENZA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_POTENZA);
                this.columnEQ_FUEL_ID = new DataColumn("EQ_FUEL_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_FUEL_ID);
                this.columnEQ_DATE_MANUFACTURED = new DataColumn("EQ_DATE_MANUFACTURED", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_DATE_MANUFACTURED);
                this.columnEQ_DATE_INSTALLED = new DataColumn("EQ_DATE_INSTALLED", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_DATE_INSTALLED);
                this.columnEQ_DATE_IN_SERVICE = new DataColumn("EQ_DATE_IN_SERVICE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_DATE_IN_SERVICE);
                this.columnEQ_UTENZA = new DataColumn("EQ_UTENZA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_UTENZA);
                this.columnEQ_EQSTD = new DataColumn("EQ_EQSTD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_EQSTD);
                this.columnEQ_EQSTD_ID = new DataColumn("EQ_EQSTD_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_EQSTD_ID);
                this.columnEQ_QTY_PMS = new DataColumn("EQ_QTY_PMS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_QTY_PMS);
                this.columnEQSTD_OPTION2 = new DataColumn("EQSTD_OPTION2", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQSTD_OPTION2);
                this.columnEQ_NUM_SERIAL = new DataColumn("EQ_NUM_SERIAL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_NUM_SERIAL);
                this.columnEQ_SOTTOCOMPONENTE = new DataColumn("EQ_SOTTOCOMPONENTE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_SOTTOCOMPONENTE);
                this.columnEQSTD_MFR = new DataColumn("EQSTD_MFR", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQSTD_MFR);
                this.columnEQSTD_CATEGORY = new DataColumn("EQSTD_CATEGORY", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQSTD_CATEGORY);
                this.columnEQSTD_OPTION1 = new DataColumn("EQSTD_OPTION1", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQSTD_OPTION1);
                this.columnEQSTD_DESCRIPTION = new DataColumn("EQSTD_DESCRIPTION", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQSTD_DESCRIPTION);
                this.columnEQSTD_EQ_STD = new DataColumn("EQSTD_EQ_STD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQSTD_EQ_STD);
                this.columnPIANI_DESC_ID_DESCRIZIONE = new DataColumn("PIANI_DESC_ID_DESCRIZIONE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPIANI_DESC_ID_DESCRIZIONE);
                this.columnRM_RM_ID_DESCRIZIONE = new DataColumn("RM_RM_ID_DESCRIZIONE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnRM_RM_ID_DESCRIZIONE);
                this.columnBL_NAME = new DataColumn("BL_NAME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnBL_NAME);
                this.columnIDEQSTD = new DataColumn("IDEQSTD", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIDEQSTD);
                this.columnIDEQ = new DataColumn("IDEQ", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIDEQ);
                this.columnFREQUENZA = new DataColumn("FREQUENZA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnFREQUENZA);
                this.columnUNITS = new DataColumn("UNITS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUNITS);
                this.columnUNITS_HOUR = new DataColumn("UNITS_HOUR", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnUNITS_HOUR);
                this.columnTR_ID = new DataColumn("TR_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTR_ID);
                this.columnID = new DataColumn("ID", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnID);
                this.columnPM_GROUP = new DataColumn("PM_GROUP", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPM_GROUP);
                this.columnPMP = new DataColumn("PMP", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPMP);
                this.columnPASSO = new DataColumn("PASSO", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPASSO);
                this.columnISTRUZIONE = new DataColumn("ISTRUZIONE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnISTRUZIONE);
                this.columnTEMPO = new DataColumn("TEMPO", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTEMPO);
                this.columnEQSTD_ID = new DataColumn("EQSTD_ID", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQSTD_ID);
                this.columnDATITECNICIID = new DataColumn("DATITECNICIID", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDATITECNICIID);
                this.columnEQID = new DataColumn("EQID", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQID);
                this.columnTIPOLOGIAID = new DataColumn("TIPOLOGIAID", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTIPOLOGIAID);
                this.columnDESCRIZIONE = new DataColumn("DESCRIZIONE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDESCRIZIONE);
                this.columnTIPOLOGIA = new DataColumn("TIPOLOGIA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTIPOLOGIA);
                this.columnEQ_IMMAGINI_IMMAGINE = new DataColumn("EQ_IMMAGINI_IMMAGINE", typeof(System.Byte[]), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_IMMAGINI_IMMAGINE);
            }
            
            public TblAllDataRow NewTblAllDataRow() {
                return ((TblAllDataRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new TblAllDataRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(TblAllDataRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TblAllDataRowChanged != null)) {
                    this.TblAllDataRowChanged(this, new TblAllDataRowChangeEvent(((TblAllDataRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TblAllDataRowChanging != null)) {
                    this.TblAllDataRowChanging(this, new TblAllDataRowChangeEvent(((TblAllDataRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TblAllDataRowDeleted != null)) {
                    this.TblAllDataRowDeleted(this, new TblAllDataRowChangeEvent(((TblAllDataRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TblAllDataRowDeleting != null)) {
                    this.TblAllDataRowDeleting(this, new TblAllDataRowChangeEvent(((TblAllDataRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveTblAllDataRow(TblAllDataRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblAllDataRow : DataRow {
            
            private TblAllDataDataTable tableTblAllData;
            
            internal TblAllDataRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableTblAllData = ((TblAllDataDataTable)(this.Table));
            }
            
            public string EQ_ID {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQ_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQ_IDColumn] = value;
                }
            }
            
            public string EQ_OPTION1 {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQ_OPTION1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQ_OPTION1Column] = value;
                }
            }
            
            public string EQ_CONDITION {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQ_CONDITIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQ_CONDITIONColumn] = value;
                }
            }
            
            public string EQ_CRITICALITY {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQ_CRITICALITYColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQ_CRITICALITYColumn] = value;
                }
            }
            
            public string EQ_OPTION2 {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQ_OPTION2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQ_OPTION2Column] = value;
                }
            }
            
            public string EQ_GARANZIA {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQ_GARANZIAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQ_GARANZIAColumn] = value;
                }
            }
            
            public string EQSTD_MODELNO {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQSTD_MODELNOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQSTD_MODELNOColumn] = value;
                }
            }
            
            public string EQ_IMAGE_EQ_ASSY {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQ_IMAGE_EQ_ASSYColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQ_IMAGE_EQ_ASSYColumn] = value;
                }
            }
            
            public string EQ_RM_ID {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQ_RM_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQ_RM_IDColumn] = value;
                }
            }
            
            public string EQ_BL_ID {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQ_BL_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQ_BL_IDColumn] = value;
                }
            }
            
            public string EQ_VN_ID {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQ_VN_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQ_VN_IDColumn] = value;
                }
            }
            
            public string EQ_LOC_COLUMN {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQ_LOC_COLUMNColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQ_LOC_COLUMNColumn] = value;
                }
            }
            
            public string EQ_LOC_MAINT_MANL {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQ_LOC_MAINT_MANLColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQ_LOC_MAINT_MANLColumn] = value;
                }
            }
            
            public string EQ_EQ_COMMENTS {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQ_EQ_COMMENTSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQ_EQ_COMMENTSColumn] = value;
                }
            }
            
            public string EQ_POTENZA {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQ_POTENZAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQ_POTENZAColumn] = value;
                }
            }
            
            public string EQ_FUEL_ID {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQ_FUEL_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQ_FUEL_IDColumn] = value;
                }
            }
            
            public string EQ_DATE_MANUFACTURED {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQ_DATE_MANUFACTUREDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQ_DATE_MANUFACTUREDColumn] = value;
                }
            }
            
            public string EQ_DATE_INSTALLED {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQ_DATE_INSTALLEDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQ_DATE_INSTALLEDColumn] = value;
                }
            }
            
            public string EQ_DATE_IN_SERVICE {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQ_DATE_IN_SERVICEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQ_DATE_IN_SERVICEColumn] = value;
                }
            }
            
            public string EQ_UTENZA {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQ_UTENZAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQ_UTENZAColumn] = value;
                }
            }
            
            public string EQ_EQSTD {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQ_EQSTDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQ_EQSTDColumn] = value;
                }
            }
            
            public string EQ_EQSTD_ID {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQ_EQSTD_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQ_EQSTD_IDColumn] = value;
                }
            }
            
            public string EQ_QTY_PMS {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQ_QTY_PMSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQ_QTY_PMSColumn] = value;
                }
            }
            
            public string EQSTD_OPTION2 {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQSTD_OPTION2Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQSTD_OPTION2Column] = value;
                }
            }
            
            public string EQ_NUM_SERIAL {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQ_NUM_SERIALColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQ_NUM_SERIALColumn] = value;
                }
            }
            
            public string EQ_SOTTOCOMPONENTE {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQ_SOTTOCOMPONENTEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQ_SOTTOCOMPONENTEColumn] = value;
                }
            }
            
            public string EQSTD_MFR {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQSTD_MFRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQSTD_MFRColumn] = value;
                }
            }
            
            public string EQSTD_CATEGORY {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQSTD_CATEGORYColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQSTD_CATEGORYColumn] = value;
                }
            }
            
            public string EQSTD_OPTION1 {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQSTD_OPTION1Column]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQSTD_OPTION1Column] = value;
                }
            }
            
            public string EQSTD_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQSTD_DESCRIPTIONColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQSTD_DESCRIPTIONColumn] = value;
                }
            }
            
            public string EQSTD_EQ_STD {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.EQSTD_EQ_STDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQSTD_EQ_STDColumn] = value;
                }
            }
            
            public string PIANI_DESC_ID_DESCRIZIONE {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.PIANI_DESC_ID_DESCRIZIONEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.PIANI_DESC_ID_DESCRIZIONEColumn] = value;
                }
            }
            
            public string RM_RM_ID_DESCRIZIONE {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.RM_RM_ID_DESCRIZIONEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.RM_RM_ID_DESCRIZIONEColumn] = value;
                }
            }
            
            public string BL_NAME {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.BL_NAMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.BL_NAMEColumn] = value;
                }
            }
            
            public System.Decimal IDEQSTD {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblAllData.IDEQSTDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.IDEQSTDColumn] = value;
                }
            }
            
            public System.Decimal IDEQ {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblAllData.IDEQColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.IDEQColumn] = value;
                }
            }
            
            public string FREQUENZA {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.FREQUENZAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.FREQUENZAColumn] = value;
                }
            }
            
            public string UNITS {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.UNITSColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.UNITSColumn] = value;
                }
            }
            
            public System.Decimal UNITS_HOUR {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblAllData.UNITS_HOURColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.UNITS_HOURColumn] = value;
                }
            }
            
            public string TR_ID {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.TR_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.TR_IDColumn] = value;
                }
            }
            
            public System.Decimal ID {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblAllData.IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.IDColumn] = value;
                }
            }
            
            public string PM_GROUP {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.PM_GROUPColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.PM_GROUPColumn] = value;
                }
            }
            
            public string PMP {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.PMPColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.PMPColumn] = value;
                }
            }
            
            public System.Decimal PASSO {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblAllData.PASSOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.PASSOColumn] = value;
                }
            }
            
            public string ISTRUZIONE {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.ISTRUZIONEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.ISTRUZIONEColumn] = value;
                }
            }
            
            public System.Decimal TEMPO {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblAllData.TEMPOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.TEMPOColumn] = value;
                }
            }
            
            public System.Decimal EQSTD_ID {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblAllData.EQSTD_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQSTD_IDColumn] = value;
                }
            }
            
            public System.Decimal DATITECNICIID {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblAllData.DATITECNICIIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.DATITECNICIIDColumn] = value;
                }
            }
            
            public System.Decimal EQID {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblAllData.EQIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQIDColumn] = value;
                }
            }
            
            public System.Decimal TIPOLOGIAID {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblAllData.TIPOLOGIAIDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.TIPOLOGIAIDColumn] = value;
                }
            }
            
            public string DESCRIZIONE {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.DESCRIZIONEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.DESCRIZIONEColumn] = value;
                }
            }
            
            public string TIPOLOGIA {
                get {
                    try {
                        return ((string)(this[this.tableTblAllData.TIPOLOGIAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.TIPOLOGIAColumn] = value;
                }
            }
            
            public System.Byte[] EQ_IMMAGINI_IMMAGINE {
                get {
                    try {
                        return ((System.Byte[])(this[this.tableTblAllData.EQ_IMMAGINI_IMMAGINEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllData.EQ_IMMAGINI_IMMAGINEColumn] = value;
                }
            }
            
            public bool IsEQ_IDNull() {
                return this.IsNull(this.tableTblAllData.EQ_IDColumn);
            }
            
            public void SetEQ_IDNull() {
                this[this.tableTblAllData.EQ_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_OPTION1Null() {
                return this.IsNull(this.tableTblAllData.EQ_OPTION1Column);
            }
            
            public void SetEQ_OPTION1Null() {
                this[this.tableTblAllData.EQ_OPTION1Column] = System.Convert.DBNull;
            }
            
            public bool IsEQ_CONDITIONNull() {
                return this.IsNull(this.tableTblAllData.EQ_CONDITIONColumn);
            }
            
            public void SetEQ_CONDITIONNull() {
                this[this.tableTblAllData.EQ_CONDITIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_CRITICALITYNull() {
                return this.IsNull(this.tableTblAllData.EQ_CRITICALITYColumn);
            }
            
            public void SetEQ_CRITICALITYNull() {
                this[this.tableTblAllData.EQ_CRITICALITYColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_OPTION2Null() {
                return this.IsNull(this.tableTblAllData.EQ_OPTION2Column);
            }
            
            public void SetEQ_OPTION2Null() {
                this[this.tableTblAllData.EQ_OPTION2Column] = System.Convert.DBNull;
            }
            
            public bool IsEQ_GARANZIANull() {
                return this.IsNull(this.tableTblAllData.EQ_GARANZIAColumn);
            }
            
            public void SetEQ_GARANZIANull() {
                this[this.tableTblAllData.EQ_GARANZIAColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQSTD_MODELNONull() {
                return this.IsNull(this.tableTblAllData.EQSTD_MODELNOColumn);
            }
            
            public void SetEQSTD_MODELNONull() {
                this[this.tableTblAllData.EQSTD_MODELNOColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_IMAGE_EQ_ASSYNull() {
                return this.IsNull(this.tableTblAllData.EQ_IMAGE_EQ_ASSYColumn);
            }
            
            public void SetEQ_IMAGE_EQ_ASSYNull() {
                this[this.tableTblAllData.EQ_IMAGE_EQ_ASSYColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_RM_IDNull() {
                return this.IsNull(this.tableTblAllData.EQ_RM_IDColumn);
            }
            
            public void SetEQ_RM_IDNull() {
                this[this.tableTblAllData.EQ_RM_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_BL_IDNull() {
                return this.IsNull(this.tableTblAllData.EQ_BL_IDColumn);
            }
            
            public void SetEQ_BL_IDNull() {
                this[this.tableTblAllData.EQ_BL_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_VN_IDNull() {
                return this.IsNull(this.tableTblAllData.EQ_VN_IDColumn);
            }
            
            public void SetEQ_VN_IDNull() {
                this[this.tableTblAllData.EQ_VN_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_LOC_COLUMNNull() {
                return this.IsNull(this.tableTblAllData.EQ_LOC_COLUMNColumn);
            }
            
            public void SetEQ_LOC_COLUMNNull() {
                this[this.tableTblAllData.EQ_LOC_COLUMNColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_LOC_MAINT_MANLNull() {
                return this.IsNull(this.tableTblAllData.EQ_LOC_MAINT_MANLColumn);
            }
            
            public void SetEQ_LOC_MAINT_MANLNull() {
                this[this.tableTblAllData.EQ_LOC_MAINT_MANLColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_EQ_COMMENTSNull() {
                return this.IsNull(this.tableTblAllData.EQ_EQ_COMMENTSColumn);
            }
            
            public void SetEQ_EQ_COMMENTSNull() {
                this[this.tableTblAllData.EQ_EQ_COMMENTSColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_POTENZANull() {
                return this.IsNull(this.tableTblAllData.EQ_POTENZAColumn);
            }
            
            public void SetEQ_POTENZANull() {
                this[this.tableTblAllData.EQ_POTENZAColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_FUEL_IDNull() {
                return this.IsNull(this.tableTblAllData.EQ_FUEL_IDColumn);
            }
            
            public void SetEQ_FUEL_IDNull() {
                this[this.tableTblAllData.EQ_FUEL_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_DATE_MANUFACTUREDNull() {
                return this.IsNull(this.tableTblAllData.EQ_DATE_MANUFACTUREDColumn);
            }
            
            public void SetEQ_DATE_MANUFACTUREDNull() {
                this[this.tableTblAllData.EQ_DATE_MANUFACTUREDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_DATE_INSTALLEDNull() {
                return this.IsNull(this.tableTblAllData.EQ_DATE_INSTALLEDColumn);
            }
            
            public void SetEQ_DATE_INSTALLEDNull() {
                this[this.tableTblAllData.EQ_DATE_INSTALLEDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_DATE_IN_SERVICENull() {
                return this.IsNull(this.tableTblAllData.EQ_DATE_IN_SERVICEColumn);
            }
            
            public void SetEQ_DATE_IN_SERVICENull() {
                this[this.tableTblAllData.EQ_DATE_IN_SERVICEColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_UTENZANull() {
                return this.IsNull(this.tableTblAllData.EQ_UTENZAColumn);
            }
            
            public void SetEQ_UTENZANull() {
                this[this.tableTblAllData.EQ_UTENZAColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_EQSTDNull() {
                return this.IsNull(this.tableTblAllData.EQ_EQSTDColumn);
            }
            
            public void SetEQ_EQSTDNull() {
                this[this.tableTblAllData.EQ_EQSTDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_EQSTD_IDNull() {
                return this.IsNull(this.tableTblAllData.EQ_EQSTD_IDColumn);
            }
            
            public void SetEQ_EQSTD_IDNull() {
                this[this.tableTblAllData.EQ_EQSTD_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_QTY_PMSNull() {
                return this.IsNull(this.tableTblAllData.EQ_QTY_PMSColumn);
            }
            
            public void SetEQ_QTY_PMSNull() {
                this[this.tableTblAllData.EQ_QTY_PMSColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQSTD_OPTION2Null() {
                return this.IsNull(this.tableTblAllData.EQSTD_OPTION2Column);
            }
            
            public void SetEQSTD_OPTION2Null() {
                this[this.tableTblAllData.EQSTD_OPTION2Column] = System.Convert.DBNull;
            }
            
            public bool IsEQ_NUM_SERIALNull() {
                return this.IsNull(this.tableTblAllData.EQ_NUM_SERIALColumn);
            }
            
            public void SetEQ_NUM_SERIALNull() {
                this[this.tableTblAllData.EQ_NUM_SERIALColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_SOTTOCOMPONENTENull() {
                return this.IsNull(this.tableTblAllData.EQ_SOTTOCOMPONENTEColumn);
            }
            
            public void SetEQ_SOTTOCOMPONENTENull() {
                this[this.tableTblAllData.EQ_SOTTOCOMPONENTEColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQSTD_MFRNull() {
                return this.IsNull(this.tableTblAllData.EQSTD_MFRColumn);
            }
            
            public void SetEQSTD_MFRNull() {
                this[this.tableTblAllData.EQSTD_MFRColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQSTD_CATEGORYNull() {
                return this.IsNull(this.tableTblAllData.EQSTD_CATEGORYColumn);
            }
            
            public void SetEQSTD_CATEGORYNull() {
                this[this.tableTblAllData.EQSTD_CATEGORYColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQSTD_OPTION1Null() {
                return this.IsNull(this.tableTblAllData.EQSTD_OPTION1Column);
            }
            
            public void SetEQSTD_OPTION1Null() {
                this[this.tableTblAllData.EQSTD_OPTION1Column] = System.Convert.DBNull;
            }
            
            public bool IsEQSTD_DESCRIPTIONNull() {
                return this.IsNull(this.tableTblAllData.EQSTD_DESCRIPTIONColumn);
            }
            
            public void SetEQSTD_DESCRIPTIONNull() {
                this[this.tableTblAllData.EQSTD_DESCRIPTIONColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQSTD_EQ_STDNull() {
                return this.IsNull(this.tableTblAllData.EQSTD_EQ_STDColumn);
            }
            
            public void SetEQSTD_EQ_STDNull() {
                this[this.tableTblAllData.EQSTD_EQ_STDColumn] = System.Convert.DBNull;
            }
            
            public bool IsPIANI_DESC_ID_DESCRIZIONENull() {
                return this.IsNull(this.tableTblAllData.PIANI_DESC_ID_DESCRIZIONEColumn);
            }
            
            public void SetPIANI_DESC_ID_DESCRIZIONENull() {
                this[this.tableTblAllData.PIANI_DESC_ID_DESCRIZIONEColumn] = System.Convert.DBNull;
            }
            
            public bool IsRM_RM_ID_DESCRIZIONENull() {
                return this.IsNull(this.tableTblAllData.RM_RM_ID_DESCRIZIONEColumn);
            }
            
            public void SetRM_RM_ID_DESCRIZIONENull() {
                this[this.tableTblAllData.RM_RM_ID_DESCRIZIONEColumn] = System.Convert.DBNull;
            }
            
            public bool IsBL_NAMENull() {
                return this.IsNull(this.tableTblAllData.BL_NAMEColumn);
            }
            
            public void SetBL_NAMENull() {
                this[this.tableTblAllData.BL_NAMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsIDEQSTDNull() {
                return this.IsNull(this.tableTblAllData.IDEQSTDColumn);
            }
            
            public void SetIDEQSTDNull() {
                this[this.tableTblAllData.IDEQSTDColumn] = System.Convert.DBNull;
            }
            
            public bool IsIDEQNull() {
                return this.IsNull(this.tableTblAllData.IDEQColumn);
            }
            
            public void SetIDEQNull() {
                this[this.tableTblAllData.IDEQColumn] = System.Convert.DBNull;
            }
            
            public bool IsFREQUENZANull() {
                return this.IsNull(this.tableTblAllData.FREQUENZAColumn);
            }
            
            public void SetFREQUENZANull() {
                this[this.tableTblAllData.FREQUENZAColumn] = System.Convert.DBNull;
            }
            
            public bool IsUNITSNull() {
                return this.IsNull(this.tableTblAllData.UNITSColumn);
            }
            
            public void SetUNITSNull() {
                this[this.tableTblAllData.UNITSColumn] = System.Convert.DBNull;
            }
            
            public bool IsUNITS_HOURNull() {
                return this.IsNull(this.tableTblAllData.UNITS_HOURColumn);
            }
            
            public void SetUNITS_HOURNull() {
                this[this.tableTblAllData.UNITS_HOURColumn] = System.Convert.DBNull;
            }
            
            public bool IsTR_IDNull() {
                return this.IsNull(this.tableTblAllData.TR_IDColumn);
            }
            
            public void SetTR_IDNull() {
                this[this.tableTblAllData.TR_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsIDNull() {
                return this.IsNull(this.tableTblAllData.IDColumn);
            }
            
            public void SetIDNull() {
                this[this.tableTblAllData.IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsPM_GROUPNull() {
                return this.IsNull(this.tableTblAllData.PM_GROUPColumn);
            }
            
            public void SetPM_GROUPNull() {
                this[this.tableTblAllData.PM_GROUPColumn] = System.Convert.DBNull;
            }
            
            public bool IsPMPNull() {
                return this.IsNull(this.tableTblAllData.PMPColumn);
            }
            
            public void SetPMPNull() {
                this[this.tableTblAllData.PMPColumn] = System.Convert.DBNull;
            }
            
            public bool IsPASSONull() {
                return this.IsNull(this.tableTblAllData.PASSOColumn);
            }
            
            public void SetPASSONull() {
                this[this.tableTblAllData.PASSOColumn] = System.Convert.DBNull;
            }
            
            public bool IsISTRUZIONENull() {
                return this.IsNull(this.tableTblAllData.ISTRUZIONEColumn);
            }
            
            public void SetISTRUZIONENull() {
                this[this.tableTblAllData.ISTRUZIONEColumn] = System.Convert.DBNull;
            }
            
            public bool IsTEMPONull() {
                return this.IsNull(this.tableTblAllData.TEMPOColumn);
            }
            
            public void SetTEMPONull() {
                this[this.tableTblAllData.TEMPOColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQSTD_IDNull() {
                return this.IsNull(this.tableTblAllData.EQSTD_IDColumn);
            }
            
            public void SetEQSTD_IDNull() {
                this[this.tableTblAllData.EQSTD_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsDATITECNICIIDNull() {
                return this.IsNull(this.tableTblAllData.DATITECNICIIDColumn);
            }
            
            public void SetDATITECNICIIDNull() {
                this[this.tableTblAllData.DATITECNICIIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQIDNull() {
                return this.IsNull(this.tableTblAllData.EQIDColumn);
            }
            
            public void SetEQIDNull() {
                this[this.tableTblAllData.EQIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsTIPOLOGIAIDNull() {
                return this.IsNull(this.tableTblAllData.TIPOLOGIAIDColumn);
            }
            
            public void SetTIPOLOGIAIDNull() {
                this[this.tableTblAllData.TIPOLOGIAIDColumn] = System.Convert.DBNull;
            }
            
            public bool IsDESCRIZIONENull() {
                return this.IsNull(this.tableTblAllData.DESCRIZIONEColumn);
            }
            
            public void SetDESCRIZIONENull() {
                this[this.tableTblAllData.DESCRIZIONEColumn] = System.Convert.DBNull;
            }
            
            public bool IsTIPOLOGIANull() {
                return this.IsNull(this.tableTblAllData.TIPOLOGIAColumn);
            }
            
            public void SetTIPOLOGIANull() {
                this[this.tableTblAllData.TIPOLOGIAColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_IMMAGINI_IMMAGINENull() {
                return this.IsNull(this.tableTblAllData.EQ_IMMAGINI_IMMAGINEColumn);
            }
            
            public void SetEQ_IMMAGINI_IMMAGINENull() {
                this[this.tableTblAllData.EQ_IMMAGINI_IMMAGINEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblAllDataRowChangeEvent : EventArgs {
            
            private TblAllDataRow eventRow;
            
            private DataRowAction eventAction;
            
            public TblAllDataRowChangeEvent(TblAllDataRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public TblAllDataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblAllegatiDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnDOC_EQ_ID;
            
            private DataColumn columnNOMEFILE;
            
            private DataColumn columnDESCRIZIONE;
            
            private DataColumn columnEQ_ID;
            
            internal TblAllegatiDataTable() : 
                    base("TblAllegati") {
                this.InitClass();
            }
            
            internal TblAllegatiDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn DOC_EQ_IDColumn {
                get {
                    return this.columnDOC_EQ_ID;
                }
            }
            
            internal DataColumn NOMEFILEColumn {
                get {
                    return this.columnNOMEFILE;
                }
            }
            
            internal DataColumn DESCRIZIONEColumn {
                get {
                    return this.columnDESCRIZIONE;
                }
            }
            
            internal DataColumn EQ_IDColumn {
                get {
                    return this.columnEQ_ID;
                }
            }
            
            public TblAllegatiRow this[int index] {
                get {
                    return ((TblAllegatiRow)(this.Rows[index]));
                }
            }
            
            public event TblAllegatiRowChangeEventHandler TblAllegatiRowChanged;
            
            public event TblAllegatiRowChangeEventHandler TblAllegatiRowChanging;
            
            public event TblAllegatiRowChangeEventHandler TblAllegatiRowDeleted;
            
            public event TblAllegatiRowChangeEventHandler TblAllegatiRowDeleting;
            
            public void AddTblAllegatiRow(TblAllegatiRow row) {
                this.Rows.Add(row);
            }
            
            public TblAllegatiRow AddTblAllegatiRow(System.Decimal DOC_EQ_ID, string NOMEFILE, string DESCRIZIONE, System.Decimal EQ_ID) {
                TblAllegatiRow rowTblAllegatiRow = ((TblAllegatiRow)(this.NewRow()));
                rowTblAllegatiRow.ItemArray = new object[] {
                        DOC_EQ_ID,
                        NOMEFILE,
                        DESCRIZIONE,
                        EQ_ID};
                this.Rows.Add(rowTblAllegatiRow);
                return rowTblAllegatiRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                TblAllegatiDataTable cln = ((TblAllegatiDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new TblAllegatiDataTable();
            }
            
            internal void InitVars() {
                this.columnDOC_EQ_ID = this.Columns["DOC_EQ_ID"];
                this.columnNOMEFILE = this.Columns["NOMEFILE"];
                this.columnDESCRIZIONE = this.Columns["DESCRIZIONE"];
                this.columnEQ_ID = this.Columns["EQ_ID"];
            }
            
            private void InitClass() {
                this.columnDOC_EQ_ID = new DataColumn("DOC_EQ_ID", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDOC_EQ_ID);
                this.columnNOMEFILE = new DataColumn("NOMEFILE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMEFILE);
                this.columnDESCRIZIONE = new DataColumn("DESCRIZIONE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDESCRIZIONE);
                this.columnEQ_ID = new DataColumn("EQ_ID", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_ID);
            }
            
            public TblAllegatiRow NewTblAllegatiRow() {
                return ((TblAllegatiRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new TblAllegatiRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(TblAllegatiRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TblAllegatiRowChanged != null)) {
                    this.TblAllegatiRowChanged(this, new TblAllegatiRowChangeEvent(((TblAllegatiRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TblAllegatiRowChanging != null)) {
                    this.TblAllegatiRowChanging(this, new TblAllegatiRowChangeEvent(((TblAllegatiRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TblAllegatiRowDeleted != null)) {
                    this.TblAllegatiRowDeleted(this, new TblAllegatiRowChangeEvent(((TblAllegatiRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TblAllegatiRowDeleting != null)) {
                    this.TblAllegatiRowDeleting(this, new TblAllegatiRowChangeEvent(((TblAllegatiRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveTblAllegatiRow(TblAllegatiRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblAllegatiRow : DataRow {
            
            private TblAllegatiDataTable tableTblAllegati;
            
            internal TblAllegatiRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableTblAllegati = ((TblAllegatiDataTable)(this.Table));
            }
            
            public System.Decimal DOC_EQ_ID {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblAllegati.DOC_EQ_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllegati.DOC_EQ_IDColumn] = value;
                }
            }
            
            public string NOMEFILE {
                get {
                    try {
                        return ((string)(this[this.tableTblAllegati.NOMEFILEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllegati.NOMEFILEColumn] = value;
                }
            }
            
            public string DESCRIZIONE {
                get {
                    try {
                        return ((string)(this[this.tableTblAllegati.DESCRIZIONEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllegati.DESCRIZIONEColumn] = value;
                }
            }
            
            public System.Decimal EQ_ID {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblAllegati.EQ_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllegati.EQ_IDColumn] = value;
                }
            }
            
            public bool IsDOC_EQ_IDNull() {
                return this.IsNull(this.tableTblAllegati.DOC_EQ_IDColumn);
            }
            
            public void SetDOC_EQ_IDNull() {
                this[this.tableTblAllegati.DOC_EQ_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMEFILENull() {
                return this.IsNull(this.tableTblAllegati.NOMEFILEColumn);
            }
            
            public void SetNOMEFILENull() {
                this[this.tableTblAllegati.NOMEFILEColumn] = System.Convert.DBNull;
            }
            
            public bool IsDESCRIZIONENull() {
                return this.IsNull(this.tableTblAllegati.DESCRIZIONEColumn);
            }
            
            public void SetDESCRIZIONENull() {
                this[this.tableTblAllegati.DESCRIZIONEColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_IDNull() {
                return this.IsNull(this.tableTblAllegati.EQ_IDColumn);
            }
            
            public void SetEQ_IDNull() {
                this[this.tableTblAllegati.EQ_IDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblAllegatiRowChangeEvent : EventArgs {
            
            private TblAllegatiRow eventRow;
            
            private DataRowAction eventAction;
            
            public TblAllegatiRowChangeEvent(TblAllegatiRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public TblAllegatiRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblDatiTecniciEstesaDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnDESCRIZIONEP;
            
            private DataColumn columnTIPOLOGIAP;
            
            private DataColumn columnDESCRIZIONED;
            
            private DataColumn columnTIPOLOOGIAD;
            
            private DataColumn columnIDEq;
            
            internal TblDatiTecniciEstesaDataTable() : 
                    base("TblDatiTecniciEstesa") {
                this.InitClass();
            }
            
            internal TblDatiTecniciEstesaDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn DESCRIZIONEPColumn {
                get {
                    return this.columnDESCRIZIONEP;
                }
            }
            
            internal DataColumn TIPOLOGIAPColumn {
                get {
                    return this.columnTIPOLOGIAP;
                }
            }
            
            internal DataColumn DESCRIZIONEDColumn {
                get {
                    return this.columnDESCRIZIONED;
                }
            }
            
            internal DataColumn TIPOLOOGIADColumn {
                get {
                    return this.columnTIPOLOOGIAD;
                }
            }
            
            internal DataColumn IDEqColumn {
                get {
                    return this.columnIDEq;
                }
            }
            
            public TblDatiTecniciEstesaRow this[int index] {
                get {
                    return ((TblDatiTecniciEstesaRow)(this.Rows[index]));
                }
            }
            
            public event TblDatiTecniciEstesaRowChangeEventHandler TblDatiTecniciEstesaRowChanged;
            
            public event TblDatiTecniciEstesaRowChangeEventHandler TblDatiTecniciEstesaRowChanging;
            
            public event TblDatiTecniciEstesaRowChangeEventHandler TblDatiTecniciEstesaRowDeleted;
            
            public event TblDatiTecniciEstesaRowChangeEventHandler TblDatiTecniciEstesaRowDeleting;
            
            public void AddTblDatiTecniciEstesaRow(TblDatiTecniciEstesaRow row) {
                this.Rows.Add(row);
            }
            
            public TblDatiTecniciEstesaRow AddTblDatiTecniciEstesaRow(string DESCRIZIONEP, string TIPOLOGIAP, string DESCRIZIONED, string TIPOLOOGIAD, System.Decimal IDEq) {
                TblDatiTecniciEstesaRow rowTblDatiTecniciEstesaRow = ((TblDatiTecniciEstesaRow)(this.NewRow()));
                rowTblDatiTecniciEstesaRow.ItemArray = new object[] {
                        DESCRIZIONEP,
                        TIPOLOGIAP,
                        DESCRIZIONED,
                        TIPOLOOGIAD,
                        IDEq};
                this.Rows.Add(rowTblDatiTecniciEstesaRow);
                return rowTblDatiTecniciEstesaRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                TblDatiTecniciEstesaDataTable cln = ((TblDatiTecniciEstesaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new TblDatiTecniciEstesaDataTable();
            }
            
            internal void InitVars() {
                this.columnDESCRIZIONEP = this.Columns["DESCRIZIONEP"];
                this.columnTIPOLOGIAP = this.Columns["TIPOLOGIAP"];
                this.columnDESCRIZIONED = this.Columns["DESCRIZIONED"];
                this.columnTIPOLOOGIAD = this.Columns["TIPOLOOGIAD"];
                this.columnIDEq = this.Columns["IDEq"];
            }
            
            private void InitClass() {
                this.columnDESCRIZIONEP = new DataColumn("DESCRIZIONEP", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDESCRIZIONEP);
                this.columnTIPOLOGIAP = new DataColumn("TIPOLOGIAP", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTIPOLOGIAP);
                this.columnDESCRIZIONED = new DataColumn("DESCRIZIONED", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDESCRIZIONED);
                this.columnTIPOLOOGIAD = new DataColumn("TIPOLOOGIAD", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTIPOLOOGIAD);
                this.columnIDEq = new DataColumn("IDEq", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIDEq);
            }
            
            public TblDatiTecniciEstesaRow NewTblDatiTecniciEstesaRow() {
                return ((TblDatiTecniciEstesaRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new TblDatiTecniciEstesaRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(TblDatiTecniciEstesaRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TblDatiTecniciEstesaRowChanged != null)) {
                    this.TblDatiTecniciEstesaRowChanged(this, new TblDatiTecniciEstesaRowChangeEvent(((TblDatiTecniciEstesaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TblDatiTecniciEstesaRowChanging != null)) {
                    this.TblDatiTecniciEstesaRowChanging(this, new TblDatiTecniciEstesaRowChangeEvent(((TblDatiTecniciEstesaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TblDatiTecniciEstesaRowDeleted != null)) {
                    this.TblDatiTecniciEstesaRowDeleted(this, new TblDatiTecniciEstesaRowChangeEvent(((TblDatiTecniciEstesaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TblDatiTecniciEstesaRowDeleting != null)) {
                    this.TblDatiTecniciEstesaRowDeleting(this, new TblDatiTecniciEstesaRowChangeEvent(((TblDatiTecniciEstesaRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveTblDatiTecniciEstesaRow(TblDatiTecniciEstesaRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblDatiTecniciEstesaRow : DataRow {
            
            private TblDatiTecniciEstesaDataTable tableTblDatiTecniciEstesa;
            
            internal TblDatiTecniciEstesaRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableTblDatiTecniciEstesa = ((TblDatiTecniciEstesaDataTable)(this.Table));
            }
            
            public string DESCRIZIONEP {
                get {
                    try {
                        return ((string)(this[this.tableTblDatiTecniciEstesa.DESCRIZIONEPColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblDatiTecniciEstesa.DESCRIZIONEPColumn] = value;
                }
            }
            
            public string TIPOLOGIAP {
                get {
                    try {
                        return ((string)(this[this.tableTblDatiTecniciEstesa.TIPOLOGIAPColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblDatiTecniciEstesa.TIPOLOGIAPColumn] = value;
                }
            }
            
            public string DESCRIZIONED {
                get {
                    try {
                        return ((string)(this[this.tableTblDatiTecniciEstesa.DESCRIZIONEDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblDatiTecniciEstesa.DESCRIZIONEDColumn] = value;
                }
            }
            
            public string TIPOLOOGIAD {
                get {
                    try {
                        return ((string)(this[this.tableTblDatiTecniciEstesa.TIPOLOOGIADColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblDatiTecniciEstesa.TIPOLOOGIADColumn] = value;
                }
            }
            
            public System.Decimal IDEq {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblDatiTecniciEstesa.IDEqColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblDatiTecniciEstesa.IDEqColumn] = value;
                }
            }
            
            public bool IsDESCRIZIONEPNull() {
                return this.IsNull(this.tableTblDatiTecniciEstesa.DESCRIZIONEPColumn);
            }
            
            public void SetDESCRIZIONEPNull() {
                this[this.tableTblDatiTecniciEstesa.DESCRIZIONEPColumn] = System.Convert.DBNull;
            }
            
            public bool IsTIPOLOGIAPNull() {
                return this.IsNull(this.tableTblDatiTecniciEstesa.TIPOLOGIAPColumn);
            }
            
            public void SetTIPOLOGIAPNull() {
                this[this.tableTblDatiTecniciEstesa.TIPOLOGIAPColumn] = System.Convert.DBNull;
            }
            
            public bool IsDESCRIZIONEDNull() {
                return this.IsNull(this.tableTblDatiTecniciEstesa.DESCRIZIONEDColumn);
            }
            
            public void SetDESCRIZIONEDNull() {
                this[this.tableTblDatiTecniciEstesa.DESCRIZIONEDColumn] = System.Convert.DBNull;
            }
            
            public bool IsTIPOLOOGIADNull() {
                return this.IsNull(this.tableTblDatiTecniciEstesa.TIPOLOOGIADColumn);
            }
            
            public void SetTIPOLOOGIADNull() {
                this[this.tableTblDatiTecniciEstesa.TIPOLOOGIADColumn] = System.Convert.DBNull;
            }
            
            public bool IsIDEqNull() {
                return this.IsNull(this.tableTblDatiTecniciEstesa.IDEqColumn);
            }
            
            public void SetIDEqNull() {
                this[this.tableTblDatiTecniciEstesa.IDEqColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblDatiTecniciEstesaRowChangeEvent : EventArgs {
            
            private TblDatiTecniciEstesaRow eventRow;
            
            private DataRowAction eventAction;
            
            public TblDatiTecniciEstesaRowChangeEvent(TblDatiTecniciEstesaRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public TblDatiTecniciEstesaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblAllegatiEstesaDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnNOMEFILEP;
            
            private DataColumn columnDESCRIZIONEP;
            
            private DataColumn columnNOMEFILED;
            
            private DataColumn columnDESCRIZIONED;
            
            private DataColumn columnEQ_ID;
            
            internal TblAllegatiEstesaDataTable() : 
                    base("TblAllegatiEstesa") {
                this.InitClass();
            }
            
            internal TblAllegatiEstesaDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn NOMEFILEPColumn {
                get {
                    return this.columnNOMEFILEP;
                }
            }
            
            internal DataColumn DESCRIZIONEPColumn {
                get {
                    return this.columnDESCRIZIONEP;
                }
            }
            
            internal DataColumn NOMEFILEDColumn {
                get {
                    return this.columnNOMEFILED;
                }
            }
            
            internal DataColumn DESCRIZIONEDColumn {
                get {
                    return this.columnDESCRIZIONED;
                }
            }
            
            internal DataColumn EQ_IDColumn {
                get {
                    return this.columnEQ_ID;
                }
            }
            
            public TblAllegatiEstesaRow this[int index] {
                get {
                    return ((TblAllegatiEstesaRow)(this.Rows[index]));
                }
            }
            
            public event TblAllegatiEstesaRowChangeEventHandler TblAllegatiEstesaRowChanged;
            
            public event TblAllegatiEstesaRowChangeEventHandler TblAllegatiEstesaRowChanging;
            
            public event TblAllegatiEstesaRowChangeEventHandler TblAllegatiEstesaRowDeleted;
            
            public event TblAllegatiEstesaRowChangeEventHandler TblAllegatiEstesaRowDeleting;
            
            public void AddTblAllegatiEstesaRow(TblAllegatiEstesaRow row) {
                this.Rows.Add(row);
            }
            
            public TblAllegatiEstesaRow AddTblAllegatiEstesaRow(string NOMEFILEP, string DESCRIZIONEP, string NOMEFILED, string DESCRIZIONED, System.Decimal EQ_ID) {
                TblAllegatiEstesaRow rowTblAllegatiEstesaRow = ((TblAllegatiEstesaRow)(this.NewRow()));
                rowTblAllegatiEstesaRow.ItemArray = new object[] {
                        NOMEFILEP,
                        DESCRIZIONEP,
                        NOMEFILED,
                        DESCRIZIONED,
                        EQ_ID};
                this.Rows.Add(rowTblAllegatiEstesaRow);
                return rowTblAllegatiEstesaRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                TblAllegatiEstesaDataTable cln = ((TblAllegatiEstesaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new TblAllegatiEstesaDataTable();
            }
            
            internal void InitVars() {
                this.columnNOMEFILEP = this.Columns["NOMEFILEP"];
                this.columnDESCRIZIONEP = this.Columns["DESCRIZIONEP"];
                this.columnNOMEFILED = this.Columns["NOMEFILED"];
                this.columnDESCRIZIONED = this.Columns["DESCRIZIONED"];
                this.columnEQ_ID = this.Columns["EQ_ID"];
            }
            
            private void InitClass() {
                this.columnNOMEFILEP = new DataColumn("NOMEFILEP", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMEFILEP);
                this.columnDESCRIZIONEP = new DataColumn("DESCRIZIONEP", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDESCRIZIONEP);
                this.columnNOMEFILED = new DataColumn("NOMEFILED", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMEFILED);
                this.columnDESCRIZIONED = new DataColumn("DESCRIZIONED", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDESCRIZIONED);
                this.columnEQ_ID = new DataColumn("EQ_ID", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_ID);
            }
            
            public TblAllegatiEstesaRow NewTblAllegatiEstesaRow() {
                return ((TblAllegatiEstesaRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new TblAllegatiEstesaRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(TblAllegatiEstesaRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TblAllegatiEstesaRowChanged != null)) {
                    this.TblAllegatiEstesaRowChanged(this, new TblAllegatiEstesaRowChangeEvent(((TblAllegatiEstesaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TblAllegatiEstesaRowChanging != null)) {
                    this.TblAllegatiEstesaRowChanging(this, new TblAllegatiEstesaRowChangeEvent(((TblAllegatiEstesaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TblAllegatiEstesaRowDeleted != null)) {
                    this.TblAllegatiEstesaRowDeleted(this, new TblAllegatiEstesaRowChangeEvent(((TblAllegatiEstesaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TblAllegatiEstesaRowDeleting != null)) {
                    this.TblAllegatiEstesaRowDeleting(this, new TblAllegatiEstesaRowChangeEvent(((TblAllegatiEstesaRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveTblAllegatiEstesaRow(TblAllegatiEstesaRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblAllegatiEstesaRow : DataRow {
            
            private TblAllegatiEstesaDataTable tableTblAllegatiEstesa;
            
            internal TblAllegatiEstesaRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableTblAllegatiEstesa = ((TblAllegatiEstesaDataTable)(this.Table));
            }
            
            public string NOMEFILEP {
                get {
                    try {
                        return ((string)(this[this.tableTblAllegatiEstesa.NOMEFILEPColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllegatiEstesa.NOMEFILEPColumn] = value;
                }
            }
            
            public string DESCRIZIONEP {
                get {
                    try {
                        return ((string)(this[this.tableTblAllegatiEstesa.DESCRIZIONEPColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllegatiEstesa.DESCRIZIONEPColumn] = value;
                }
            }
            
            public string NOMEFILED {
                get {
                    try {
                        return ((string)(this[this.tableTblAllegatiEstesa.NOMEFILEDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllegatiEstesa.NOMEFILEDColumn] = value;
                }
            }
            
            public string DESCRIZIONED {
                get {
                    try {
                        return ((string)(this[this.tableTblAllegatiEstesa.DESCRIZIONEDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllegatiEstesa.DESCRIZIONEDColumn] = value;
                }
            }
            
            public System.Decimal EQ_ID {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblAllegatiEstesa.EQ_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblAllegatiEstesa.EQ_IDColumn] = value;
                }
            }
            
            public bool IsNOMEFILEPNull() {
                return this.IsNull(this.tableTblAllegatiEstesa.NOMEFILEPColumn);
            }
            
            public void SetNOMEFILEPNull() {
                this[this.tableTblAllegatiEstesa.NOMEFILEPColumn] = System.Convert.DBNull;
            }
            
            public bool IsDESCRIZIONEPNull() {
                return this.IsNull(this.tableTblAllegatiEstesa.DESCRIZIONEPColumn);
            }
            
            public void SetDESCRIZIONEPNull() {
                this[this.tableTblAllegatiEstesa.DESCRIZIONEPColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMEFILEDNull() {
                return this.IsNull(this.tableTblAllegatiEstesa.NOMEFILEDColumn);
            }
            
            public void SetNOMEFILEDNull() {
                this[this.tableTblAllegatiEstesa.NOMEFILEDColumn] = System.Convert.DBNull;
            }
            
            public bool IsDESCRIZIONEDNull() {
                return this.IsNull(this.tableTblAllegatiEstesa.DESCRIZIONEDColumn);
            }
            
            public void SetDESCRIZIONEDNull() {
                this[this.tableTblAllegatiEstesa.DESCRIZIONEDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_IDNull() {
                return this.IsNull(this.tableTblAllegatiEstesa.EQ_IDColumn);
            }
            
            public void SetEQ_IDNull() {
                this[this.tableTblAllegatiEstesa.EQ_IDColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblAllegatiEstesaRowChangeEvent : EventArgs {
            
            private TblAllegatiEstesaRow eventRow;
            
            private DataRowAction eventAction;
            
            public TblAllegatiEstesaRowChangeEvent(TblAllegatiEstesaRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public TblAllegatiEstesaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblManRicDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdEq;
            
            private DataColumn columnWR_ID;
            
            private DataColumn columnDATA_WR;
            
            private DataColumn columnWO_ID;
            
            private DataColumn columnPIANIFICATA;
            
            private DataColumn columnCOMPLETATA;
            
            private DataColumn columnSTATO;
            
            private DataColumn columnDESCRIZIONE;
            
            private DataColumn columnADDETTO;
            
            private DataColumn columnMANUTENZIONE;
            
            internal TblManRicDataTable() : 
                    base("TblManRic") {
                this.InitClass();
            }
            
            internal TblManRicDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdEqColumn {
                get {
                    return this.columnIdEq;
                }
            }
            
            internal DataColumn WR_IDColumn {
                get {
                    return this.columnWR_ID;
                }
            }
            
            internal DataColumn DATA_WRColumn {
                get {
                    return this.columnDATA_WR;
                }
            }
            
            internal DataColumn WO_IDColumn {
                get {
                    return this.columnWO_ID;
                }
            }
            
            internal DataColumn PIANIFICATAColumn {
                get {
                    return this.columnPIANIFICATA;
                }
            }
            
            internal DataColumn COMPLETATAColumn {
                get {
                    return this.columnCOMPLETATA;
                }
            }
            
            internal DataColumn STATOColumn {
                get {
                    return this.columnSTATO;
                }
            }
            
            internal DataColumn DESCRIZIONEColumn {
                get {
                    return this.columnDESCRIZIONE;
                }
            }
            
            internal DataColumn ADDETTOColumn {
                get {
                    return this.columnADDETTO;
                }
            }
            
            internal DataColumn MANUTENZIONEColumn {
                get {
                    return this.columnMANUTENZIONE;
                }
            }
            
            public TblManRicRow this[int index] {
                get {
                    return ((TblManRicRow)(this.Rows[index]));
                }
            }
            
            public event TblManRicRowChangeEventHandler TblManRicRowChanged;
            
            public event TblManRicRowChangeEventHandler TblManRicRowChanging;
            
            public event TblManRicRowChangeEventHandler TblManRicRowDeleted;
            
            public event TblManRicRowChangeEventHandler TblManRicRowDeleting;
            
            public void AddTblManRicRow(TblManRicRow row) {
                this.Rows.Add(row);
            }
            
            public TblManRicRow AddTblManRicRow(System.Decimal IdEq, System.Decimal WR_ID, System.DateTime DATA_WR, System.Decimal WO_ID, System.DateTime PIANIFICATA, System.DateTime COMPLETATA, string STATO, string DESCRIZIONE, string ADDETTO, string MANUTENZIONE) {
                TblManRicRow rowTblManRicRow = ((TblManRicRow)(this.NewRow()));
                rowTblManRicRow.ItemArray = new object[] {
                        IdEq,
                        WR_ID,
                        DATA_WR,
                        WO_ID,
                        PIANIFICATA,
                        COMPLETATA,
                        STATO,
                        DESCRIZIONE,
                        ADDETTO,
                        MANUTENZIONE};
                this.Rows.Add(rowTblManRicRow);
                return rowTblManRicRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                TblManRicDataTable cln = ((TblManRicDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new TblManRicDataTable();
            }
            
            internal void InitVars() {
                this.columnIdEq = this.Columns["IdEq"];
                this.columnWR_ID = this.Columns["WR_ID"];
                this.columnDATA_WR = this.Columns["DATA_WR"];
                this.columnWO_ID = this.Columns["WO_ID"];
                this.columnPIANIFICATA = this.Columns["PIANIFICATA"];
                this.columnCOMPLETATA = this.Columns["COMPLETATA"];
                this.columnSTATO = this.Columns["STATO"];
                this.columnDESCRIZIONE = this.Columns["DESCRIZIONE"];
                this.columnADDETTO = this.Columns["ADDETTO"];
                this.columnMANUTENZIONE = this.Columns["MANUTENZIONE"];
            }
            
            private void InitClass() {
                this.columnIdEq = new DataColumn("IdEq", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEq);
                this.columnWR_ID = new DataColumn("WR_ID", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWR_ID);
                this.columnDATA_WR = new DataColumn("DATA_WR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDATA_WR);
                this.columnWO_ID = new DataColumn("WO_ID", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWO_ID);
                this.columnPIANIFICATA = new DataColumn("PIANIFICATA", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPIANIFICATA);
                this.columnCOMPLETATA = new DataColumn("COMPLETATA", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCOMPLETATA);
                this.columnSTATO = new DataColumn("STATO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSTATO);
                this.columnDESCRIZIONE = new DataColumn("DESCRIZIONE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDESCRIZIONE);
                this.columnADDETTO = new DataColumn("ADDETTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnADDETTO);
                this.columnMANUTENZIONE = new DataColumn("MANUTENZIONE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMANUTENZIONE);
            }
            
            public TblManRicRow NewTblManRicRow() {
                return ((TblManRicRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new TblManRicRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(TblManRicRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TblManRicRowChanged != null)) {
                    this.TblManRicRowChanged(this, new TblManRicRowChangeEvent(((TblManRicRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TblManRicRowChanging != null)) {
                    this.TblManRicRowChanging(this, new TblManRicRowChangeEvent(((TblManRicRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TblManRicRowDeleted != null)) {
                    this.TblManRicRowDeleted(this, new TblManRicRowChangeEvent(((TblManRicRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TblManRicRowDeleting != null)) {
                    this.TblManRicRowDeleting(this, new TblManRicRowChangeEvent(((TblManRicRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveTblManRicRow(TblManRicRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblManRicRow : DataRow {
            
            private TblManRicDataTable tableTblManRic;
            
            internal TblManRicRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableTblManRic = ((TblManRicDataTable)(this.Table));
            }
            
            public System.Decimal IdEq {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblManRic.IdEqColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManRic.IdEqColumn] = value;
                }
            }
            
            public System.Decimal WR_ID {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblManRic.WR_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManRic.WR_IDColumn] = value;
                }
            }
            
            public System.DateTime DATA_WR {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTblManRic.DATA_WRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManRic.DATA_WRColumn] = value;
                }
            }
            
            public System.Decimal WO_ID {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblManRic.WO_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManRic.WO_IDColumn] = value;
                }
            }
            
            public System.DateTime PIANIFICATA {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTblManRic.PIANIFICATAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManRic.PIANIFICATAColumn] = value;
                }
            }
            
            public System.DateTime COMPLETATA {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTblManRic.COMPLETATAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManRic.COMPLETATAColumn] = value;
                }
            }
            
            public string STATO {
                get {
                    try {
                        return ((string)(this[this.tableTblManRic.STATOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManRic.STATOColumn] = value;
                }
            }
            
            public string DESCRIZIONE {
                get {
                    try {
                        return ((string)(this[this.tableTblManRic.DESCRIZIONEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManRic.DESCRIZIONEColumn] = value;
                }
            }
            
            public string ADDETTO {
                get {
                    try {
                        return ((string)(this[this.tableTblManRic.ADDETTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManRic.ADDETTOColumn] = value;
                }
            }
            
            public string MANUTENZIONE {
                get {
                    try {
                        return ((string)(this[this.tableTblManRic.MANUTENZIONEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManRic.MANUTENZIONEColumn] = value;
                }
            }
            
            public bool IsIdEqNull() {
                return this.IsNull(this.tableTblManRic.IdEqColumn);
            }
            
            public void SetIdEqNull() {
                this[this.tableTblManRic.IdEqColumn] = System.Convert.DBNull;
            }
            
            public bool IsWR_IDNull() {
                return this.IsNull(this.tableTblManRic.WR_IDColumn);
            }
            
            public void SetWR_IDNull() {
                this[this.tableTblManRic.WR_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsDATA_WRNull() {
                return this.IsNull(this.tableTblManRic.DATA_WRColumn);
            }
            
            public void SetDATA_WRNull() {
                this[this.tableTblManRic.DATA_WRColumn] = System.Convert.DBNull;
            }
            
            public bool IsWO_IDNull() {
                return this.IsNull(this.tableTblManRic.WO_IDColumn);
            }
            
            public void SetWO_IDNull() {
                this[this.tableTblManRic.WO_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsPIANIFICATANull() {
                return this.IsNull(this.tableTblManRic.PIANIFICATAColumn);
            }
            
            public void SetPIANIFICATANull() {
                this[this.tableTblManRic.PIANIFICATAColumn] = System.Convert.DBNull;
            }
            
            public bool IsCOMPLETATANull() {
                return this.IsNull(this.tableTblManRic.COMPLETATAColumn);
            }
            
            public void SetCOMPLETATANull() {
                this[this.tableTblManRic.COMPLETATAColumn] = System.Convert.DBNull;
            }
            
            public bool IsSTATONull() {
                return this.IsNull(this.tableTblManRic.STATOColumn);
            }
            
            public void SetSTATONull() {
                this[this.tableTblManRic.STATOColumn] = System.Convert.DBNull;
            }
            
            public bool IsDESCRIZIONENull() {
                return this.IsNull(this.tableTblManRic.DESCRIZIONEColumn);
            }
            
            public void SetDESCRIZIONENull() {
                this[this.tableTblManRic.DESCRIZIONEColumn] = System.Convert.DBNull;
            }
            
            public bool IsADDETTONull() {
                return this.IsNull(this.tableTblManRic.ADDETTOColumn);
            }
            
            public void SetADDETTONull() {
                this[this.tableTblManRic.ADDETTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsMANUTENZIONENull() {
                return this.IsNull(this.tableTblManRic.MANUTENZIONEColumn);
            }
            
            public void SetMANUTENZIONENull() {
                this[this.tableTblManRic.MANUTENZIONEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblManRicRowChangeEvent : EventArgs {
            
            private TblManRicRow eventRow;
            
            private DataRowAction eventAction;
            
            public TblManRicRowChangeEvent(TblManRicRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public TblManRicRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblManProgDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdEq;
            
            private DataColumn columnWR_ID;
            
            private DataColumn columnDATA_WR;
            
            private DataColumn columnWO_ID;
            
            private DataColumn columnPIANIFICATA;
            
            private DataColumn columnCOMPLETATA;
            
            private DataColumn columnSTATO;
            
            private DataColumn columnDESCRIZIONE;
            
            private DataColumn columnADDETTO;
            
            private DataColumn columnMANUTENZIONE;
            
            internal TblManProgDataTable() : 
                    base("TblManProg") {
                this.InitClass();
            }
            
            internal TblManProgDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdEqColumn {
                get {
                    return this.columnIdEq;
                }
            }
            
            internal DataColumn WR_IDColumn {
                get {
                    return this.columnWR_ID;
                }
            }
            
            internal DataColumn DATA_WRColumn {
                get {
                    return this.columnDATA_WR;
                }
            }
            
            internal DataColumn WO_IDColumn {
                get {
                    return this.columnWO_ID;
                }
            }
            
            internal DataColumn PIANIFICATAColumn {
                get {
                    return this.columnPIANIFICATA;
                }
            }
            
            internal DataColumn COMPLETATAColumn {
                get {
                    return this.columnCOMPLETATA;
                }
            }
            
            internal DataColumn STATOColumn {
                get {
                    return this.columnSTATO;
                }
            }
            
            internal DataColumn DESCRIZIONEColumn {
                get {
                    return this.columnDESCRIZIONE;
                }
            }
            
            internal DataColumn ADDETTOColumn {
                get {
                    return this.columnADDETTO;
                }
            }
            
            internal DataColumn MANUTENZIONEColumn {
                get {
                    return this.columnMANUTENZIONE;
                }
            }
            
            public TblManProgRow this[int index] {
                get {
                    return ((TblManProgRow)(this.Rows[index]));
                }
            }
            
            public event TblManProgRowChangeEventHandler TblManProgRowChanged;
            
            public event TblManProgRowChangeEventHandler TblManProgRowChanging;
            
            public event TblManProgRowChangeEventHandler TblManProgRowDeleted;
            
            public event TblManProgRowChangeEventHandler TblManProgRowDeleting;
            
            public void AddTblManProgRow(TblManProgRow row) {
                this.Rows.Add(row);
            }
            
            public TblManProgRow AddTblManProgRow(System.Decimal IdEq, System.Decimal WR_ID, System.DateTime DATA_WR, System.Decimal WO_ID, System.DateTime PIANIFICATA, System.DateTime COMPLETATA, string STATO, string DESCRIZIONE, string ADDETTO, string MANUTENZIONE) {
                TblManProgRow rowTblManProgRow = ((TblManProgRow)(this.NewRow()));
                rowTblManProgRow.ItemArray = new object[] {
                        IdEq,
                        WR_ID,
                        DATA_WR,
                        WO_ID,
                        PIANIFICATA,
                        COMPLETATA,
                        STATO,
                        DESCRIZIONE,
                        ADDETTO,
                        MANUTENZIONE};
                this.Rows.Add(rowTblManProgRow);
                return rowTblManProgRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                TblManProgDataTable cln = ((TblManProgDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new TblManProgDataTable();
            }
            
            internal void InitVars() {
                this.columnIdEq = this.Columns["IdEq"];
                this.columnWR_ID = this.Columns["WR_ID"];
                this.columnDATA_WR = this.Columns["DATA_WR"];
                this.columnWO_ID = this.Columns["WO_ID"];
                this.columnPIANIFICATA = this.Columns["PIANIFICATA"];
                this.columnCOMPLETATA = this.Columns["COMPLETATA"];
                this.columnSTATO = this.Columns["STATO"];
                this.columnDESCRIZIONE = this.Columns["DESCRIZIONE"];
                this.columnADDETTO = this.Columns["ADDETTO"];
                this.columnMANUTENZIONE = this.Columns["MANUTENZIONE"];
            }
            
            private void InitClass() {
                this.columnIdEq = new DataColumn("IdEq", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEq);
                this.columnWR_ID = new DataColumn("WR_ID", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWR_ID);
                this.columnDATA_WR = new DataColumn("DATA_WR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDATA_WR);
                this.columnWO_ID = new DataColumn("WO_ID", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWO_ID);
                this.columnPIANIFICATA = new DataColumn("PIANIFICATA", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPIANIFICATA);
                this.columnCOMPLETATA = new DataColumn("COMPLETATA", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCOMPLETATA);
                this.columnSTATO = new DataColumn("STATO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSTATO);
                this.columnDESCRIZIONE = new DataColumn("DESCRIZIONE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDESCRIZIONE);
                this.columnADDETTO = new DataColumn("ADDETTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnADDETTO);
                this.columnMANUTENZIONE = new DataColumn("MANUTENZIONE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMANUTENZIONE);
            }
            
            public TblManProgRow NewTblManProgRow() {
                return ((TblManProgRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new TblManProgRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(TblManProgRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TblManProgRowChanged != null)) {
                    this.TblManProgRowChanged(this, new TblManProgRowChangeEvent(((TblManProgRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TblManProgRowChanging != null)) {
                    this.TblManProgRowChanging(this, new TblManProgRowChangeEvent(((TblManProgRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TblManProgRowDeleted != null)) {
                    this.TblManProgRowDeleted(this, new TblManProgRowChangeEvent(((TblManProgRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TblManProgRowDeleting != null)) {
                    this.TblManProgRowDeleting(this, new TblManProgRowChangeEvent(((TblManProgRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveTblManProgRow(TblManProgRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblManProgRow : DataRow {
            
            private TblManProgDataTable tableTblManProg;
            
            internal TblManProgRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableTblManProg = ((TblManProgDataTable)(this.Table));
            }
            
            public System.Decimal IdEq {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblManProg.IdEqColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManProg.IdEqColumn] = value;
                }
            }
            
            public System.Decimal WR_ID {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblManProg.WR_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManProg.WR_IDColumn] = value;
                }
            }
            
            public System.DateTime DATA_WR {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTblManProg.DATA_WRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManProg.DATA_WRColumn] = value;
                }
            }
            
            public System.Decimal WO_ID {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblManProg.WO_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManProg.WO_IDColumn] = value;
                }
            }
            
            public System.DateTime PIANIFICATA {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTblManProg.PIANIFICATAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManProg.PIANIFICATAColumn] = value;
                }
            }
            
            public System.DateTime COMPLETATA {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTblManProg.COMPLETATAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManProg.COMPLETATAColumn] = value;
                }
            }
            
            public string STATO {
                get {
                    try {
                        return ((string)(this[this.tableTblManProg.STATOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManProg.STATOColumn] = value;
                }
            }
            
            public string DESCRIZIONE {
                get {
                    try {
                        return ((string)(this[this.tableTblManProg.DESCRIZIONEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManProg.DESCRIZIONEColumn] = value;
                }
            }
            
            public string ADDETTO {
                get {
                    try {
                        return ((string)(this[this.tableTblManProg.ADDETTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManProg.ADDETTOColumn] = value;
                }
            }
            
            public string MANUTENZIONE {
                get {
                    try {
                        return ((string)(this[this.tableTblManProg.MANUTENZIONEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManProg.MANUTENZIONEColumn] = value;
                }
            }
            
            public bool IsIdEqNull() {
                return this.IsNull(this.tableTblManProg.IdEqColumn);
            }
            
            public void SetIdEqNull() {
                this[this.tableTblManProg.IdEqColumn] = System.Convert.DBNull;
            }
            
            public bool IsWR_IDNull() {
                return this.IsNull(this.tableTblManProg.WR_IDColumn);
            }
            
            public void SetWR_IDNull() {
                this[this.tableTblManProg.WR_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsDATA_WRNull() {
                return this.IsNull(this.tableTblManProg.DATA_WRColumn);
            }
            
            public void SetDATA_WRNull() {
                this[this.tableTblManProg.DATA_WRColumn] = System.Convert.DBNull;
            }
            
            public bool IsWO_IDNull() {
                return this.IsNull(this.tableTblManProg.WO_IDColumn);
            }
            
            public void SetWO_IDNull() {
                this[this.tableTblManProg.WO_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsPIANIFICATANull() {
                return this.IsNull(this.tableTblManProg.PIANIFICATAColumn);
            }
            
            public void SetPIANIFICATANull() {
                this[this.tableTblManProg.PIANIFICATAColumn] = System.Convert.DBNull;
            }
            
            public bool IsCOMPLETATANull() {
                return this.IsNull(this.tableTblManProg.COMPLETATAColumn);
            }
            
            public void SetCOMPLETATANull() {
                this[this.tableTblManProg.COMPLETATAColumn] = System.Convert.DBNull;
            }
            
            public bool IsSTATONull() {
                return this.IsNull(this.tableTblManProg.STATOColumn);
            }
            
            public void SetSTATONull() {
                this[this.tableTblManProg.STATOColumn] = System.Convert.DBNull;
            }
            
            public bool IsDESCRIZIONENull() {
                return this.IsNull(this.tableTblManProg.DESCRIZIONEColumn);
            }
            
            public void SetDESCRIZIONENull() {
                this[this.tableTblManProg.DESCRIZIONEColumn] = System.Convert.DBNull;
            }
            
            public bool IsADDETTONull() {
                return this.IsNull(this.tableTblManProg.ADDETTOColumn);
            }
            
            public void SetADDETTONull() {
                this[this.tableTblManProg.ADDETTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsMANUTENZIONENull() {
                return this.IsNull(this.tableTblManProg.MANUTENZIONEColumn);
            }
            
            public void SetMANUTENZIONENull() {
                this[this.tableTblManProg.MANUTENZIONEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblManProgRowChangeEvent : EventArgs {
            
            private TblManProgRow eventRow;
            
            private DataRowAction eventAction;
            
            public TblManProgRowChangeEvent(TblManProgRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public TblManProgRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblManStraDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnIdEq;
            
            private DataColumn columnWR_ID;
            
            private DataColumn columnDATA_WR;
            
            private DataColumn columnWO_ID;
            
            private DataColumn columnPIANIFICATA;
            
            private DataColumn columnCOMPLETATA;
            
            private DataColumn columnSTATO;
            
            private DataColumn columnDESCRIZIONE;
            
            private DataColumn columnADDETTO;
            
            private DataColumn columnMANUTENZIONE;
            
            internal TblManStraDataTable() : 
                    base("TblManStra") {
                this.InitClass();
            }
            
            internal TblManStraDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn IdEqColumn {
                get {
                    return this.columnIdEq;
                }
            }
            
            internal DataColumn WR_IDColumn {
                get {
                    return this.columnWR_ID;
                }
            }
            
            internal DataColumn DATA_WRColumn {
                get {
                    return this.columnDATA_WR;
                }
            }
            
            internal DataColumn WO_IDColumn {
                get {
                    return this.columnWO_ID;
                }
            }
            
            internal DataColumn PIANIFICATAColumn {
                get {
                    return this.columnPIANIFICATA;
                }
            }
            
            internal DataColumn COMPLETATAColumn {
                get {
                    return this.columnCOMPLETATA;
                }
            }
            
            internal DataColumn STATOColumn {
                get {
                    return this.columnSTATO;
                }
            }
            
            internal DataColumn DESCRIZIONEColumn {
                get {
                    return this.columnDESCRIZIONE;
                }
            }
            
            internal DataColumn ADDETTOColumn {
                get {
                    return this.columnADDETTO;
                }
            }
            
            internal DataColumn MANUTENZIONEColumn {
                get {
                    return this.columnMANUTENZIONE;
                }
            }
            
            public TblManStraRow this[int index] {
                get {
                    return ((TblManStraRow)(this.Rows[index]));
                }
            }
            
            public event TblManStraRowChangeEventHandler TblManStraRowChanged;
            
            public event TblManStraRowChangeEventHandler TblManStraRowChanging;
            
            public event TblManStraRowChangeEventHandler TblManStraRowDeleted;
            
            public event TblManStraRowChangeEventHandler TblManStraRowDeleting;
            
            public void AddTblManStraRow(TblManStraRow row) {
                this.Rows.Add(row);
            }
            
            public TblManStraRow AddTblManStraRow(System.Decimal IdEq, System.Decimal WR_ID, System.DateTime DATA_WR, System.Decimal WO_ID, System.DateTime PIANIFICATA, System.DateTime COMPLETATA, string STATO, string DESCRIZIONE, string ADDETTO, string MANUTENZIONE) {
                TblManStraRow rowTblManStraRow = ((TblManStraRow)(this.NewRow()));
                rowTblManStraRow.ItemArray = new object[] {
                        IdEq,
                        WR_ID,
                        DATA_WR,
                        WO_ID,
                        PIANIFICATA,
                        COMPLETATA,
                        STATO,
                        DESCRIZIONE,
                        ADDETTO,
                        MANUTENZIONE};
                this.Rows.Add(rowTblManStraRow);
                return rowTblManStraRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                TblManStraDataTable cln = ((TblManStraDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new TblManStraDataTable();
            }
            
            internal void InitVars() {
                this.columnIdEq = this.Columns["IdEq"];
                this.columnWR_ID = this.Columns["WR_ID"];
                this.columnDATA_WR = this.Columns["DATA_WR"];
                this.columnWO_ID = this.Columns["WO_ID"];
                this.columnPIANIFICATA = this.Columns["PIANIFICATA"];
                this.columnCOMPLETATA = this.Columns["COMPLETATA"];
                this.columnSTATO = this.Columns["STATO"];
                this.columnDESCRIZIONE = this.Columns["DESCRIZIONE"];
                this.columnADDETTO = this.Columns["ADDETTO"];
                this.columnMANUTENZIONE = this.Columns["MANUTENZIONE"];
            }
            
            private void InitClass() {
                this.columnIdEq = new DataColumn("IdEq", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnIdEq);
                this.columnWR_ID = new DataColumn("WR_ID", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWR_ID);
                this.columnDATA_WR = new DataColumn("DATA_WR", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDATA_WR);
                this.columnWO_ID = new DataColumn("WO_ID", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWO_ID);
                this.columnPIANIFICATA = new DataColumn("PIANIFICATA", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPIANIFICATA);
                this.columnCOMPLETATA = new DataColumn("COMPLETATA", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCOMPLETATA);
                this.columnSTATO = new DataColumn("STATO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSTATO);
                this.columnDESCRIZIONE = new DataColumn("DESCRIZIONE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDESCRIZIONE);
                this.columnADDETTO = new DataColumn("ADDETTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnADDETTO);
                this.columnMANUTENZIONE = new DataColumn("MANUTENZIONE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMANUTENZIONE);
            }
            
            public TblManStraRow NewTblManStraRow() {
                return ((TblManStraRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new TblManStraRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(TblManStraRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TblManStraRowChanged != null)) {
                    this.TblManStraRowChanged(this, new TblManStraRowChangeEvent(((TblManStraRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TblManStraRowChanging != null)) {
                    this.TblManStraRowChanging(this, new TblManStraRowChangeEvent(((TblManStraRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TblManStraRowDeleted != null)) {
                    this.TblManStraRowDeleted(this, new TblManStraRowChangeEvent(((TblManStraRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TblManStraRowDeleting != null)) {
                    this.TblManStraRowDeleting(this, new TblManStraRowChangeEvent(((TblManStraRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveTblManStraRow(TblManStraRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblManStraRow : DataRow {
            
            private TblManStraDataTable tableTblManStra;
            
            internal TblManStraRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableTblManStra = ((TblManStraDataTable)(this.Table));
            }
            
            public System.Decimal IdEq {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblManStra.IdEqColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManStra.IdEqColumn] = value;
                }
            }
            
            public System.Decimal WR_ID {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblManStra.WR_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManStra.WR_IDColumn] = value;
                }
            }
            
            public System.DateTime DATA_WR {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTblManStra.DATA_WRColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManStra.DATA_WRColumn] = value;
                }
            }
            
            public System.Decimal WO_ID {
                get {
                    try {
                        return ((System.Decimal)(this[this.tableTblManStra.WO_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManStra.WO_IDColumn] = value;
                }
            }
            
            public System.DateTime PIANIFICATA {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTblManStra.PIANIFICATAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManStra.PIANIFICATAColumn] = value;
                }
            }
            
            public System.DateTime COMPLETATA {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableTblManStra.COMPLETATAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManStra.COMPLETATAColumn] = value;
                }
            }
            
            public string STATO {
                get {
                    try {
                        return ((string)(this[this.tableTblManStra.STATOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManStra.STATOColumn] = value;
                }
            }
            
            public string DESCRIZIONE {
                get {
                    try {
                        return ((string)(this[this.tableTblManStra.DESCRIZIONEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManStra.DESCRIZIONEColumn] = value;
                }
            }
            
            public string ADDETTO {
                get {
                    try {
                        return ((string)(this[this.tableTblManStra.ADDETTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManStra.ADDETTOColumn] = value;
                }
            }
            
            public string MANUTENZIONE {
                get {
                    try {
                        return ((string)(this[this.tableTblManStra.MANUTENZIONEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Impossibile ottenere un valore perché è DBNull.", e);
                    }
                }
                set {
                    this[this.tableTblManStra.MANUTENZIONEColumn] = value;
                }
            }
            
            public bool IsIdEqNull() {
                return this.IsNull(this.tableTblManStra.IdEqColumn);
            }
            
            public void SetIdEqNull() {
                this[this.tableTblManStra.IdEqColumn] = System.Convert.DBNull;
            }
            
            public bool IsWR_IDNull() {
                return this.IsNull(this.tableTblManStra.WR_IDColumn);
            }
            
            public void SetWR_IDNull() {
                this[this.tableTblManStra.WR_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsDATA_WRNull() {
                return this.IsNull(this.tableTblManStra.DATA_WRColumn);
            }
            
            public void SetDATA_WRNull() {
                this[this.tableTblManStra.DATA_WRColumn] = System.Convert.DBNull;
            }
            
            public bool IsWO_IDNull() {
                return this.IsNull(this.tableTblManStra.WO_IDColumn);
            }
            
            public void SetWO_IDNull() {
                this[this.tableTblManStra.WO_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsPIANIFICATANull() {
                return this.IsNull(this.tableTblManStra.PIANIFICATAColumn);
            }
            
            public void SetPIANIFICATANull() {
                this[this.tableTblManStra.PIANIFICATAColumn] = System.Convert.DBNull;
            }
            
            public bool IsCOMPLETATANull() {
                return this.IsNull(this.tableTblManStra.COMPLETATAColumn);
            }
            
            public void SetCOMPLETATANull() {
                this[this.tableTblManStra.COMPLETATAColumn] = System.Convert.DBNull;
            }
            
            public bool IsSTATONull() {
                return this.IsNull(this.tableTblManStra.STATOColumn);
            }
            
            public void SetSTATONull() {
                this[this.tableTblManStra.STATOColumn] = System.Convert.DBNull;
            }
            
            public bool IsDESCRIZIONENull() {
                return this.IsNull(this.tableTblManStra.DESCRIZIONEColumn);
            }
            
            public void SetDESCRIZIONENull() {
                this[this.tableTblManStra.DESCRIZIONEColumn] = System.Convert.DBNull;
            }
            
            public bool IsADDETTONull() {
                return this.IsNull(this.tableTblManStra.ADDETTOColumn);
            }
            
            public void SetADDETTONull() {
                this[this.tableTblManStra.ADDETTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsMANUTENZIONENull() {
                return this.IsNull(this.tableTblManStra.MANUTENZIONEColumn);
            }
            
            public void SetMANUTENZIONENull() {
                this[this.tableTblManStra.MANUTENZIONEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblManStraRowChangeEvent : EventArgs {
            
            private TblManStraRow eventRow;
            
            private DataRowAction eventAction;
            
            public TblManStraRowChangeEvent(TblManStraRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public TblManStraRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
