//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2407
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace TheSite.SchemiXSD {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class DsPianoMp : DataSet {
        
        private TblMainDataTable tableTblMain;
        
        private TblPassiDataTable tableTblPassi;
        
        public DsPianoMp() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DsPianoMp(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["TblMain"] != null)) {
                    this.Tables.Add(new TblMainDataTable(ds.Tables["TblMain"]));
                }
                if ((ds.Tables["TblPassi"] != null)) {
                    this.Tables.Add(new TblPassiDataTable(ds.Tables["TblPassi"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TblMainDataTable TblMain {
            get {
                return this.tableTblMain;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TblPassiDataTable TblPassi {
            get {
                return this.tableTblPassi;
            }
        }
        
        public override DataSet Clone() {
            DsPianoMp cln = ((DsPianoMp)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["TblMain"] != null)) {
                this.Tables.Add(new TblMainDataTable(ds.Tables["TblMain"]));
            }
            if ((ds.Tables["TblPassi"] != null)) {
                this.Tables.Add(new TblPassiDataTable(ds.Tables["TblPassi"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableTblMain = ((TblMainDataTable)(this.Tables["TblMain"]));
            if ((this.tableTblMain != null)) {
                this.tableTblMain.InitVars();
            }
            this.tableTblPassi = ((TblPassiDataTable)(this.Tables["TblPassi"]));
            if ((this.tableTblPassi != null)) {
                this.tableTblPassi.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "DsPianoMp";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DsPianoMp.xsd";
            this.Locale = new System.Globalization.CultureInfo("it-IT");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableTblMain = new TblMainDataTable();
            this.Tables.Add(this.tableTblMain);
            this.tableTblPassi = new TblPassiDataTable();
            this.Tables.Add(this.tableTblPassi);
        }
        
        private bool ShouldSerializeTblMain() {
            return false;
        }
        
        private bool ShouldSerializeTblPassi() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void TblMainRowChangeEventHandler(object sender, TblMainRowChangeEvent e);
        
        public delegate void TblPassiRowChangeEventHandler(object sender, TblPassiRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblMainDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnNOME_EDIFICIO;
            
            private DataColumn columnINDIRIZZO;
            
            private DataColumn columnCODICE_EDIFICIO;
            
            private DataColumn columnID_EDIFICIO;
            
            private DataColumn columnMESE;
            
            private DataColumn columnANNO;
            
            private DataColumn columnMESE_ESTESO;
            
            private DataColumn columnSERVIZIO;
            
            private DataColumn columnID_SERVIZIO;
            
            private DataColumn columnID_PMP;
            
            private DataColumn columnPROCEDURA_MANUTENZIONE;
            
            private DataColumn columnID_CLASSE_ELEMENTO;
            
            private DataColumn columnCODICE_ELEMENTO;
            
            private DataColumn columnCLASSE_ELEMENTO;
            
            private DataColumn columnPIANO;
            
            private DataColumn columnORDINE_PIANO;
            
            internal TblMainDataTable() : 
                    base("TblMain") {
                this.InitClass();
            }
            
            internal TblMainDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn NOME_EDIFICIOColumn {
                get {
                    return this.columnNOME_EDIFICIO;
                }
            }
            
            internal DataColumn INDIRIZZOColumn {
                get {
                    return this.columnINDIRIZZO;
                }
            }
            
            internal DataColumn CODICE_EDIFICIOColumn {
                get {
                    return this.columnCODICE_EDIFICIO;
                }
            }
            
            internal DataColumn ID_EDIFICIOColumn {
                get {
                    return this.columnID_EDIFICIO;
                }
            }
            
            internal DataColumn MESEColumn {
                get {
                    return this.columnMESE;
                }
            }
            
            internal DataColumn ANNOColumn {
                get {
                    return this.columnANNO;
                }
            }
            
            internal DataColumn MESE_ESTESOColumn {
                get {
                    return this.columnMESE_ESTESO;
                }
            }
            
            internal DataColumn SERVIZIOColumn {
                get {
                    return this.columnSERVIZIO;
                }
            }
            
            internal DataColumn ID_SERVIZIOColumn {
                get {
                    return this.columnID_SERVIZIO;
                }
            }
            
            internal DataColumn ID_PMPColumn {
                get {
                    return this.columnID_PMP;
                }
            }
            
            internal DataColumn PROCEDURA_MANUTENZIONEColumn {
                get {
                    return this.columnPROCEDURA_MANUTENZIONE;
                }
            }
            
            internal DataColumn ID_CLASSE_ELEMENTOColumn {
                get {
                    return this.columnID_CLASSE_ELEMENTO;
                }
            }
            
            internal DataColumn CODICE_ELEMENTOColumn {
                get {
                    return this.columnCODICE_ELEMENTO;
                }
            }
            
            internal DataColumn CLASSE_ELEMENTOColumn {
                get {
                    return this.columnCLASSE_ELEMENTO;
                }
            }
            
            internal DataColumn PIANOColumn {
                get {
                    return this.columnPIANO;
                }
            }
            
            internal DataColumn ORDINE_PIANOColumn {
                get {
                    return this.columnORDINE_PIANO;
                }
            }
            
            public TblMainRow this[int index] {
                get {
                    return ((TblMainRow)(this.Rows[index]));
                }
            }
            
            public event TblMainRowChangeEventHandler TblMainRowChanged;
            
            public event TblMainRowChangeEventHandler TblMainRowChanging;
            
            public event TblMainRowChangeEventHandler TblMainRowDeleted;
            
            public event TblMainRowChangeEventHandler TblMainRowDeleting;
            
            public void AddTblMainRow(TblMainRow row) {
                this.Rows.Add(row);
            }
            
            public TblMainRow AddTblMainRow(
                        string NOME_EDIFICIO, 
                        string INDIRIZZO, 
                        string CODICE_EDIFICIO, 
                        long ID_EDIFICIO, 
                        string MESE, 
                        string ANNO, 
                        string MESE_ESTESO, 
                        string SERVIZIO, 
                        long ID_SERVIZIO, 
                        long ID_PMP, 
                        string PROCEDURA_MANUTENZIONE, 
                        long ID_CLASSE_ELEMENTO, 
                        string CODICE_ELEMENTO, 
                        string CLASSE_ELEMENTO, 
                        string PIANO, 
                        long ORDINE_PIANO) {
                TblMainRow rowTblMainRow = ((TblMainRow)(this.NewRow()));
                rowTblMainRow.ItemArray = new object[] {
                        NOME_EDIFICIO,
                        INDIRIZZO,
                        CODICE_EDIFICIO,
                        ID_EDIFICIO,
                        MESE,
                        ANNO,
                        MESE_ESTESO,
                        SERVIZIO,
                        ID_SERVIZIO,
                        ID_PMP,
                        PROCEDURA_MANUTENZIONE,
                        ID_CLASSE_ELEMENTO,
                        CODICE_ELEMENTO,
                        CLASSE_ELEMENTO,
                        PIANO,
                        ORDINE_PIANO};
                this.Rows.Add(rowTblMainRow);
                return rowTblMainRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                TblMainDataTable cln = ((TblMainDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new TblMainDataTable();
            }
            
            internal void InitVars() {
                this.columnNOME_EDIFICIO = this.Columns["NOME_EDIFICIO"];
                this.columnINDIRIZZO = this.Columns["INDIRIZZO"];
                this.columnCODICE_EDIFICIO = this.Columns["CODICE_EDIFICIO"];
                this.columnID_EDIFICIO = this.Columns["ID_EDIFICIO"];
                this.columnMESE = this.Columns["MESE"];
                this.columnANNO = this.Columns["ANNO"];
                this.columnMESE_ESTESO = this.Columns["MESE_ESTESO"];
                this.columnSERVIZIO = this.Columns["SERVIZIO"];
                this.columnID_SERVIZIO = this.Columns["ID_SERVIZIO"];
                this.columnID_PMP = this.Columns["ID_PMP"];
                this.columnPROCEDURA_MANUTENZIONE = this.Columns["PROCEDURA_MANUTENZIONE"];
                this.columnID_CLASSE_ELEMENTO = this.Columns["ID_CLASSE_ELEMENTO"];
                this.columnCODICE_ELEMENTO = this.Columns["CODICE_ELEMENTO"];
                this.columnCLASSE_ELEMENTO = this.Columns["CLASSE_ELEMENTO"];
                this.columnPIANO = this.Columns["PIANO"];
                this.columnORDINE_PIANO = this.Columns["ORDINE_PIANO"];
            }
            
            private void InitClass() {
                this.columnNOME_EDIFICIO = new DataColumn("NOME_EDIFICIO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOME_EDIFICIO);
                this.columnINDIRIZZO = new DataColumn("INDIRIZZO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnINDIRIZZO);
                this.columnCODICE_EDIFICIO = new DataColumn("CODICE_EDIFICIO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCODICE_EDIFICIO);
                this.columnID_EDIFICIO = new DataColumn("ID_EDIFICIO", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnID_EDIFICIO);
                this.columnMESE = new DataColumn("MESE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMESE);
                this.columnANNO = new DataColumn("ANNO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnANNO);
                this.columnMESE_ESTESO = new DataColumn("MESE_ESTESO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMESE_ESTESO);
                this.columnSERVIZIO = new DataColumn("SERVIZIO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSERVIZIO);
                this.columnID_SERVIZIO = new DataColumn("ID_SERVIZIO", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnID_SERVIZIO);
                this.columnID_PMP = new DataColumn("ID_PMP", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnID_PMP);
                this.columnPROCEDURA_MANUTENZIONE = new DataColumn("PROCEDURA_MANUTENZIONE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPROCEDURA_MANUTENZIONE);
                this.columnID_CLASSE_ELEMENTO = new DataColumn("ID_CLASSE_ELEMENTO", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnID_CLASSE_ELEMENTO);
                this.columnCODICE_ELEMENTO = new DataColumn("CODICE_ELEMENTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCODICE_ELEMENTO);
                this.columnCLASSE_ELEMENTO = new DataColumn("CLASSE_ELEMENTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCLASSE_ELEMENTO);
                this.columnPIANO = new DataColumn("PIANO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPIANO);
                this.columnORDINE_PIANO = new DataColumn("ORDINE_PIANO", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnORDINE_PIANO);
                this.columnNOME_EDIFICIO.AllowDBNull = false;
                this.columnINDIRIZZO.AllowDBNull = false;
                this.columnCODICE_EDIFICIO.AllowDBNull = false;
                this.columnID_EDIFICIO.AllowDBNull = false;
                this.columnMESE.AllowDBNull = false;
                this.columnANNO.AllowDBNull = false;
                this.columnMESE_ESTESO.AllowDBNull = false;
                this.columnSERVIZIO.AllowDBNull = false;
                this.columnID_SERVIZIO.AllowDBNull = false;
                this.columnID_PMP.AllowDBNull = false;
                this.columnPROCEDURA_MANUTENZIONE.AllowDBNull = false;
                this.columnID_CLASSE_ELEMENTO.AllowDBNull = false;
                this.columnCODICE_ELEMENTO.AllowDBNull = false;
                this.columnCLASSE_ELEMENTO.AllowDBNull = false;
                this.columnPIANO.AllowDBNull = false;
                this.columnORDINE_PIANO.AllowDBNull = false;
            }
            
            public TblMainRow NewTblMainRow() {
                return ((TblMainRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new TblMainRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(TblMainRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TblMainRowChanged != null)) {
                    this.TblMainRowChanged(this, new TblMainRowChangeEvent(((TblMainRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TblMainRowChanging != null)) {
                    this.TblMainRowChanging(this, new TblMainRowChangeEvent(((TblMainRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TblMainRowDeleted != null)) {
                    this.TblMainRowDeleted(this, new TblMainRowChangeEvent(((TblMainRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TblMainRowDeleting != null)) {
                    this.TblMainRowDeleting(this, new TblMainRowChangeEvent(((TblMainRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveTblMainRow(TblMainRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblMainRow : DataRow {
            
            private TblMainDataTable tableTblMain;
            
            internal TblMainRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableTblMain = ((TblMainDataTable)(this.Table));
            }
            
            public string NOME_EDIFICIO {
                get {
                    return ((string)(this[this.tableTblMain.NOME_EDIFICIOColumn]));
                }
                set {
                    this[this.tableTblMain.NOME_EDIFICIOColumn] = value;
                }
            }
            
            public string INDIRIZZO {
                get {
                    return ((string)(this[this.tableTblMain.INDIRIZZOColumn]));
                }
                set {
                    this[this.tableTblMain.INDIRIZZOColumn] = value;
                }
            }
            
            public string CODICE_EDIFICIO {
                get {
                    return ((string)(this[this.tableTblMain.CODICE_EDIFICIOColumn]));
                }
                set {
                    this[this.tableTblMain.CODICE_EDIFICIOColumn] = value;
                }
            }
            
            public long ID_EDIFICIO {
                get {
                    return ((long)(this[this.tableTblMain.ID_EDIFICIOColumn]));
                }
                set {
                    this[this.tableTblMain.ID_EDIFICIOColumn] = value;
                }
            }
            
            public string MESE {
                get {
                    return ((string)(this[this.tableTblMain.MESEColumn]));
                }
                set {
                    this[this.tableTblMain.MESEColumn] = value;
                }
            }
            
            public string ANNO {
                get {
                    return ((string)(this[this.tableTblMain.ANNOColumn]));
                }
                set {
                    this[this.tableTblMain.ANNOColumn] = value;
                }
            }
            
            public string MESE_ESTESO {
                get {
                    return ((string)(this[this.tableTblMain.MESE_ESTESOColumn]));
                }
                set {
                    this[this.tableTblMain.MESE_ESTESOColumn] = value;
                }
            }
            
            public string SERVIZIO {
                get {
                    return ((string)(this[this.tableTblMain.SERVIZIOColumn]));
                }
                set {
                    this[this.tableTblMain.SERVIZIOColumn] = value;
                }
            }
            
            public long ID_SERVIZIO {
                get {
                    return ((long)(this[this.tableTblMain.ID_SERVIZIOColumn]));
                }
                set {
                    this[this.tableTblMain.ID_SERVIZIOColumn] = value;
                }
            }
            
            public long ID_PMP {
                get {
                    return ((long)(this[this.tableTblMain.ID_PMPColumn]));
                }
                set {
                    this[this.tableTblMain.ID_PMPColumn] = value;
                }
            }
            
            public string PROCEDURA_MANUTENZIONE {
                get {
                    return ((string)(this[this.tableTblMain.PROCEDURA_MANUTENZIONEColumn]));
                }
                set {
                    this[this.tableTblMain.PROCEDURA_MANUTENZIONEColumn] = value;
                }
            }
            
            public long ID_CLASSE_ELEMENTO {
                get {
                    return ((long)(this[this.tableTblMain.ID_CLASSE_ELEMENTOColumn]));
                }
                set {
                    this[this.tableTblMain.ID_CLASSE_ELEMENTOColumn] = value;
                }
            }
            
            public string CODICE_ELEMENTO {
                get {
                    return ((string)(this[this.tableTblMain.CODICE_ELEMENTOColumn]));
                }
                set {
                    this[this.tableTblMain.CODICE_ELEMENTOColumn] = value;
                }
            }
            
            public string CLASSE_ELEMENTO {
                get {
                    return ((string)(this[this.tableTblMain.CLASSE_ELEMENTOColumn]));
                }
                set {
                    this[this.tableTblMain.CLASSE_ELEMENTOColumn] = value;
                }
            }
            
            public string PIANO {
                get {
                    return ((string)(this[this.tableTblMain.PIANOColumn]));
                }
                set {
                    this[this.tableTblMain.PIANOColumn] = value;
                }
            }
            
            public long ORDINE_PIANO {
                get {
                    return ((long)(this[this.tableTblMain.ORDINE_PIANOColumn]));
                }
                set {
                    this[this.tableTblMain.ORDINE_PIANOColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblMainRowChangeEvent : EventArgs {
            
            private TblMainRow eventRow;
            
            private DataRowAction eventAction;
            
            public TblMainRowChangeEvent(TblMainRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public TblMainRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblPassiDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnISTRUZIONE;
            
            private DataColumn columnPASSO;
            
            private DataColumn columnID_PMP;
            
            internal TblPassiDataTable() : 
                    base("TblPassi") {
                this.InitClass();
            }
            
            internal TblPassiDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn ISTRUZIONEColumn {
                get {
                    return this.columnISTRUZIONE;
                }
            }
            
            internal DataColumn PASSOColumn {
                get {
                    return this.columnPASSO;
                }
            }
            
            internal DataColumn ID_PMPColumn {
                get {
                    return this.columnID_PMP;
                }
            }
            
            public TblPassiRow this[int index] {
                get {
                    return ((TblPassiRow)(this.Rows[index]));
                }
            }
            
            public event TblPassiRowChangeEventHandler TblPassiRowChanged;
            
            public event TblPassiRowChangeEventHandler TblPassiRowChanging;
            
            public event TblPassiRowChangeEventHandler TblPassiRowDeleted;
            
            public event TblPassiRowChangeEventHandler TblPassiRowDeleting;
            
            public void AddTblPassiRow(TblPassiRow row) {
                this.Rows.Add(row);
            }
            
            public TblPassiRow AddTblPassiRow(string ISTRUZIONE, long PASSO, long ID_PMP) {
                TblPassiRow rowTblPassiRow = ((TblPassiRow)(this.NewRow()));
                rowTblPassiRow.ItemArray = new object[] {
                        ISTRUZIONE,
                        PASSO,
                        ID_PMP};
                this.Rows.Add(rowTblPassiRow);
                return rowTblPassiRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                TblPassiDataTable cln = ((TblPassiDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new TblPassiDataTable();
            }
            
            internal void InitVars() {
                this.columnISTRUZIONE = this.Columns["ISTRUZIONE"];
                this.columnPASSO = this.Columns["PASSO"];
                this.columnID_PMP = this.Columns["ID_PMP"];
            }
            
            private void InitClass() {
                this.columnISTRUZIONE = new DataColumn("ISTRUZIONE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnISTRUZIONE);
                this.columnPASSO = new DataColumn("PASSO", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPASSO);
                this.columnID_PMP = new DataColumn("ID_PMP", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnID_PMP);
                this.columnISTRUZIONE.AllowDBNull = false;
                this.columnPASSO.AllowDBNull = false;
                this.columnID_PMP.AllowDBNull = false;
            }
            
            public TblPassiRow NewTblPassiRow() {
                return ((TblPassiRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new TblPassiRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(TblPassiRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TblPassiRowChanged != null)) {
                    this.TblPassiRowChanged(this, new TblPassiRowChangeEvent(((TblPassiRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TblPassiRowChanging != null)) {
                    this.TblPassiRowChanging(this, new TblPassiRowChangeEvent(((TblPassiRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TblPassiRowDeleted != null)) {
                    this.TblPassiRowDeleted(this, new TblPassiRowChangeEvent(((TblPassiRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TblPassiRowDeleting != null)) {
                    this.TblPassiRowDeleting(this, new TblPassiRowChangeEvent(((TblPassiRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveTblPassiRow(TblPassiRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblPassiRow : DataRow {
            
            private TblPassiDataTable tableTblPassi;
            
            internal TblPassiRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableTblPassi = ((TblPassiDataTable)(this.Table));
            }
            
            public string ISTRUZIONE {
                get {
                    return ((string)(this[this.tableTblPassi.ISTRUZIONEColumn]));
                }
                set {
                    this[this.tableTblPassi.ISTRUZIONEColumn] = value;
                }
            }
            
            public long PASSO {
                get {
                    return ((long)(this[this.tableTblPassi.PASSOColumn]));
                }
                set {
                    this[this.tableTblPassi.PASSOColumn] = value;
                }
            }
            
            public long ID_PMP {
                get {
                    return ((long)(this[this.tableTblPassi.ID_PMPColumn]));
                }
                set {
                    this[this.tableTblPassi.ID_PMPColumn] = value;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class TblPassiRowChangeEvent : EventArgs {
            
            private TblPassiRow eventRow;
            
            private DataRowAction eventAction;
            
            public TblPassiRowChangeEvent(TblPassiRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public TblPassiRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
